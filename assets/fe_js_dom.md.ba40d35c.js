import{_ as s,c as a,o as l,Q as n}from"./chunks/framework.f14b72c3.js";const u=JSON.parse('{"title":"DOM","description":"","frontmatter":{},"headers":[],"relativePath":"fe/js/dom.md","lastUpdated":1683514170000}'),o={name:"fe/js/dom.md"},p=n(`<h1 id="dom" tabindex="-1">DOM <a class="header-anchor" href="#dom" aria-label="Permalink to &quot;DOM&quot;">​</a></h1><h2 id="基础操作" tabindex="-1">基础操作 <a class="header-anchor" href="#基础操作" aria-label="Permalink to &quot;基础操作&quot;">​</a></h2><h3 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h3><p>DOM : Document Object Model 文档对象模型</p><p>Document : html 文档</p><p>Object : html 元素</p><p>Model : 树模型(dom 树)</p><p>是一组用来描述 js 代码怎样与 html 文档进行交互和访问的 web 标准，它定义了一系列对象、方法和属性，用于访问、操作和创建文档中的内容、结构、样式和行为。</p><h4 id="js-和-dom-的关系" tabindex="-1">js 和 dom 的关系 <a class="header-anchor" href="#js-和-dom-的关系" aria-label="Permalink to &quot;js 和 dom 的关系&quot;">​</a></h4><p>js 包括 dom，js 由 ECMAScript、DOM、BOM 组成</p><h4 id="节点" tabindex="-1">节点 <a class="header-anchor" href="#节点" aria-label="Permalink to &quot;节点&quot;">​</a></h4><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">a</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">href</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">http://www.baidu.com</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;百度&lt;/</span><span style="color:#FF79C6;">a</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>整个元素表示元素节点；</li><li>href=&quot;<a href="http://www.baidu.com" target="_blank" rel="noreferrer">http://www.baidu.com</a>&quot; 表示属性节点；</li><li>百度 表示文本节点</li></ul><h3 id="操作元素节点" tabindex="-1">操作元素节点 <a class="header-anchor" href="#操作元素节点" aria-label="Permalink to &quot;操作元素节点&quot;">​</a></h3><ul><li>创建 createElement</li><li>插入 appendChild、insertBefore</li><li>复制 cloneNode</li><li>删除 removeChild</li><li>替换 replaceChild</li></ul><h4 id="createelement" tabindex="-1">createElement <a class="header-anchor" href="#createelement" aria-label="Permalink to &quot;createElement&quot;">​</a></h4><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;!</span><span style="color:#FF79C6;">DOCTYPE</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">html</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">html</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">lang</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">en</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">head</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#FF79C6;">meta</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">charset</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">UTF-8</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#FF79C6;">title</span><span style="color:#F8F8F2;">&gt;Title&lt;/</span><span style="color:#FF79C6;">title</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;/</span><span style="color:#FF79C6;">head</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">body</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#FF79C6;">div</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">id</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">box</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#FF79C6;">div</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;/</span><span style="color:#FF79C6;">body</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> h1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">h1</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(h1) </span><span style="color:#6272A4;">// &lt;h1&gt;&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">html</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>创建好的元素并未添加进页面</p><h4 id="appendchild、insertbefore" tabindex="-1">appendChild、insertBefore <a class="header-anchor" href="#appendchild、insertbefore" aria-label="Permalink to &quot;appendChild、insertBefore&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> h1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">h1</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> h2 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">h2</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> box </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">box</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">box.</span><span style="color:#50FA7B;">appendChild</span><span style="color:#F8F8F2;">(h1)</span></span>
<span class="line"><span style="color:#F8F8F2;">box.</span><span style="color:#50FA7B;">insertBefore</span><span style="color:#F8F8F2;">(h2, h1) </span><span style="color:#6272A4;">//将h2添加到h1的前面</span></span>
<span class="line"></span></code></pre></div><h4 id="clonenode" tabindex="-1">cloneNode <a class="header-anchor" href="#clonenode" aria-label="Permalink to &quot;cloneNode&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// &lt;div id=&quot;box&quot;&gt;hello&lt;/div&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> box </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">box</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> rs </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> box.</span><span style="color:#50FA7B;">cloneNode</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">//浅复制</span></span>
<span class="line"><span style="color:#6272A4;">//let rs = box.cloneNode(true) //深复制</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(rs)</span></span>
<span class="line"></span></code></pre></div><h4 id="removechild" tabindex="-1">removeChild <a class="header-anchor" href="#removechild" aria-label="Permalink to &quot;removeChild&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">/**</span></span>
<span class="line"><span style="color:#6272A4;">&lt;div id=&quot;box&quot;&gt;</span></span>
<span class="line"><span style="color:#6272A4;">    &lt;h1&gt;hello&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#6272A4;">    &lt;p&gt;world&lt;/p&gt;</span></span>
<span class="line"><span style="color:#6272A4;">&lt;/div&gt;</span></span>
<span class="line"><span style="color:#6272A4;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> box </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">box</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> rm </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementsByTagName</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">p</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">box.</span><span style="color:#50FA7B;">removeChild</span><span style="color:#F8F8F2;">(rm) </span><span style="color:#6272A4;">//删除p元素</span></span>
<span class="line"></span></code></pre></div><h4 id="replacechild" tabindex="-1">replaceChild <a class="header-anchor" href="#replacechild" aria-label="Permalink to &quot;replaceChild&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">/**</span></span>
<span class="line"><span style="color:#6272A4;">&lt;div id=&quot;box&quot;&gt;</span></span>
<span class="line"><span style="color:#6272A4;">    &lt;h1&gt;hello&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#6272A4;">&lt;/div&gt;</span></span>
<span class="line"><span style="color:#6272A4;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> box </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">box</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> h1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> box.</span><span style="color:#50FA7B;">getElementsByTagName</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">h1</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> p </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">p</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">box.</span><span style="color:#50FA7B;">replaceChild</span><span style="color:#F8F8F2;">(p, h1)</span></span>
<span class="line"></span></code></pre></div><h3 id="操作属性节点" tabindex="-1">操作属性节点 <a class="header-anchor" href="#操作属性节点" aria-label="Permalink to &quot;操作属性节点&quot;">​</a></h3><p>两种操作方式：</p><ul><li>对象.属性</li><li>setAttribute()、getAttribute()</li></ul><p><code>对象.属性</code>方式只对 html 中定义的属性起作用，可获取或修改属性</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// &lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> a </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementsByTagName</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(a.href)</span></span>
<span class="line"><span style="color:#6272A4;">// a.href = &#39;xxx&#39;</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>属性节点并没有作为节点出现</p></div><h3 id="操作文本节点" tabindex="-1">操作文本节点 <a class="header-anchor" href="#操作文本节点" aria-label="Permalink to &quot;操作文本节点&quot;">​</a></h3><h2 id="js-事件绑定的方式" tabindex="-1">JS 事件绑定的方式 <a class="header-anchor" href="#js-事件绑定的方式" aria-label="Permalink to &quot;JS 事件绑定的方式&quot;">​</a></h2><ul><li>行内绑定</li><li>动态绑定</li><li>事件监听</li></ul><h3 id="行内绑定" tabindex="-1">行内绑定 <a class="header-anchor" href="#行内绑定" aria-label="Permalink to &quot;行内绑定&quot;">​</a></h3><p>&lt;标签 属性列表 事件=&quot;事件的处理程序&quot; /&gt;</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">input</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">button</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">onclick</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;">display</span><span style="color:#F8F8F2;">()</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="动态绑定" tabindex="-1">动态绑定 <a class="header-anchor" href="#动态绑定" aria-label="Permalink to &quot;动态绑定&quot;">​</a></h3><p>dom 对象.事件 = 事件的处理程序（通常是一个匿名函数）</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">input</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">id</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">demo</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">button</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">value</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">点击我，显示 type 属性</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">text/javascript</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">demo</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">onclick</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">alert</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">getAttribute</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">type</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#6272A4;">// this 指当前发生事件的HTML元素，这里是&lt;div&gt;标签</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="绑定事件处理函数" tabindex="-1">绑定事件处理函数 <a class="header-anchor" href="#绑定事件处理函数" aria-label="Permalink to &quot;绑定事件处理函数&quot;">​</a></h3><p>用 <code>addEventListener()</code> 或 <code>attachEvent()</code> 来绑定事件监听函数 用 <code>addEventListener()</code> 或 <code>attachEvent()</code> 来绑定事件监听函数</p><p>IE8.0 及其以下版本不支持<code>addEventListener()</code> ，它使用<code>attachEvent()</code>来绑定事件监听函数</p><p><a href="https://www.cnblogs.com/javawebstudy/p/5266168.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/javawebstudy/p/5266168.html</a></p><h2 id="target-和-currenttarget-的区别" tabindex="-1">target 和 currentTarget 的区别 <a class="header-anchor" href="#target-和-currenttarget-的区别" aria-label="Permalink to &quot;target 和 currentTarget 的区别&quot;">​</a></h2><p><code>e.target</code> 指向触发事件监听的对象。</p><p><code>e.currentTarget</code> 指向添加监听事件的对象。</p><p><a href="https://www.jianshu.com/p/1dd668ccc97a" target="_blank" rel="noreferrer">https://www.jianshu.com/p/1dd668ccc97a</a></p><h2 id="事件委托" tabindex="-1">事件委托 <a class="header-anchor" href="#事件委托" aria-label="Permalink to &quot;事件委托&quot;">​</a></h2><p>事件委托利用了事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。</p><p><a href="https://www.cnblogs.com/Chen-XiaoJun/p/6210987.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/Chen-XiaoJun/p/6210987.html</a></p><h2 id="getboundingclientrect" tabindex="-1">getBoundingClientRect <a class="header-anchor" href="#getboundingclientrect" aria-label="Permalink to &quot;getBoundingClientRect&quot;">​</a></h2><p>获取元素的大小及其相对于视口的位置</p><p><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418111.png" alt="image"></p><h2 id="scrollheight、clientheight、innerheight" tabindex="-1">scrollHeight、clientHeight、innerHeight <a class="header-anchor" href="#scrollheight、clientheight、innerheight" aria-label="Permalink to &quot;scrollHeight、clientHeight、innerHeight&quot;">​</a></h2>`,56),e=[p];function t(c,F,r,i,y,d){return l(),a("div",null,e)}const g=s(o,[["render",t]]);export{u as __pageData,g as default};
