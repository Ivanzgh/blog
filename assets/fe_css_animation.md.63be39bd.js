import{_ as a,c as n,o as l,x as s,a as o,Q as e}from"./chunks/framework.f14b72c3.js";const b=JSON.parse('{"title":"动画","description":"","frontmatter":{},"headers":[],"relativePath":"fe/css/animation.md","lastUpdated":1695604450000}'),p={name:"fe/css/animation.md"},t=s("h1",{id:"动画",tabindex:"-1"},[o("动画 "),s("a",{class:"header-anchor",href:"#动画","aria-label":'Permalink to "动画"'},"​")],-1),c=s("iframe",{id:"embed_dom",name:"embed_dom",frameborder:"0",style:{display:"block",width:"100%",height:"600px"},src:"https://www.processon.com/embed/642a91d2f967315e33ee331a"},null,-1),F=e(`<h2 id="transition-过渡" tabindex="-1">transition 过渡 <a class="header-anchor" href="#transition-过渡" aria-label="Permalink to &quot;transition 过渡&quot;">​</a></h2><p>语法：<code>transition: &lt;过渡属性&gt; &lt;过渡时间&gt; &lt;缓动函数&gt; &lt;延迟时间&gt;</code></p><ul><li><code>transition-property</code>：指定要过渡的 CSS 属性，可以是单个或多个属性，多个属性之间用逗号分隔</li><li><code>transition-duration</code>：指定过渡的持续时间，以秒或毫秒为单位</li><li><code>transition-timing-function</code>：控制过渡过程中变化的速度和方式 <ul><li><code>linear</code> 匀速</li><li><code>ease</code>：默认值，以低速开始，然后加快，在结束前变慢</li><li><code>ease-in</code>：以低速开始</li><li><code>ease-out</code>：以低速结束</li><li><code>ease-in-out</code>：缓慢开始，缓慢结束</li><li><code>cubic-bezier()</code> 贝塞尔曲线</li></ul></li><li><code>transition-delay</code>：指定过渡效果的延迟时间，以秒或毫秒为单位</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#50FA7B;font-style:italic;">.box</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">height</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">background-color</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">#ff0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">opacity</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">transition</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">all</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">ease</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;">.box</span><span style="color:#FF79C6;font-style:italic;">:</span><span style="color:#50FA7B;font-style:italic;">hover</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">opacity</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;">.box1</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">height</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">background-color</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">#f00</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">transition</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> width </span><span style="color:#BD93F9;">0.5</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">ease-in-out</span><span style="color:#F8F8F2;">, height </span><span style="color:#BD93F9;">0.5</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">ease-in-out</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;">.box1</span><span style="color:#FF79C6;font-style:italic;">:</span><span style="color:#50FA7B;font-style:italic;">hover</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">200</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">height</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">200</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>其他的属性：</p><ul><li><code>transition: all</code> 指定所有 CSS 属性都要过渡</li><li><code>transition: none</code> 禁用所有过渡效果</li><li><code>transition: initial</code> 将所有过渡效果恢复到默认值</li><li><code>transition: inherit</code> 从父元素继承过渡效果</li></ul><p>注意不是所有的 CSS 属性都支持过渡效果</p><h2 id="animation" tabindex="-1">animation <a class="header-anchor" href="#animation" aria-label="Permalink to &quot;animation&quot;">​</a></h2><ul><li><code>@keyframes</code>定义动画规则</li><li>0% 是动画的开始，100% 是动画的完成</li><li>关键词 <code>from</code> 和 <code>to</code>，等同于 0% 和 100%</li><li>要注意兼容性，一般要加浏览器前缀</li></ul><p>示例：<code>animation: box 5s;</code>表示动画名称是<code>box</code>，动画时间是 5s</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#50FA7B;font-style:italic;">.container</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">300</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">height</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">300</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">background</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">#f00</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">animation</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> box </span><span style="color:#BD93F9;">5</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;font-style:italic;">-o-animation</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> box </span><span style="color:#BD93F9;">5</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;">; </span><span style="color:#6272A4;">/* Opera */</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;font-style:italic;">-moz-animation</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> box </span><span style="color:#BD93F9;">5</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;">; </span><span style="color:#6272A4;">/* Firefox */</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;font-style:italic;">-webkit-animation</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> box </span><span style="color:#BD93F9;">5</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;">; </span><span style="color:#6272A4;">/* Safari and Chrome */</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">@keyframes</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">box</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  0% {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;">background</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">#f00</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  100% {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;">background</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">#00f</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">@-o-keyframes</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">box</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">/* 同上 */</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">@-moz-keyframes</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">box</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">/* 同上 */</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">@-webkit-keyframes</span><span style="color:#F8F8F2;"> </span><span style="color:#FFB86C;font-style:italic;">box</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">/* 同上 */</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="动画属性" tabindex="-1">动画属性 <a class="header-anchor" href="#动画属性" aria-label="Permalink to &quot;动画属性&quot;">​</a></h3><ul><li><code>animation</code> 简写：<code>animation: name duration timing-function delay iteration-count direction fill-model play-pause:</code></li><li><code>animation-name</code> 规定 <code>@keyframes</code> 动画的名称</li><li><code>animation-duration</code> 规定动画完成一个周期所花费的秒或毫秒。默认是 0</li><li><code>animation-timing-function</code> 缓动函数，定义在每一个动画周期中执行的节奏 <ul><li><code>linear</code>：匀速</li><li><code>ease</code>：默认值，动画以低速开始，然后加快，在结束前变慢</li><li><code>ease-in</code>：以低速开始</li><li><code>ease-out</code>：以低速结束</li><li><code>ease-in-out</code>：开始和结束均低速</li><li><code>cubic-bezier(n, n, n, n)</code>：三次贝塞尔曲线，取值范围 0 到 1</li><li><code>steps(number, position)</code>可以让动画不连续 <ul><li>示例：steps(4, end)</li><li>number：表示把动画分成了多少段</li><li>position：表示动画是从时间段的开头连续还是末尾连续</li></ul></li></ul></li><li><code>animation-delay</code> 延迟时间 <ul><li>立即开始，默认值 0 秒，单位是 s 或 ms</li><li>正数，表示几秒后开始</li><li>负数，表示立即开始，但是位置从某个时间点开始</li></ul></li><li><code>animation-iteration-count</code> 播放次数 <ul><li>默认值 1，可以是小数</li><li><code>infinite</code>表示无限次</li></ul></li><li><code>animation-direction</code> 播放方向 <ul><li><code>normal</code>：正向播放，默认值</li><li><code>reverse</code>：反向播放</li><li><code>alternate</code>：正反交替播放，第一次迭代是正向播放</li><li><code>alternate-reverse</code>：正反交替播放，第一次迭代是反向播放</li></ul></li><li><code>animation-fill-mode</code> 动画在执行之前和之后，如何将样式应用于目标</li><li><code>animation-play-state</code> 规定动画是否正在运行或暂停 <ul><li><code>running</code>：运行中，默认值</li><li><code>paused</code>：暂停</li><li>恢复暂停的动画将从暂停时停止的位置开始播放</li></ul></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#50FA7B;font-style:italic;">.container</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">300</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">height</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">300</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">background</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">#f00</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">animation-name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> box;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">animation-duration</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">5</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">animation-timing-function</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">linear</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">animation-delay</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">2</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">animation-iteration-count</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">infinite</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">animation-direction</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">alternate</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">animation-play-state</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">running</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>以上代码等效于以下所示：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#50FA7B;font-style:italic;">.container</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">animation</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> box </span><span style="color:#BD93F9;">5</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">linear</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">2</span><span style="color:#FF79C6;">s</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">infinite</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">alternate</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="animation-timing-function" tabindex="-1">animation-timing-function <a class="header-anchor" href="#animation-timing-function" aria-label="Permalink to &quot;animation-timing-function&quot;">​</a></h3><p>此属性使用三次贝塞尔曲线来生成曲线</p><ul><li><code>linear</code> 匀速。等同于 <code>cubic-bezier(0,0,0.25,1)</code></li><li><code>ease</code> 默认值。动画以低速开始，然后加快，在结束前变慢。等同于 <code>cubic-bezier(0.25,0.1,0.25,1)</code></li><li><code>ease-in</code> 动画以低速开始。等同于 <code>cubic-bezier(0.42,0,1,1)</code></li><li><code>ease-out</code> 动画以低速结束。等同于 <code>cubic-bezier(0,0,0.58,1)</code></li><li><code>ease-in-out</code> 动画以低速开始和结束。等同于 <code>cubic-bezier(0.42,0,0.58,1)</code></li><li><code>cubic-bezier(n,n,n,n)</code> 三次贝塞尔曲线，取值范围 0 到 1</li></ul><h3 id="animation-fill-mode" tabindex="-1">animation-fill-mode <a class="header-anchor" href="#animation-fill-mode" aria-label="Permalink to &quot;animation-fill-mode&quot;">​</a></h3><p>规定动画在执行之前和之后，如何将样式应用于其目标</p><ul><li><code>none</code> 当动画未执行时，动画不会将任何样式应用于目标</li><li><code>forwards</code> 当动画完成后，保持最后一个关键帧的值（由<code>animation-duration</code>和 <code>animation-iteration-count</code> 决定）</li><li><code>backwards</code> 立即应用第一个关键帧中定义的值，并在 <code>animation-delay</code> 期间保留此值</li><li><code>both</code> 两种模式都被应用</li></ul><p>假如一个盒子要在动画开始时立即改变颜色，并从左到右运动</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">/* 延迟 1 秒后执行动画 */</span></span>
<span class="line"><span style="color:#FF79C6;">animation-delay: 1s;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">/* 1秒后改变颜色，并从左到右运动，运动结束后回到原位置 */</span></span>
<span class="line"><span style="color:#FF79C6;">animation-fill-mode: none;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">/* 1秒后改变颜色，并从左到右运动，运动结束后保持在最后的位置 */</span></span>
<span class="line"><span style="color:#FF79C6;">animation-fill-mode: forwards;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">/* 立即改变颜色，1秒后从左到右运动，运动结束后回到原位置 */</span></span>
<span class="line"><span style="color:#FF79C6;">animation-fill-mode: backwards;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">/* 立即改变颜色，1秒后从左到右运动，运动结束后保持在最后的位置 */</span></span>
<span class="line"><span style="color:#FF79C6;">animation-fill-mode: both;</span></span>
<span class="line"></span></code></pre></div><h2 id="transform-变换" tabindex="-1">transform 变换 <a class="header-anchor" href="#transform-变换" aria-label="Permalink to &quot;transform 变换&quot;">​</a></h2><p>主要用于给元素做变换，主要由以下几种变换：rotate(旋转)、scale(缩放)、skew(扭曲)、translate(移动)、matrix(矩阵变换)</p><ul><li>transform 本身是没有过渡效果的，它只是对元素做大小、旋转、倾斜等各种变换</li><li>通过和 transition 或者 animation 相结合，可以让变换过程具有动画的效果</li></ul><h3 id="translate-移动" tabindex="-1">translate 移动 <a class="header-anchor" href="#translate-移动" aria-label="Permalink to &quot;translate 移动&quot;">​</a></h3><p><code>transform: translate(100px, 50%)</code>，百分比是以自身为基准</p><p><code>transform: translate(100px)</code>，只写一个值表示沿 X 轴移动距离是 100px， 沿 Y 轴移动距离是 0</p><ul><li>translateX() 沿 X 轴移动距离</li><li>translateY()</li><li>translateZ()</li><li>translate3d(x, y, z)</li></ul><h2 id="rotate-旋转" tabindex="-1">rotate 旋转 <a class="header-anchor" href="#rotate-旋转" aria-label="Permalink to &quot;rotate 旋转&quot;">​</a></h2><p>示例：<code>transform: rotate(10deg)</code></p><p>单位如下，正值表示沿水平方向顺时针旋转，负值表示沿水平方向逆时针旋转</p><ul><li><code>deg</code>：角度</li><li><code>turn</code>：圈数，<code>1turn = 360deg</code></li><li><code>rad</code>：弧度，<code>2πrad = 1turn = 360deg</code></li><li>rotateX()</li><li>rotateY()</li><li>rotateZ()</li><li>rotate3d(x, y, z, a)</li></ul><h2 id="scale-缩放" tabindex="-1">scale 缩放 <a class="header-anchor" href="#scale-缩放" aria-label="Permalink to &quot;scale 缩放&quot;">​</a></h2><p>语法：<code>scale: sx sy</code></p><ul><li>sx: 缩放向量的横坐标</li><li>sy: 缩放向量的纵坐标，如未设置则被设置为 sx，均等缩放</li></ul><p>示例：<code>transform: scale(2);</code></p><h2 id="skew-扭曲" tabindex="-1">skew 扭曲 <a class="header-anchor" href="#skew-扭曲" aria-label="Permalink to &quot;skew 扭曲&quot;">​</a></h2><p>示例：<code>transform: skew(30deg, 20deg)</code>，表示沿 X 轴倾斜 30 度，沿 Y 轴倾斜 20 度</p><p>负数表示相反方向倾斜，第二个参数为空表示为 0</p><h2 id="matrix-矩阵变换" tabindex="-1">matrix 矩阵变换 <a class="header-anchor" href="#matrix-矩阵变换" aria-label="Permalink to &quot;matrix 矩阵变换&quot;">​</a></h2><p>向量、线性代数</p><h2 id="transform-origin" tabindex="-1">transform-origin <a class="header-anchor" href="#transform-origin" aria-label="Permalink to &quot;transform-origin&quot;">​</a></h2><p>更改元素变形的原点</p><ul><li>X 轴：长度单位、百分比、关键字：left、center、right</li><li>Y 轴：长度单位、百分比、关键字：top、center、bottom</li><li>Z 轴：长度单位</li></ul><p>示例：<code>transform-origin: 30px center 2px</code></p><h2 id="transform-style" tabindex="-1">transform-style <a class="header-anchor" href="#transform-style" aria-label="Permalink to &quot;transform-style&quot;">​</a></h2><p>规定被子元素如何在 3D 空间中显示，3D 或者平面显示</p><ul><li><code>flat</code>：设置元素的子元素位于该元素的平面中</li><li><code>preserve-3d</code>：设置元素的子元素位于 3D 空间中</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">/* </span></span>
<span class="line"><span style="color:#6272A4;">&lt;div class=&quot;box&quot;&gt;</span></span>
<span class="line"><span style="color:#6272A4;">  &lt;div class=&quot;content&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#6272A4;">&lt;/div&gt; </span></span>
<span class="line"><span style="color:#6272A4;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;">.box</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">perspective</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">800</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">perspective-origin</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">50</span><span style="color:#FF79C6;">%</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">50</span><span style="color:#FF79C6;">%</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">transform-style</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">preserve-3d</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#50FA7B;font-style:italic;">.content</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">width</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">300</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">height</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">300</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">background</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">#0f0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">margin</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span><span style="color:#FF79C6;">px</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">auto</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">transform</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">rotateX</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">45</span><span style="color:#FF79C6;">deg</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><code>perspective</code> 控制 3d 元素的透视效果，数值相当于眼睛距离元素的距离，实现近大远小的效果</li><li><code>perspective-origin</code> 设置一个 3D 元素的基数位置</li></ul><h3 id="transform-的-rotate-translatex-的先后执行顺序有何不同" tabindex="-1">transform 的 <code>rotate translateX</code> 的先后执行顺序有何不同？ <a class="header-anchor" href="#transform-的-rotate-translatex-的先后执行顺序有何不同" aria-label="Permalink to &quot;transform 的 \`rotate translateX\` 的先后执行顺序有何不同？&quot;">​</a></h3><p>如果先旋转再平移的话，会按照旋转后的坐标系进行平移。哪个在前就先执行</p><h2 id="transition-和-animation-以及-transform-的区别" tabindex="-1">transition 和 animation 以及 transform 的区别 <a class="header-anchor" href="#transition-和-animation-以及-transform-的区别" aria-label="Permalink to &quot;transition 和 animation 以及 transform 的区别&quot;">​</a></h2><ul><li>transform 本身没有动画效果，它实现动画需要依赖其余两者</li><li>animation 和 transition 大部分属性是相同的，它们都是随时间改变元素的属性值</li><li>transition 设置的是 css 属性变化时的过渡动画，而 animation 动画会自动执行</li><li>transition 定义的动画触发一次就执行一次，想再次执行就需要再次触发；animation 可以执行指定次数或者无数次</li><li>transition 定义的动画只有两个状态，开始态和结束态；animation 可以定义多个动画中间态，且可以控制多个复杂动画的有序执行</li></ul><h2 id="如何优化动画性能" tabindex="-1">如何优化动画性能 <a class="header-anchor" href="#如何优化动画性能" aria-label="Permalink to &quot;如何优化动画性能&quot;">​</a></h2><ul><li>尽量减少 js 动画，使用性能友好的 requestAnimationFrame()</li><li>开启硬件加速</li><li>使用 transform 代替 left、top，减少使用引起页面重排的属性</li><li>requestAnimationFrame() 方法，会把每一帧中的所有 DOM 操作集中起来，在一次重绘或回流中就完成</li><li>requestIdleCallback() 方法，指定只有当一帧的末尾有空闲时间，才会执行回调函数</li></ul><h2 id="手写动画的最小时间间隔是多久" tabindex="-1">手写动画的最小时间间隔是多久？ <a class="header-anchor" href="#手写动画的最小时间间隔是多久" aria-label="Permalink to &quot;手写动画的最小时间间隔是多久？&quot;">​</a></h2><p>多数显示器默认频率是 60Hz，即 1 秒刷新 60 次，所以理论上最小间隔为 1/60＊1000ms ＝ 16.7ms</p>`,61),i=[t,c,F];function r(y,d,m,u,h,f){return l(),n("div",null,i)}const C=a(p,[["render",r]]);export{b as __pageData,C as default};
