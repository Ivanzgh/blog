import{_ as s,c as a,o as l,Q as n}from"./chunks/framework.f14b72c3.js";const d=JSON.parse('{"title":"Buffer","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"fe/node/buffer.md","lastUpdated":1698246525000}'),o={name:"fe/node/buffer.md"},e=n(`<h1 id="buffer" tabindex="-1">Buffer <a class="header-anchor" href="#buffer" aria-label="Permalink to &quot;Buffer&quot;">​</a></h1><p><a href="https://nodejs.org/api/buffer.html" target="_blank" rel="noreferrer">API 地址</a></p><p>Buffer 是缓冲区，是一个类似于 Array 的对象，用于表示固定长度的字节序列</p><p>Buffer 本质是一段内存空间，专门用来处理二进制数据</p><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h2><ul><li>Buffer 大小固定且无法调整</li><li>Buffer 性能较好，可以直接对计算机内存进行操作</li><li>每个元素的大小为 1 字节</li></ul><h2 id="创建方式" tabindex="-1">创建方式 <a class="header-anchor" href="#创建方式" aria-label="Permalink to &quot;创建方式&quot;">​</a></h2><h3 id="buffer-alloc" tabindex="-1"><code>Buffer.alloc()</code> <a class="header-anchor" href="#buffer-alloc" aria-label="Permalink to &quot;\`Buffer.alloc()\`&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> buf1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Buffer.</span><span style="color:#50FA7B;">alloc</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">10</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(buf1); </span><span style="color:#6272A4;">// &lt;Buffer 00 00 00 00 00 00 00 00 00 00&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="buffer-allocunsafe" tabindex="-1"><code>Buffer.allocUnsafe()</code> <a class="header-anchor" href="#buffer-allocunsafe" aria-label="Permalink to &quot;\`Buffer.allocUnsafe()\`&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> buf2 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Buffer.</span><span style="color:#50FA7B;">allocUnsafe</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">10</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(buf2); </span><span style="color:#6272A4;">// &lt;Buffer 00 00 00 00 00 00 00 00 00 00&gt;</span></span>
<span class="line"></span></code></pre></div><p>allocUnsafe 创建的 buffer 可能包含旧的内存数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> buf3 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Buffer.</span><span style="color:#50FA7B;">allocUnsafe</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">10000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(buf3);</span></span>
<span class="line"><span style="color:#6272A4;">// &lt;Buffer 00 00 00 00 00 00 00 00 fd 00 00 00 01 00 ... 9950 more bytes&gt;</span></span>
<span class="line"><span style="color:#6272A4;">// 每次执行打印的结果还不一致</span></span>
<span class="line"></span></code></pre></div><h3 id="buffer-from" tabindex="-1"><code>Buffer.from()</code> <a class="header-anchor" href="#buffer-from" aria-label="Permalink to &quot;\`Buffer.from()\`&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> buf4 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Buffer.</span><span style="color:#50FA7B;">from</span><span style="color:#F8F8F2;">([</span><span style="color:#BD93F9;">11</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">22</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">33</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(buf4); </span><span style="color:#6272A4;">// &lt;Buffer 0b 16 21&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> buf5 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Buffer.</span><span style="color:#50FA7B;">from</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">hello</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(buf5); </span><span style="color:#6272A4;">// &lt;Buffer 68 65 6c 6c 6f&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// buffer转为字符串，默认是 utf-8 编码</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(buf5.</span><span style="color:#50FA7B;">toString</span><span style="color:#F8F8F2;">()); </span><span style="color:#6272A4;">// hello</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> buf6 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Buffer.</span><span style="color:#50FA7B;">from</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">中文</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(buf6); </span><span style="color:#6272A4;">// &lt;Buffer e4 b8 ad e6 96 87&gt;</span></span>
<span class="line"></span></code></pre></div>`,15),p=[e];function r(c,t,F,f,y,u){return l(),a("div",null,p)}const b=s(o,[["render",r]]);export{d as __pageData,b as default};
