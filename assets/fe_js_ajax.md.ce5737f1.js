import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.f14b72c3.js";const u=JSON.parse('{"title":"AJAX","description":"","frontmatter":{},"headers":[],"relativePath":"fe/js/ajax.md","lastUpdated":1681829744000}'),p={name:"fe/js/ajax.md"},o=l(`<h1 id="ajax" tabindex="-1">AJAX <a class="header-anchor" href="#ajax" aria-label="Permalink to &quot;AJAX&quot;">​</a></h1><h2 id="xmlhttprequest" tabindex="-1">XMLHttpRequest <a class="header-anchor" href="#xmlhttprequest" aria-label="Permalink to &quot;XMLHttpRequest&quot;">​</a></h2><p><a href="https://juejin.im/post/58e4a174ac502e006c1e18f4#heading-0" target="_blank" rel="noreferrer">https://juejin.im/post/58e4a174ac502e006c1e18f4#heading-0</a></p><p><a href="https://www.jianshu.com/p/918c63045bc3" target="_blank" rel="noreferrer">https://www.jianshu.com/p/918c63045bc3</a></p><p><a href="https://blog.csdn.net/z550449054/article/details/80538623" target="_blank" rel="noreferrer">https://blog.csdn.net/z550449054/article/details/80538623</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// &lt;div id=&quot;hehe&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> xhr </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">XMLHttpRequest</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#6272A4;">//请求方式，路径，是否异步</span></span>
<span class="line"><span style="color:#F8F8F2;">xhr.</span><span style="color:#50FA7B;">open</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">GET</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">https://www.easy-mock.com/mock/5c94518744e20f337dc3c58c/test/zgh/zghivan</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#6272A4;">//设置xhrt对象不发送数据到服务器</span></span>
<span class="line"><span style="color:#F8F8F2;">xhr.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(xhr)</span></span>
<span class="line"><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (xhr.status </span><span style="color:#FF79C6;">==</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">200</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> data </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> xhr.responseText</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(data)</span></span>
<span class="line"><span style="color:#F8F8F2;">  document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">hehe</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">).innerText </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="ajax-获取数据" tabindex="-1">ajax 获取数据 <a class="header-anchor" href="#ajax-获取数据" aria-label="Permalink to &quot;ajax 获取数据&quot;">​</a></h2><p>数据交互的几种方式：</p><p><a href="http://www.cnblogs.com/zxt-17862802783/p/7787258.html" target="_blank" rel="noreferrer">http://www.cnblogs.com/zxt-17862802783/p/7787258.html</a></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">id</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">btn</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;click!&lt;/</span><span style="color:#FF79C6;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">src</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">https://cdn.bootcss.com/jquery/3.3.1/jquery.js</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">$</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">#btn</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">click</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">me</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    $.</span><span style="color:#50FA7B;">ajax</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      url</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">https://www.easy-mock.com/mock/5c94518744e20f337dc3c58c/test/zgh/zghivan</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      type</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">get</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      dataType</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">json</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      async</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">//post请求可以传递数据</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">//data: {id : 1},</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">success</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">data</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(data)</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">error</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#F8F8F2;">        console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">error</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>jquery 中的$.ajax()常用参数：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">url </span><span style="color:#F1FA8C;">请求地址</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">async </span><span style="color:#F1FA8C;">是否异步</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">data </span><span style="color:#F1FA8C;">发送到服务器的数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">contentType  </span><span style="color:#F1FA8C;">发送信息至服务器时内容编码类型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8BE9FD;">type</span><span style="color:#F8F8F2;">  </span><span style="color:#F1FA8C;">请求类型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">success </span><span style="color:#F1FA8C;">请求成功的回调函数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">error  </span><span style="color:#F1FA8C;">请求失败的回调函数</span></span>
<span class="line"></span></code></pre></div><p>若为 get 请求可直接在 url 中使用?拼接</p><p>推荐： <a href="http://louiszhai.github.io/2016/11/02/ajax/" target="_blank" rel="noreferrer">http://louiszhai.github.io/2016/11/02/ajax/</a></p><p>MDN : <a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX</a></p><h2 id="axios" tabindex="-1">axios <a class="header-anchor" href="#axios" aria-label="Permalink to &quot;axios&quot;">​</a></h2><h3 id="content-type" tabindex="-1">Content-Type <a class="header-anchor" href="#content-type" aria-label="Permalink to &quot;Content-Type&quot;">​</a></h3><p>Axios 请求头中的<code>Content-Type</code>常见的有三种：</p><ul><li><p>Content-Type: <code>application/json</code></p></li><li><p>Content-Type: <code>application/x-www-form-urlencoded</code></p></li><li><p>Content-Type: <code>multipart/form-data</code></p></li></ul><p>请求头配置：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">headers: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Content-Type</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">application/x-www-form-urlencoded</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">},</span></span>
<span class="line"></span></code></pre></div><p>1、<code>application/json</code>是默认的方式，声明了将请求体中的数据以 json 字符串的格式传给后端。</p><p>2、<code>application/x-www-form-urlencoded</code>声明了请求体中的数据会以键值对（普通表单形式）发送到后端，这种类型是 Ajax 默认的。 请求体一般是 json 对象，可以使用<code>qs</code>库将对象转为 url 参数形式。</p><p>qs 是 Axios 默认就有的，能将对象和 url 中的参数互相转换</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> qs </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">qs</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> url </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">user=zgh&amp;password=123</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#6272A4;">// 转为对象</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(qs.</span><span style="color:#50FA7B;">parse</span><span style="color:#F8F8F2;">(url)) </span><span style="color:#6272A4;">// { user: &#39;zgh&#39;, password: &#39;123&#39; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> obj </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">23</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#6272A4;">// 转为url参数形式</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(qs.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(obj)) </span><span style="color:#6272A4;">// &#39;name=zgh&amp;age=23&#39;</span></span>
<span class="line"></span></code></pre></div><p>3、<code>multipart/form-data</code>一般用来传输文件，数据为二进制格式，也可为键值对格式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> fileData </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">FormData</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">fileData.</span><span style="color:#50FA7B;">append</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">file</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, file)</span></span>
<span class="line"><span style="color:#F8F8F2;">fileData.</span><span style="color:#50FA7B;">append</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">name</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 如果想传输文件数组</span></span>
<span class="line"><span style="color:#F8F8F2;">fileData.</span><span style="color:#50FA7B;">append</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">files</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, file1)</span></span>
<span class="line"><span style="color:#F8F8F2;">fileData.</span><span style="color:#50FA7B;">append</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">files</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, file2)</span></span>
<span class="line"><span style="color:#F8F8F2;">fileData.</span><span style="color:#50FA7B;">append</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">files</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, file3)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,27),e=[o];function F(t,c,r,y,i,d){return n(),a("div",null,e)}const C=s(p,[["render",F]]);export{u as __pageData,C as default};
