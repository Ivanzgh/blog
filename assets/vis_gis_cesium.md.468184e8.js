import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.f14b72c3.js";const h=JSON.parse('{"title":"Cesium","description":"","frontmatter":{},"headers":[],"relativePath":"vis/gis/cesium.md","lastUpdated":1683514170000}'),p={name:"vis/gis/cesium.md"},o=l(`<h1 id="cesium" tabindex="-1">Cesium <a class="header-anchor" href="#cesium" aria-label="Permalink to &quot;Cesium&quot;">​</a></h1><h2 id="osgb-转-3dtiles" tabindex="-1">osgb 转 3dtiles <a class="header-anchor" href="#osgb-转-3dtiles" aria-label="Permalink to &quot;osgb 转 3dtiles&quot;">​</a></h2><p>参考资料：</p><ul><li>转换工具： <a href="https://github.com/fanvanzh/3dtiles" target="_blank" rel="noreferrer">https://github.com/fanvanzh/3dtiles</a></li><li>项目编译：<a href="https://github.com/fanvanzh/3dtiles/wiki/How-to-build" target="_blank" rel="noreferrer">https://github.com/fanvanzh/3dtiles/wiki/How-to-build</a></li></ul><p><a href="https://blog.csdn.net/qq_36377037/article/details/86592258" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_36377037/article/details/86592258</a></p><p><code>cmd</code> 进入 e 盘 map 文件夹下，找到 <code>3dtile.exe</code> 所在的文件夹</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">3dtile.exe -f osgb -i E:</span><span style="color:#FF79C6;">\\D</span><span style="color:#F8F8F2;">ata</span><span style="color:#FF79C6;">\\倾</span><span style="color:#F8F8F2;">斜摄影</span><span style="color:#FF79C6;">\\h</span><span style="color:#F8F8F2;">gc -o E:</span><span style="color:#FF79C6;">\\D</span><span style="color:#F8F8F2;">ata</span><span style="color:#FF79C6;">\\倾</span><span style="color:#F8F8F2;">斜摄影</span><span style="color:#FF79C6;">\\h</span><span style="color:#F8F8F2;">gc_test</span></span>
<span class="line"></span></code></pre></div><p>Rust 社区公开的第三方包都集中在 <code>crates.io</code> 网站上面，他们的文档被自动发布到 <code>doc.rs</code> 网站上，Rust 提供了非常方便的包管理器 cargo。为了更快速下载第三方包，我们需要把 <code>crates.io</code> 换国内的镜像源</p><h3 id="设置-rustup-的代理" tabindex="-1">设置 rustup 的代理 <a class="header-anchor" href="#设置-rustup-的代理" aria-label="Permalink to &quot;设置 rustup 的代理&quot;">​</a></h3><p>使用中科大的镜像源，<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noreferrer">http://mirrors.ustc.edu.cn/</a></p><p>设置系统环境变量：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">RUSTUP_DIST_SERVER: </span><span style="color:#F1FA8C;">http://mirrors.ustc.edu.cn/rust-static</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">RUSTUP_UPDATE_ROOT: </span><span style="color:#F1FA8C;">http://mirrors.ustc.edu.cn/rust-static/rustup</span></span>
<span class="line"></span></code></pre></div><h3 id="设置依赖源的代理" tabindex="-1">设置依赖源的代理 <a class="header-anchor" href="#设置依赖源的代理" aria-label="Permalink to &quot;设置依赖源的代理&quot;">​</a></h3><p>在 <code>C:/Users/&lt;用户名&gt;/.cargo</code>目录下新建一个文本文件 <code>config</code>（没有后缀）</p><p>使用中科大镜像源，添加内容如下：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">[source.crates-io]</span></span>
<span class="line"><span style="color:#F8F8F2;">registry </span><span style="color:#F1FA8C;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">https://github.com/rust-lang/crates.io-index</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">replace-with </span><span style="color:#F1FA8C;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ustc</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">[source.ustc]</span></span>
<span class="line"><span style="color:#F8F8F2;">registry </span><span style="color:#F1FA8C;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">git://mirrors.ustc.edu.cn/crates.io-index</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>或者使用阿里云镜像源，添加内容如下：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">[source.crates-io]</span></span>
<span class="line"><span style="color:#F8F8F2;">replace-with </span><span style="color:#F1FA8C;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">rustcc</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">[source.rustcc]</span></span>
<span class="line"><span style="color:#F8F8F2;">registry </span><span style="color:#F1FA8C;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">https://code.aliyun.com/rustcc/crates.io-index</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="下载-rustup-init-exe-自动安装工具并按默认执行" tabindex="-1">下载 rustup-init.exe 自动安装工具并按默认执行 <a class="header-anchor" href="#下载-rustup-init-exe-自动安装工具并按默认执行" aria-label="Permalink to &quot;下载 rustup-init.exe 自动安装工具并按默认执行&quot;">​</a></h3><p>地址：<a href="https://www.rust-lang.org/zh-CN/tools/install" target="_blank" rel="noreferrer">https://www.rust-lang.org/zh-CN/tools/install</a></p><p>双击 <code>rustup-init.exe</code> 后运行安装包，会先提示安装 <code>visual cpp build tools</code>，选择 yes。</p><p>接着开始安装 <code>rust</code>，包含 <code>compiler</code>、<code>rustup</code> 和 <code>cargo</code>。若无特殊需求，选择默认安装，即输入 1 即可</p><h2 id="平移、贴地、旋转" tabindex="-1">平移、贴地、旋转 <a class="header-anchor" href="#平移、贴地、旋转" aria-label="Permalink to &quot;平移、贴地、旋转&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> primitive </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> viewer.scene.primitives.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(tileset)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> longitude </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">116.2392</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> latitude </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">39.5847</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> height </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">-</span><span style="color:#BD93F9;">20</span></span>
<span class="line"><span style="color:#F8F8F2;">primitive.readyPromise.</span><span style="color:#50FA7B;">then</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> hpr </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> Cesium.</span><span style="color:#50FA7B;">Matrix3</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// new Cesium.HeadingPitchRoll(heading, pitch, roll)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// heading围绕负z轴的旋转。pitch是围绕负y轴的旋转。Roll是围绕正x轴的旋转</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> hprObj </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> Cesium.</span><span style="color:#50FA7B;">HeadingPitchRoll</span><span style="color:#F8F8F2;">(Math.</span><span style="color:#BD93F9;">PI</span><span style="color:#F8F8F2;">, Math.</span><span style="color:#BD93F9;">PI</span><span style="color:#F8F8F2;">, Math.</span><span style="color:#BD93F9;">PI</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">//  Cesium.Matrix3.fromHeadingPitchRoll （headingPitchRoll，result）</span></span>
<span class="line"><span style="color:#F8F8F2;">  hpr </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Cesium.Matrix3.</span><span style="color:#50FA7B;">fromHeadingPitchRoll</span><span style="color:#F8F8F2;">(hprObj, hpr)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// 2、平移</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// 2.3储存平移的结果</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> modelMatrix </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Cesium.Matrix4.</span><span style="color:#50FA7B;">multiplyByTranslation</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// 2.1从以度为单位的经度和纬度值返回Cartesian3位置</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// 2.2计算4x4变换矩阵</span></span>
<span class="line"><span style="color:#F8F8F2;">    Cesium.Transforms.</span><span style="color:#50FA7B;">eastNorthUpToFixedFrame</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">      Cesium.Cartesian3.</span><span style="color:#50FA7B;">fromDegrees</span><span style="color:#F8F8F2;">(longitude, latitude, height)</span></span>
<span class="line"><span style="color:#F8F8F2;">    ),</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> Cesium.</span><span style="color:#50FA7B;">Cartesian3</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> Cesium.</span><span style="color:#50FA7B;">Matrix4</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  )</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">/// 3、应用旋转</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// Cesium.Matrix4.multiplyByMatrix3 （矩阵，旋转，结果）</span></span>
<span class="line"><span style="color:#F8F8F2;">  Cesium.Matrix4.</span><span style="color:#50FA7B;">multiplyByMatrix3</span><span style="color:#F8F8F2;">(modelMatrix, hpr, modelMatrix)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// 赋值</span></span>
<span class="line"><span style="color:#F8F8F2;">  primitive._root.transform </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> modelMatrix</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">viewer.</span><span style="color:#50FA7B;">zoomTo</span><span style="color:#F8F8F2;">(tileset)</span></span>
<span class="line"></span></code></pre></div>`,24),e=[o];function t(c,r,F,i,y,d){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{h as __pageData,C as default};
