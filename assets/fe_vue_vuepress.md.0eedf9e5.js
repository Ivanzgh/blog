import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.f14b72c3.js";const h=JSON.parse('{"title":"vuePress","description":"","frontmatter":{},"headers":[],"relativePath":"fe/vue/vuepress.md","lastUpdated":1681036152000}'),p={name:"fe/vue/vuepress.md"},o=l(`<h1 id="vuepress" tabindex="-1">vuePress <a class="header-anchor" href="#vuepress" aria-label="Permalink to &quot;vuePress&quot;">​</a></h1><h2 id="养个猫" tabindex="-1">养个猫 <a class="header-anchor" href="#养个猫" aria-label="Permalink to &quot;养个猫&quot;">​</a></h2><p>如你所见，左下角有一只卡哇伊的猫，有白色和黑色两种。由<a href="https://www.live2d.com/zh-CHS/" target="_blank" rel="noreferrer">live2d</a>制作而来， 特别好玩的一个东西，有兴趣自行了解。</p><p>首先下载<code>lived2d.js</code>，然后在<code>components</code>下注册一个<code>Cat.vue</code>组件，最后在<code>config.js</code>中配置使用</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#8BE9FD;font-style:italic;">module</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">exports</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span></span>
<span class="line"><span style="color:#F8F8F2;">      {</span></span>
<span class="line"><span style="color:#F8F8F2;">        name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">page-plugin</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        globalUIComponents</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Cat</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    ]</span></span>
<span class="line"><span style="color:#F8F8F2;">  ]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h2><p>地址：<a href="https://github.com/vuepressjs/awesome-vuepress#plugins" target="_blank" rel="noreferrer">awesome-vuepress</a></p><p>例如：</p><ul><li><code>vuepress-plugin-reading-progress</code> - 阅读进度条</li><li><code>@vuepress/plugin-back-to-top</code> - 返回顶部</li><li><code>vuepress-plugin-img-lazy</code> - 图片懒加载</li><li><code>vuepress-plugin-baidu-autopush</code> - 百度 SEO</li></ul><h2 id="手动部署" tabindex="-1">手动部署 <a class="header-anchor" href="#手动部署" aria-label="Permalink to &quot;手动部署&quot;">​</a></h2><p>在项目根目录下新建 deplogy.sh 文件，配置好后在项目根文件夹右键 <code>gitBash here</code> , 然后输入部署命令<code>bash deploy.sh</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">#!/usr/bin/env sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 确保脚本抛出遇到的错误</span></span>
<span class="line"><span style="color:#8BE9FD;">set</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-e</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 生成静态文件</span></span>
<span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">run</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 进入生成的文件夹</span></span>
<span class="line"><span style="color:#8BE9FD;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">docs/.vuepress/dist</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 如果是发布到自定义域名</span></span>
<span class="line"><span style="color:#6272A4;"># echo &#39;www.example.com&#39; &gt; CNAME</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">init</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-A</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">commit</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-m</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">deploy</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 如果发布到 https://&lt;USERNAME&gt;.github.io</span></span>
<span class="line"><span style="color:#6272A4;"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;USERNAME&gt;.github.io.git master</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 如果发布到 https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-f</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">git@github.com:Ivanzgh/blog.git</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">master:gh-pages</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8BE9FD;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">-</span></span>
<span class="line"></span></code></pre></div><p>注意将仓库地址修改成自己的地址</p><h2 id="自动化部署" tabindex="-1">自动化部署 <a class="header-anchor" href="#自动化部署" aria-label="Permalink to &quot;自动化部署&quot;">​</a></h2><p>使用<code>github actions</code>实现自动化部署，每次只需要将代码提交到 github 上即可，无需其他操作。</p><p><strong>设置<code>GitHub personal access</code></strong></p><p><a href="https://docs.github.com/cn/github/authenticating-to-github/creating-a-personal-access-token" target="_blank" rel="noreferrer">设置个人访问令牌</a></p><p>授予此令牌的作用域或权限时，只需勾选<code>repo</code>仓库即可。然后回到项目的<code>Settings</code>下的<code>Secrets</code>目录生成一个新令牌，名称叫 <code>ACCESS_TOKEN</code></p><p>进入<code>Actions</code>点击<code>Set up this workflow</code>创建一个新的<code>action</code></p><p><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418654.png" alt="image"></p><p>创建<code>.github/workflows/ci.yml</code>文件，名称随意。 这里用了<a href="https://github.com/marketplace/actions/deploy-to-github-pages" target="_blank" rel="noreferrer">deploy-to-github-pages</a>这个 action， 选择最新版本</p><p>内容如下，注意版本问题</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki dracula"><code><span class="line"><span style="color:#8BE9FD;">name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">Build and Deploy</span></span>
<span class="line"><span style="color:#BD93F9;">on</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">push</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;">branches</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">master</span></span>
<span class="line"><span style="color:#8BE9FD;">jobs</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">build-and-deploy</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;">runs-on</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">ubuntu-latest</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;">steps</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">Checkout 🛎️</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#8BE9FD;">uses</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">actions/checkout@v2.3.2</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#8BE9FD;">with</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#8BE9FD;">persist-credentials</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">Install and Build 🔧</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#8BE9FD;">run</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">|</span></span>
<span class="line"><span style="color:#F1FA8C;">          npm install</span></span>
<span class="line"><span style="color:#F1FA8C;">          npm run docs:build</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">Deploy 🚀</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#8BE9FD;">uses</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">JamesIves/github-pages-deploy-action@3.6.1</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#8BE9FD;">with</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#8BE9FD;">ACCESS_TOKEN</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">\${{ secrets.ACCESS_TOKEN }}</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#8BE9FD;">BRANCH</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">gh-pages</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;"># The branch the action should deploy to.</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#8BE9FD;">FOLDER</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">docs/.vuepress/dist</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;"># The folder the action should deploy.</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#8BE9FD;">CLEAN</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;"># Automatically remove deleted files from the deploy branch</span></span>
<span class="line"></span></code></pre></div><p><code>on</code>设置工作流的触发条件，一般设置为<code>on: [push]</code>，表示在每次 <code>git push</code> 操作后自动触发该项目的工作流。 也可以让工作流在 <code>master</code>分支的 <code>push</code>事件上运行：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki dracula"><code><span class="line"><span style="color:#BD93F9;">on</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">push</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#8BE9FD;">branches</span><span style="color:#FF79C6;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">master</span></span>
<span class="line"></span></code></pre></div><p><code>runs-on: ubuntu-latest</code>表示工作流将在 <code>ubuntu</code> 的最新版本上运行，GitHub Actions 提供 Linux、Windows 和 macOS 来构建运行</p><p><code>actions/checkout@v2.3.2</code>是 github 官方的一个 action，用于 clone 该仓库的源码到工作流中。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>打包命令需要修改为<code>npm run docs:build</code>，因为 vuepress 的打包命令就是如此</p><p><code>with</code>参数里注意第一行前面的 key 是<code>ACCESS_TOKEN</code>，初始是<code>GITHUB_TOKEN</code>，后面的就是刚配置的个人访问令牌</p><p><code>gh-pages</code> 是 GitHub Pages 要读取的分支</p><p><code>FOLDER: docs/.vuepress/dist</code>就是要部署的文件目录</p></div><p>如果出现如下问题，</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">No </span><span style="color:#F1FA8C;">url</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">found</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">for</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">submodule</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">path</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">docs/.vuepress/dist</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">in</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">.gitmodules</span></span>
<span class="line"></span></code></pre></div><p>就是 git 子模块找不到 dist 文件夹，我是之前使用手动部署导致本地产生了 dist 文件夹，所以删除 dist 文件夹再 push 到 github 上即可。 在<code>.gitignore</code>中将<code>docs/.vuepress/dist</code>也删除，假如你添加过这个。</p>`,31),e=[o];function c(t,F,r,i,y,d){return n(),a("div",null,e)}const g=s(p,[["render",c]]);export{h as __pageData,g as default};
