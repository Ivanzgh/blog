import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.f14b72c3.js";const d=JSON.parse('{"title":"JSON","description":"","frontmatter":{},"headers":[],"relativePath":"fe/js/json.md","lastUpdated":1698246525000}'),o={name:"fe/js/json.md"},p=l(`<h1 id="json" tabindex="-1">JSON <a class="header-anchor" href="#json" aria-label="Permalink to &quot;JSON&quot;">​</a></h1><h2 id="json-转化为数组" tabindex="-1">json 转化为数组 <a class="header-anchor" href="#json-转化为数组" aria-label="Permalink to &quot;json 转化为数组&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">jsonToArray</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">obj</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> r </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { key</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [], value</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [] }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> k </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> obj) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">obj.</span><span style="color:#50FA7B;">hasOwnProperty</span><span style="color:#F8F8F2;">(k)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">continue</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    r.key.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(k)</span></span>
<span class="line"><span style="color:#F8F8F2;">    r.value.</span><span style="color:#50FA7B;">push</span><span style="color:#F8F8F2;">(obj[k])</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> r</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> json </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { a</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, b</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">, c</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">, d</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">, e</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> arrJson </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">jsonToArray</span><span style="color:#F8F8F2;">(json)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(arrJson)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">key:</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> arrJson.key[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]) </span><span style="color:#6272A4;">//key:a</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">value:</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> arrJson.value[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]) </span><span style="color:#6272A4;">//value:1</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">keylen:</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> arrJson.key.length) </span><span style="color:#6272A4;">//keylen:5</span></span>
<span class="line"></span></code></pre></div><p><code>hasOwnProperty</code>表示是否有自己的属性。这个方法会查找一个对象是否有某个属性，但是不会去查找它的原型链。</p><h2 id="格式化-json-代码" tabindex="-1">格式化 JSON 代码 <a class="header-anchor" href="#格式化-json-代码" aria-label="Permalink to &quot;格式化 JSON 代码&quot;">​</a></h2><p><code>JSON.stringify()</code> 不仅可以简单地将对象转化为字符串，也可以用它来格式化 JSON 输出</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> obj </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  foo</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { bar</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#BD93F9;">11</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">22</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">33</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">44</span><span style="color:#F8F8F2;">], baz</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { bing</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">, boom</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Hello</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> } }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#6272A4;">// The third parameter is the number of spaces used to</span></span>
<span class="line"><span style="color:#6272A4;">// beautify the JSON output.</span></span>
<span class="line"><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(obj, </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#6272A4;">// &quot;{</span></span>
<span class="line"><span style="color:#6272A4;">//     &quot;foo&quot;: {</span></span>
<span class="line"><span style="color:#6272A4;">//         &quot;bar&quot;: [</span></span>
<span class="line"><span style="color:#6272A4;">//             11,</span></span>
<span class="line"><span style="color:#6272A4;">//             22,</span></span>
<span class="line"><span style="color:#6272A4;">//             33,</span></span>
<span class="line"><span style="color:#6272A4;">//             44</span></span>
<span class="line"><span style="color:#6272A4;">//         ],</span></span>
<span class="line"><span style="color:#6272A4;">//         &quot;baz&quot;: {</span></span>
<span class="line"><span style="color:#6272A4;">//             &quot;bing&quot;: true,</span></span>
<span class="line"><span style="color:#6272A4;">//             &quot;boom&quot;: &quot;Hello&quot;</span></span>
<span class="line"><span style="color:#6272A4;">//         }</span></span>
<span class="line"><span style="color:#6272A4;">//     }</span></span>
<span class="line"><span style="color:#6272A4;">// }&quot;</span></span>
<span class="line"></span></code></pre></div><p>JSON.parse()能将 json 格式的字符串转化为 json 对象</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>JSON.parse()和 JSON.stringify()支持 IE8 及其以上版本</p></div><h2 id="通过-key-获取-value" tabindex="-1">通过 key 获取 value <a class="header-anchor" href="#通过-key-获取-value" aria-label="Permalink to &quot;通过 key 获取 value&quot;">​</a></h2><h3 id="直接获取" tabindex="-1">直接获取 <a class="header-anchor" href="#直接获取" aria-label="Permalink to &quot;直接获取&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">getJson</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> json </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { a</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, b</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">, c</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">, d</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">, e</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> json[key]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#50FA7B;">getJson</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 1</span></span>
<span class="line"></span></code></pre></div><h3 id="eval" tabindex="-1">eval() <a class="header-anchor" href="#eval" aria-label="Permalink to &quot;eval()&quot;">​</a></h3><p><code>eval()</code>函数可计算某个字符串，并执行其中的的 js 代码</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">getJson</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> json </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { a</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, b</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">, c</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">, d</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">, e</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">eval</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">json.</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> key)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#50FA7B;">getJson</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 1</span></span>
<span class="line"></span></code></pre></div><h3 id="遍历-json-获取其属性" tabindex="-1">遍历 json 获取其属性 <a class="header-anchor" href="#遍历-json-获取其属性" aria-label="Permalink to &quot;遍历 json 获取其属性&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">getJson</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">key</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> json </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { a</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, b</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">, c</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">, d</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">, e</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> json) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (i </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> key) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> json[i] </span><span style="color:#6272A4;">// 1</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#50FA7B;">getJson</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre></div>`,17),F=[p];function e(c,t,r,y,i,C){return a(),n("div",null,F)}const h=s(o,[["render",e]]);export{d as __pageData,h as default};
