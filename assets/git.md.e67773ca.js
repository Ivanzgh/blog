import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.f14b72c3.js";const g=JSON.parse('{"title":"Git","description":"","frontmatter":{},"headers":[],"relativePath":"git.md","lastUpdated":1681829744000}'),p={name:"git.md"},o=l(`<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Git 是<strong>分布式版本控制系统</strong>（Distributed Version Control System - DVCS）。官网：<a href="https://git-scm.com/docs" target="_blank" rel="noreferrer">https://git-scm.com/docs</a></p><p><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666452147.png" alt="image"></p><ul><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：本地仓库</li><li>Remote：远程仓库</li></ul><h2 id="配置单个-ssh-key" tabindex="-1">配置单个 SSH-Key <a class="header-anchor" href="#配置单个-ssh-key" aria-label="Permalink to &quot;配置单个 SSH-Key&quot;">​</a></h2><h3 id="全局配置用户信息" tabindex="-1">全局配置用户信息 <a class="header-anchor" href="#全局配置用户信息" aria-label="Permalink to &quot;全局配置用户信息&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--global</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">user.name</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">your_name</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--global</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">user.email</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">your_email</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看全局的用户名</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--global</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">user.name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看全局的邮箱</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--global</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">user.email</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="生成-ssh-密钥" tabindex="-1">生成 SSH 密钥 <a class="header-anchor" href="#生成-ssh-密钥" aria-label="Permalink to &quot;生成 SSH 密钥&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;"> ssh-keygen </span><span style="color:#BD93F9;">-t</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">rsa</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-C</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">youremail@email.com</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>在 Mac 终端里查看密钥：<code>vim ~/.ssh/id_rsa.pub</code>，然后将公共密钥添加进 github 或者 gitlab 里。或者直接复制密钥</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">pbcopy </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">~/.ssh/id_ras.pub</span></span>
<span class="line"></span></code></pre></div><p>测试连接是否成功: <code>ssh -T git@github.com</code></p><p>如果提示：<code>Hi Ivanzgh! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code> 说明连接成功了</p><p>查看当前仓库配置信息</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--local</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--list</span></span>
<span class="line"></span></code></pre></div><p>查看全局配置信息</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--global</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--list</span></span>
<span class="line"></span></code></pre></div><h2 id="配置多个-ssh-key" tabindex="-1">配置多个 SSH-Key <a class="header-anchor" href="#配置多个-ssh-key" aria-label="Permalink to &quot;配置多个 SSH-Key&quot;">​</a></h2><p>如果想将个人的 GitHub 密钥和公司的密钥区分开来，就需要配置多个 SSH Key</p><h3 id="删除本地的-ssh" tabindex="-1">删除本地的 SSH <a class="header-anchor" href="#删除本地的-ssh" aria-label="Permalink to &quot;删除本地的 SSH&quot;">​</a></h3><p>这个步骤<strong>不是必需的</strong>，如果想全部重来就可以使用。打开终端输入<code>cd ~/.ssh</code>，如果顺利进入到.ssh 文件夹，使用命令：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#8BE9FD;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">..</span></span>
<span class="line"><span style="color:#F8F8F2;">rm </span><span style="color:#BD93F9;">-r</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">.ssh</span></span>
<span class="line"></span></code></pre></div><h3 id="清空默认的用户名和邮箱" tabindex="-1">清空默认的用户名和邮箱 <a class="header-anchor" href="#清空默认的用户名和邮箱" aria-label="Permalink to &quot;清空默认的用户名和邮箱&quot;">​</a></h3><p>查看已配置的 git 列表 <code>git config --list</code></p><p>如果没有默认的用户名和邮箱就忽略，否则执行以下命令：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--global</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--unset</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">user.name</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--global</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--unset</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">user.email</span></span>
<span class="line"></span></code></pre></div><h3 id="创建新的-ssh" tabindex="-1">创建新的 SSH <a class="header-anchor" href="#创建新的-ssh" aria-label="Permalink to &quot;创建新的 SSH&quot;">​</a></h3><p>打开终端输入<code>cd ~/.ssh</code>，如果没有 .ssh 目录，先创建该目录</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">mkdir </span><span style="color:#F1FA8C;">~/.ssh</span></span>
<span class="line"></span></code></pre></div><p>在 .ssh 目录下生成 <code>ssh-key</code>，填入自己的邮箱地址</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">ssh-keygen </span><span style="color:#BD93F9;">-t</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">rsa</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-C</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">youremail@email.com</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>然后会要输入 SSH key 的名字，如<code>id_rsa</code>、<code>id_rsa_github</code>随你自定义，然后不要输入密码，一直回车就行。</p><p>然后配置其他的 SSH Key，如 gitlab，邮箱也可以变更</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">ssh-keygen </span><span style="color:#BD93F9;">-t</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">rsa</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-f</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">~/.ssh/id_rsa_gitlab</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-C</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">youremail@email.com</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>然后同上要输入名字，一路回车</p><h3 id="将私钥添加到-ssh-agent-信任列表" tabindex="-1">将私钥添加到 ssh-agent 信任列表 <a class="header-anchor" href="#将私钥添加到-ssh-agent-信任列表" aria-label="Permalink to &quot;将私钥添加到 ssh-agent 信任列表&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">ssh-add </span><span style="color:#F1FA8C;">~/.ssh/id_rsa</span></span>
<span class="line"></span></code></pre></div><p>如果出现<code>Identity added: /Users/zgh/.ssh/id_rsa (youremail@email.com)</code>，表示添加成功了。</p><p>继续添加另一个<code>ssh-add ~/.ssh/id_rsa_gitlab</code></p><p>关于<code>ssh-agent</code>信任列表</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 查看信任列表</span></span>
<span class="line"><span style="color:#F8F8F2;">ssh-add </span><span style="color:#BD93F9;">-l</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 清空所有的ssh key</span></span>
<span class="line"><span style="color:#F8F8F2;">ssh-add </span><span style="color:#BD93F9;">-D</span></span>
<span class="line"></span></code></pre></div><h3 id="配置-config-文件" tabindex="-1">配置 config 文件 <a class="header-anchor" href="#配置-config-文件" aria-label="Permalink to &quot;配置 config 文件&quot;">​</a></h3><p>终端输入<code>open ~/.ssh/</code>，看看有没有 config 文件，文件没有后缀，如果没有就新建一个</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#8BE9FD;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">~/.ssh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">touch </span><span style="color:#F1FA8C;">config</span></span>
<span class="line"></span></code></pre></div><p>然后可以在终端修改<code>vim config</code>，也可以直接打开 config 文件修改，Mac 下通过文本编辑打开。</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">Host </span><span style="color:#F1FA8C;">github</span></span>
<span class="line"><span style="color:#F8F8F2;">HostName </span><span style="color:#F1FA8C;">github.com</span></span>
<span class="line"><span style="color:#F8F8F2;">User </span><span style="color:#F1FA8C;">git</span></span>
<span class="line"><span style="color:#F8F8F2;">PreferredAuthentications </span><span style="color:#F1FA8C;">publickey</span></span>
<span class="line"><span style="color:#F8F8F2;">IdentityFile </span><span style="color:#F1FA8C;">~/.ssh/id_rsa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Host </span><span style="color:#F1FA8C;">gitlab</span></span>
<span class="line"><span style="color:#F8F8F2;">HostName </span><span style="color:#F1FA8C;">gitlab.com</span></span>
<span class="line"><span style="color:#F8F8F2;">User </span><span style="color:#F1FA8C;">git</span></span>
<span class="line"><span style="color:#F8F8F2;">PreferredAuthentications </span><span style="color:#F1FA8C;">publickey</span></span>
<span class="line"><span style="color:#F8F8F2;">IdentityFile </span><span style="color:#F1FA8C;">~/.ssh/id_rsa_gitlab</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 以 # 开头的是注释，会被忽略</span></span>
<span class="line"><span style="color:#6272A4;"># Host: 机器别名，用于标识特定的配置</span></span>
<span class="line"><span style="color:#6272A4;"># HostName: 主机名，一般为ip或者主机域名</span></span>
<span class="line"><span style="color:#6272A4;"># IdentityFile: 私钥证书文件位置，默认位置是~/.ssh/id_rsa，如果采用默认证书，可不填此项</span></span>
<span class="line"><span style="color:#6272A4;"># User：用于连接的用户名</span></span>
<span class="line"><span style="color:#6272A4;"># Port: SSH访问主机的端口号，默认是22端口</span></span>
<span class="line"></span></code></pre></div><h3 id="将公钥添加到远程仓库" tabindex="-1">将公钥添加到远程仓库 <a class="header-anchor" href="#将公钥添加到远程仓库" aria-label="Permalink to &quot;将公钥添加到远程仓库&quot;">​</a></h3><p>将公钥复制到剪贴板，然后去添加到各个远程仓库</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">pbcopy </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">~/.ssh/id_rsa.pub</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># gitlab</span></span>
<span class="line"><span style="color:#6272A4;"># pbcopy &lt; ~/.ssh/id_rsa_gitlab.pub</span></span>
<span class="line"></span></code></pre></div><h3 id="测试连接" tabindex="-1">测试连接 <a class="header-anchor" href="#测试连接" aria-label="Permalink to &quot;测试连接&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">ssh </span><span style="color:#BD93F9;">-T</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">git@github.com</span></span>
<span class="line"></span></code></pre></div><p>如果 config 配置的用户名是其他的，如 zgh，那么在<code>@</code>后面还需加上用户名，克隆的时候也需要加上</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">ssh </span><span style="color:#BD93F9;">-T</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">git@zgh.github.com</span></span>
<span class="line"></span></code></pre></div><p>然后在不同的仓库下设置局部的用户名和邮箱</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">user.name</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">yourname</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">config</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">user.email</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">youremail</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><h3 id="head" tabindex="-1">HEAD <a class="header-anchor" href="#head" aria-label="Permalink to &quot;HEAD&quot;">​</a></h3><ol><li>HEAD 是指向当前 commit 的引⽤，它具有唯⼀性，每个仓库中只有⼀个 HEAD。在每次提交时它都会⾃动向前移动到最新的 commit</li><li>branch 是⼀类引⽤。HEAD 除了直接指向 commit，也可以通过指向某个 branch 来间接指向 commit。当 HEAD 指向⼀个 branch 时，commit 发⽣时，HEAD 会带着它所指向的 branch ⼀起移动</li></ol><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><h3 id="克隆远程仓库" tabindex="-1">克隆远程仓库 <a class="header-anchor" href="#克隆远程仓库" aria-label="Permalink to &quot;克隆远程仓库&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">clone</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">仓库地址</span></span>
<span class="line"></span></code></pre></div><h3 id="新建分支" tabindex="-1">新建分支 <a class="header-anchor" href="#新建分支" aria-label="Permalink to &quot;新建分支&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">分支名称</span></span>
<span class="line"></span></code></pre></div><h3 id="切换分支-并更新工作区" tabindex="-1">切换分支，并更新工作区 <a class="header-anchor" href="#切换分支-并更新工作区" aria-label="Permalink to &quot;切换分支，并更新工作区&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">checkout</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">分支名称</span></span>
<span class="line"></span></code></pre></div><h3 id="新建分支-并切换到该分支" tabindex="-1">新建分支，并切换到该分支 <a class="header-anchor" href="#新建分支-并切换到该分支" aria-label="Permalink to &quot;新建分支，并切换到该分支&quot;">​</a></h3><p>等同于以上两条命令</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">checkout</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-b</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">分支名称</span></span>
<span class="line"></span></code></pre></div><h3 id="基于远程仓库创建新分支" tabindex="-1">基于远程仓库创建新分支 <a class="header-anchor" href="#基于远程仓库创建新分支" aria-label="Permalink to &quot;基于远程仓库创建新分支&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 基于远程仓库创建新分支</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">branch_name</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">remote_name/branch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 基于远程仓库创建新分支并且切换到新分支</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">checkout</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-b</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">branch_name</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">remote_name/branch</span></span>
<span class="line"></span></code></pre></div><p>如基于 develop 分支创建开发分支<strong>feture-test</strong>：<code>git checkout -b feture-test origin/develop</code>，origin 是远程仓库的别名</p><p>这样就可以不用创建本地的 develop 分支</p><p>1、在本地创建 develop 分支，基于它创建开发分支，每次提交前拉取最新的 develop 分支，然后合并进开发分支，最后提交 2、基于远程分支创建新分支，本地不用维护 develop 分支，每次提交前先拉取最新的代码，然后提交。这里执行 git pull 就是拉取远程 develop 分支的代码</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">.</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">commit</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-m</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">提交信息</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">pull</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># push之前可能需要add commit</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span></span>
<span class="line"></span></code></pre></div><h3 id="rebase" tabindex="-1">rebase <a class="header-anchor" href="#rebase" aria-label="Permalink to &quot;rebase&quot;">​</a></h3><h3 id="多个-commit-合并提交" tabindex="-1">多个 commit 合并提交 <a class="header-anchor" href="#多个-commit-合并提交" aria-label="Permalink to &quot;多个 commit 合并提交&quot;">​</a></h3><p>假设你写完了一个 A 功能，执行<code>git add .</code> <code>git commit</code>，然后发现还要改动一下，如果继续 add、commit，那么在 push 的时候会有 2 条提交记录，其实你只是完成了一个功能，保留一条提交信息才是简洁明了的。这时就需要将第一次 commit 撤销，回到暂存区，然后再 commit 提交，就只有一条记录了</p><h3 id="修复最新提交的错误" tabindex="-1">修复最新提交的错误 <a class="header-anchor" href="#修复最新提交的错误" aria-label="Permalink to &quot;修复最新提交的错误&quot;">​</a></h3><p>在提交时，如果加上 --amend 参数，则不会在当前 commit 上增加 commit，⽽是会把当前 commit ⾥的内容和暂存区（stageing area）⾥的内容合并起来后 创建⼀个新的 commit，⽤这个新的 commit 把当前 commit 替换掉，对最新⼀条 commit 进⾏修正</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">commit</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--amend</span></span>
<span class="line"></span></code></pre></div><h3 id="head-1" tabindex="-1">HEAD <a class="header-anchor" href="#head-1" aria-label="Permalink to &quot;HEAD&quot;">​</a></h3><ul><li>HEAD 表示当前版本</li><li>HEAD^ 上一个版本</li><li>HEAD^^ 上上一个版本</li><li>HEAD^^^ 上上上一个版本</li><li>HEAD~n 回撤 n 个版本，这种也是更加方便的</li></ul><h3 id="撤销最新的提交" tabindex="-1">撤销最新的提交 <a class="header-anchor" href="#撤销最新的提交" aria-label="Permalink to &quot;撤销最新的提交&quot;">​</a></h3><p><code>git reset [--soft | --mixed | --hard] [HEAD]</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">reset</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--hard</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">⽬标commit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">reset</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--hard</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">HEAD^</span></span>
<span class="line"></span></code></pre></div><h3 id="stash-临时存放工作区的改动" tabindex="-1">stash 临时存放⼯作区的改动 <a class="header-anchor" href="#stash-临时存放工作区的改动" aria-label="Permalink to &quot;stash 临时存放⼯作区的改动&quot;">​</a></h3><p>stash 指令可以把⼯作区的内容全部放在本地的⼀个独⽴的地⽅，它不会被提交和删除。</p><p>假设你当前正在开发中，突然需要优先干其他工作，又不想 add 和 commit，这时就可以将当前内容放入临时区，等其他工作干完了，再切换回你的分支，将临时区的内容取出来， 就可以继续之前的工作了</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 放进临时存储区</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">stash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 没有被 track 的⽂件，即从来没有被 add 的⽂件不会被 stash</span></span>
<span class="line"><span style="color:#6272A4;"># 可以加上 -u 参数，它是 --includeuntracked 的简写</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">stash</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-u</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 取出</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">stash</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">pop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看储存区所有提交列表</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">stash</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">list</span></span>
<span class="line"></span></code></pre></div><h3 id="暂存区" tabindex="-1">暂存区 <a class="header-anchor" href="#暂存区" aria-label="Permalink to &quot;暂存区&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 添加单个文件到暂存区</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">文件名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 将当前目录下的所有文件都添加到暂存区</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 将当前仓库的所有文件都添加到暂存区</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-A</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 从暂存区撤销文件，工作区的代码还在</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">rm</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--cached</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">文件名</span></span>
<span class="line"></span></code></pre></div><h3 id="提交到本地仓库" tabindex="-1">提交到本地仓库 <a class="header-anchor" href="#提交到本地仓库" aria-label="Permalink to &quot;提交到本地仓库&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># -m 后表示提交信息</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">commit</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-m</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">xx</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="删除本地仓库的文件" tabindex="-1">删除本地仓库的文件 <a class="header-anchor" href="#删除本地仓库的文件" aria-label="Permalink to &quot;删除本地仓库的文件&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 删除单个文件</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">rm</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">文件名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 删除目录</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">rm</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-r</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">目录名</span></span>
<span class="line"></span></code></pre></div><h3 id="拉取远程仓库" tabindex="-1">拉取远程仓库 <a class="header-anchor" href="#拉取远程仓库" aria-label="Permalink to &quot;拉取远程仓库&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 如果当前分支和远程分支已经建立了联系</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">pull</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 拉取指定远端分支合并到本地当前分支</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">pull</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">分支名</span></span>
<span class="line"></span></code></pre></div><p>pull 的内部操作其实是把远程仓库取到本地后（使⽤的是 fetch），再⽤⼀次 merge 来把远端仓库的新 commits 合并到本地</p><h3 id="提交到远程仓库" tabindex="-1">提交到远程仓库 <a class="header-anchor" href="#提交到远程仓库" aria-label="Permalink to &quot;提交到远程仓库&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 初次提交，需要和远程仓库先建立联系</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--set-upstream</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">分支名</span></span>
<span class="line"></span></code></pre></div><h3 id="查看分支" tabindex="-1">查看分支 <a class="header-anchor" href="#查看分支" aria-label="Permalink to &quot;查看分支&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 查看本地分支</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看远程分支</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-r</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看本地远程所有分支</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看本地分支所关联的远程分支</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-vv</span></span>
<span class="line"></span></code></pre></div><h3 id="合并分支" tabindex="-1">合并分支 <a class="header-anchor" href="#合并分支" aria-label="Permalink to &quot;合并分支&quot;">​</a></h3><p>比如你的代码提交之前需要合并最新的 develop 分支，则要做如下操作：</p><ul><li>切到 develop 分支，git pull 拉一下最新代码</li><li>切回开发分支，执行 git merge develop 合并一下 develop 代码</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">merge</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">被合并的分支名称</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">## 撤销合并到执行合并以前的状态</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">merge</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--abort</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">## 如果合并后的提交还停留在本地Git库，没有被推送到远程</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">reset</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--hard</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">HEAD</span></span>
<span class="line"></span></code></pre></div><h3 id="删除分支" tabindex="-1">删除分支 <a class="header-anchor" href="#删除分支" aria-label="Permalink to &quot;删除分支&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># -d 表示delete，用于已经合并过的分支</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-d</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">分支名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># -D 用于强制删除，不管是否合并过</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-D</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">分支名称</span></span>
<span class="line"></span></code></pre></div><h3 id="分支重命名" tabindex="-1">分支重命名 <a class="header-anchor" href="#分支重命名" aria-label="Permalink to &quot;分支重命名&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-m</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">旧分支名称</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">新分支名称</span></span>
<span class="line"></span></code></pre></div><h3 id="查看仓库当前状态" tabindex="-1">查看仓库当前状态 <a class="header-anchor" href="#查看仓库当前状态" aria-label="Permalink to &quot;查看仓库当前状态&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">status</span></span>
<span class="line"></span></code></pre></div><h3 id="查看历史记录" tabindex="-1">查看历史记录 <a class="header-anchor" href="#查看历史记录" aria-label="Permalink to &quot;查看历史记录&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">log</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看详细改动，-p 是 --patch的缩写</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">log</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-p</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看大致改动</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">log</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--stat</span></span>
<span class="line"></span></code></pre></div><h3 id="查看-commit" tabindex="-1">查看 commit <a class="header-anchor" href="#查看-commit" aria-label="Permalink to &quot;查看 commit&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 看当前的commit</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">show</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 看任意一个commit</span></span>
<span class="line"><span style="color:#6272A4;"># 在 show 后⾯加上这个 commit 的引⽤（branch 或 HEAD 标记）或它的 SHA-1 码</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">show</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">4fc58ba6808329d98146be8543aa14112c632213</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 看指定commit的指定文件</span></span>
<span class="line"><span style="color:#6272A4;"># 在 commit 的引⽤或 SHA-1 后输⼊⽂件名</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">show</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">4fc58ba6808329d98146be8543aa14112c632213</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">test.txt</span></span>
<span class="line"></span></code></pre></div><h3 id="查看未提交的内容" tabindex="-1">查看未提交的内容 <a class="header-anchor" href="#查看未提交的内容" aria-label="Permalink to &quot;查看未提交的内容&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula has-diff"><code><span class="line"><span style="color:#6272A4;"># 查看⼯作区和暂存区的区别</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">diff</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看暂存区和上⼀条 commit 的区别</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">diff</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--staged（或</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--cached）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看⼯作区和上⼀条 commit 的区别</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">diff</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">HEAD</span></span>
<span class="line"></span></code></pre></div><ul><li>第一条命令表示：如果你现在把所有⽂件都 add，你会向暂存区中增加哪些内容</li><li>第二条命令表示：如果你输⼊ git commit，你将会提交什么</li><li>第三条命令表示：如果你把所有⽂件都 add， 然后 git commit，你将会提交什么。是上⾯两条命令的内容相加</li></ul><h3 id="查看-origin-的详细信息" tabindex="-1">查看 origin 的详细信息 <a class="header-anchor" href="#查看-origin-的详细信息" aria-label="Permalink to &quot;查看 origin 的详细信息&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">remote</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">show</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span></span>
<span class="line"></span></code></pre></div><h3 id="查看本地关联的仓库地址" tabindex="-1">查看本地关联的仓库地址 <a class="header-anchor" href="#查看本地关联的仓库地址" aria-label="Permalink to &quot;查看本地关联的仓库地址&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">remote</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-v</span></span>
<span class="line"></span></code></pre></div><h3 id="同步本地的远程分支" tabindex="-1">同步本地的远程分支 <a class="header-anchor" href="#同步本地的远程分支" aria-label="Permalink to &quot;同步本地的远程分支&quot;">​</a></h3><p>删除远程已经不存在但本地还存在的远程分支</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">remote</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">prune</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">remote</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">update</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--prune</span></span>
<span class="line"></span></code></pre></div><h3 id="本地分支关联远程分支" tabindex="-1">本地分支关联远程分支 <a class="header-anchor" href="#本地分支关联远程分支" aria-label="Permalink to &quot;本地分支关联远程分支&quot;">​</a></h3><p>如果远程新建了一个分支，本地没有该分支，那么可以使用该命令在本地新建一个分支名叫 dev ，会自动跟踪远程的同名分支 dev</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">checkout</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--track</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin/dev</span></span>
<span class="line"></span></code></pre></div><h3 id="首次推送新分支到远程" tabindex="-1">首次推送新分支到远程 <a class="header-anchor" href="#首次推送新分支到远程" aria-label="Permalink to &quot;首次推送新分支到远程&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--set-upstream</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">分支名称</span></span>
<span class="line"></span></code></pre></div><h3 id="撤销、覆盖" tabindex="-1">撤销、覆盖 <a class="header-anchor" href="#撤销、覆盖" aria-label="Permalink to &quot;撤销、覆盖&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 添加所有并推送</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-A</span><span style="color:#F8F8F2;"> &amp;&amp; git </span><span style="color:#F1FA8C;">commit</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-m</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">提交信息</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> &amp;&amp; git </span><span style="color:#F1FA8C;">push</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 撤销本地修改并同步</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">reset</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--hard</span><span style="color:#F8F8F2;"> &amp;&amp; git </span><span style="color:#F1FA8C;">clean</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-df</span><span style="color:#F8F8F2;"> &amp;&amp; git </span><span style="color:#F1FA8C;">pull</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 强制覆盖本地代码</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">fetch</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--all</span><span style="color:#F8F8F2;"> &amp;&amp;  git </span><span style="color:#F1FA8C;">reset</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--hard</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin/master</span><span style="color:#F8F8F2;"> &amp;&amp; git </span><span style="color:#F1FA8C;">pull</span></span>
<span class="line"></span></code></pre></div><h3 id="仓库备份" tabindex="-1">仓库备份 <a class="header-anchor" href="#仓库备份" aria-label="Permalink to &quot;仓库备份&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 添加备份仓库</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">remote</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">set-url</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--add</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">http://192.168.12.2/digsur/digsur-solution.git</span></span>
<span class="line"></span></code></pre></div><h2 id="tag-标签" tabindex="-1">tag 标签 <a class="header-anchor" href="#tag-标签" aria-label="Permalink to &quot;tag 标签&quot;">​</a></h2><p><a href="https://git-scm.com/docs/git-tag" target="_blank" rel="noreferrer">https://git-scm.com/docs/git-tag</a></p><p><a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE" target="_blank" rel="noreferrer">官网 tag 实践</a></p><p>标签是跟 commit 挂钩的，是对某次历史提交的引用，用来给发布版本打标记</p><h3 id="创建-tag" tabindex="-1">创建 tag <a class="header-anchor" href="#创建-tag" aria-label="Permalink to &quot;创建 tag&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 创建tag，打在最近的一次 commit 记录上</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">tag</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 给历史版本添加tag，后接commit ID</span></span>
<span class="line"><span style="color:#6272A4;"># 这里id可以取前7位表示，先执行 git log --pretty=oneline --abbrev-commit 可以看到</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">tag</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.1</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">b3c214115924f9de069aa81d866143e52f4b5348</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 创建有备注的tag</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">tag</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-a</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.0</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-m</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">发布v1.0.0版本</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 给历史版本创建有备注的tag</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">tag</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-a</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.0</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">b3c214115924f9de069aa81d866143e52f4b5348</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-m</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">历史版本带备注</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="查看-tag" tabindex="-1">查看 tag <a class="header-anchor" href="#查看-tag" aria-label="Permalink to &quot;查看 tag&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 查看所有tag</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">tag</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 使用通配符过滤tag</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">tag</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-l</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">v1.1*</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 查看某个tag的详细信息</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">show</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.0</span></span>
<span class="line"></span></code></pre></div><h3 id="发布-tag" tabindex="-1">发布 tag <a class="header-anchor" href="#发布-tag" aria-label="Permalink to &quot;发布 tag&quot;">​</a></h3><p>通常的 git push 不会将本地标签推送到远程，需要进行显式的操作</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 推送单个tag</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 推送本地所有tag</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--tags</span></span>
<span class="line"></span></code></pre></div><h3 id="删除-tag" tabindex="-1">删除 tag <a class="header-anchor" href="#删除-tag" aria-label="Permalink to &quot;删除 tag&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 删除本地tag</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">tag</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-d</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 删除远程tag，有两种方式</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">:refs/tags/v1.</span><span style="color:#BD93F9;">0.1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--delete</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.1</span></span>
<span class="line"></span></code></pre></div><h3 id="检出标签" tabindex="-1">检出标签 <a class="header-anchor" href="#检出标签" aria-label="Permalink to &quot;检出标签&quot;">​</a></h3><p>如果你做了某些更改然后提交它们，标签不会发生变化， 但你的新提交将不属于任何分支，并且将无法访问，除非通过确切的提交哈希才能访问，通常需要创建一个新分支</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">checkout</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 推荐</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">checkout</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-b</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">new-branch</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">v1.</span><span style="color:#BD93F9;">0.0</span></span>
<span class="line"></span></code></pre></div><h2 id="cherry-pick-把选中的-commits-一个个合并进来" tabindex="-1">cherry-pick：把选中的 commits ⼀个个合并进来 <a class="header-anchor" href="#cherry-pick-把选中的-commits-一个个合并进来" aria-label="Permalink to &quot;cherry-pick：把选中的 commits ⼀个个合并进来&quot;">​</a></h2><p>cherry-pick 是⼀种特殊的合并操作，使⽤它可以点选⼀批 commits，按序合并</p><p><a href="https://git-scm.com/docs/git-cherry-pick" target="_blank" rel="noreferrer">https://git-scm.com/docs/git-cherry-pick</a></p><h2 id="关联远程仓库" tabindex="-1">关联远程仓库 <a class="header-anchor" href="#关联远程仓库" aria-label="Permalink to &quot;关联远程仓库&quot;">​</a></h2><p>在远程创建一个新的仓库，克隆到本地后推送</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">clone</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">ssh://git@192.168.8.8:</span><span style="color:#BD93F9;">30001</span><span style="color:#F1FA8C;">/gkhyy/report_web.git</span></span>
<span class="line"><span style="color:#8BE9FD;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">report_web</span></span>
<span class="line"><span style="color:#F8F8F2;">touch </span><span style="color:#F1FA8C;">README.md</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">README.md</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">commit</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-m</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">add README</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-u</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">main</span></span>
<span class="line"></span></code></pre></div><p>如果存在本地项目，想将其推送到 github 上，要先和远程仓库关联，然后推送</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">remote</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">git@github.com:Ivanzgh/elasticsearch.git</span><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;"># 地址换成自己的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">branch</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-M</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-u</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">main</span></span>
<span class="line"></span></code></pre></div><p>推送一个已经存在的文件夹</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#8BE9FD;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">existing_folder</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">init</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">remote</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">ssh://git@192.168.8.8:</span><span style="color:#BD93F9;">30001</span><span style="color:#F1FA8C;">/gkhyy/report_web.git</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">.</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">commit</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-m</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Initial commit</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-u</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">main</span></span>
<span class="line"></span></code></pre></div><p>推送一个已经存在的 git 仓库</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#8BE9FD;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">existing_repo</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">remote</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">rename</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">old-origin</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">remote</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">add</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">ssh://git@192.168.8.8:</span><span style="color:#BD93F9;">30001</span><span style="color:#F1FA8C;">/gkhyy/report_web.git</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-u</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--all</span></span>
<span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">push</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-u</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">origin</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--tags</span></span>
<span class="line"></span></code></pre></div><h2 id="提交规范" tabindex="-1">提交规范 <a class="header-anchor" href="#提交规范" aria-label="Permalink to &quot;提交规范&quot;">​</a></h2><p>格式：<code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</code></p><p><strong>常用的 type 值</strong></p><ul><li>feat: 新功能</li><li>fix: 修复 bug</li><li>docs: 仅仅修改了文档，比如 README 等等</li><li>style: 仅仅修改了空格、格式缩进、不改变代码逻辑</li><li>refactor: 代码重构，没有加新功能或者修复 bug</li><li>perf: 性能优化，比如提升性能、体验</li><li>test: 测试用例，包括单元测试、集成测试等</li><li>build: 改变了 build 工具 如 grunt 换成了 npm</li><li>chore: 改变构建流程、或者增加依赖库、工具等</li><li>revert: 撤销上一次的 commit</li></ul><p><strong>scope 用来说明此次修改的影响范围</strong></p><ul><li>all: 表示影响面大 ，如修改了网络框架，会对整个程序产生影响</li><li>location: 表示影响小，某个小小的功能</li><li>module: 表示会影响某个模块，如登录模块、首页模块等</li></ul><p><strong>subject 用来简要描述本次改动</strong></p><p>示例: <code>feat(all): project init</code>、<code>docs(location): edit README</code></p><h2 id="gitflow-工作流" tabindex="-1">Gitflow 工作流 <a class="header-anchor" href="#gitflow-工作流" aria-label="Permalink to &quot;Gitflow 工作流&quot;">​</a></h2><p>Gitflow 工作流(Gitflow Workflow)是目前最流行的 git 团队协作模式</p><ul><li>master/main: 主分支，正式环境部署使用，唯一一个正式对外发布的分支，通常还要加上相应版本号的 tag</li><li>develop: 集成分支，专门用来集成开发完成的各种功能的，保存了开发的最新代码，由 main 分支创建而来</li><li>feature: 功能分支，由 develop 分支创建而来，开发完成后被合并进 develop 分支</li><li>release: 预发布分支，为发布新的产品版本而设计的分支 <ul><li>当 develop 分支已经有了本次上线的所有代码的时候，并且已通过全部测试的时候，可以从 develop 分支创建 release 分支了</li><li>release 分支创建以后，就不允许再有新的功能特性被加入到这个分支了，只有 bug 修复或者文档编辑之类的工作才允许进入该分支</li><li>有了 release 分支就可以让 develop 分支空闲出来以接受新的 feature 分支上的代码提交，进入新的软件开发迭代周期</li><li>生产上线时将 release 代码合并到 main 分支，并给 main 分支打上带有版本信息的 tag</li><li>同时 release 分支也会被合并到 develop 分支</li></ul></li><li>hotfix: 线上 bug 紧急修复分支，从 main 分支创建而来，修改完成后合并到 main 分支和 develop 分支，以及当前的 release 分支</li></ul><p>比如现在需要开发登录功能，首先从 develop 分支拉取最新代码，然后执行<code>git checkout -b feat-login</code>，表示新建了<code>feat-login</code>分支，并切换到了这个分支的工作区。代码提交后发起合并申请，期望合并到 develop 分支，仓库管理者同意合并后将删除这个分支。</p><p>如果是修复测试环境的 bug，例如<code>fix-login</code>分支，那么需要合并到对应的 release 分支。release 分支可以有多个版本，如 release1.0.0、release2.0.1 等。</p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="mac-下误将-ds-store-文件上传到-github" tabindex="-1">mac 下误将.DS_Store 文件上传到 GitHub <a class="header-anchor" href="#mac-下误将-ds-store-文件上传到-github" aria-label="Permalink to &quot;mac 下误将.DS_Store 文件上传到 GitHub&quot;">​</a></h3><p>在 Mac 下，每个目录都有一个.DS_Store 文件，用于存储当前文件夹的一些 meta 信息。没上传前可以将其添加到.gitignore 文件中，若已经上传，则删除远端的即可</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">git </span><span style="color:#F1FA8C;">rm</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--cached</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">.DS_Store</span></span>
<span class="line"></span></code></pre></div><p>以上命令将.DS_Store 文件从 git 索引库中删除，并没有操作本地文件。</p><h3 id="gitkeep-的作用" tabindex="-1">.gitkeep 的作用 <a class="header-anchor" href="#gitkeep-的作用" aria-label="Permalink to &quot;.gitkeep 的作用&quot;">​</a></h3><p>为了可以提交空的文件夹</p><h3 id="gitignore" tabindex="-1">.gitignore <a class="header-anchor" href="#gitignore" aria-label="Permalink to &quot;.gitignore&quot;">​</a></h3><p>这里可以放入你希望被 git 忽略的⽬录和⽂件</p><h3 id="无法访问-github" tabindex="-1">无法访问 github <a class="header-anchor" href="#无法访问-github" aria-label="Permalink to &quot;无法访问 github&quot;">​</a></h3><p>Windows 下修改 hosts 文件，打开<code>C:\\Windows\\System32\\drivers\\etc</code>下的 hosts 文件，添加如下内容：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">140.82.113.4 github.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.69.194 github.global.ssl.fastly.net</span></span>
<span class="line"><span style="color:#F8F8F2;">185.199.108.153 assets-cdn.github.com</span></span>
<span class="line"><span style="color:#F8F8F2;">185.199.109.153 assets-cdn.github.com</span></span>
<span class="line"><span style="color:#F8F8F2;">185.199.110.153 assets-cdn.github.com</span></span>
<span class="line"><span style="color:#F8F8F2;">185.199.111.153 assets-cdn.github.com</span></span>
<span class="line"><span style="color:#F8F8F2;">140.82.112.3 gist.github.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 raw.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 gist.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 cloud.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 camo.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 avatars0.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 avatars1.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 avatars2.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 avatars3.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 avatars4.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 avatars5.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 avatars6.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 avatars7.githubusercontent.com</span></span>
<span class="line"><span style="color:#F8F8F2;">199.232.68.133 avatars8.githubusercontent.com</span></span>
<span class="line"></span></code></pre></div><p>添加以后可以解决 github 无法访问、图片和头像加载失败等问题。</p><p>注意以上地址并不是固定的，通过<a href="https://www.ipaddress.com/" target="_blank" rel="noreferrer">https://www.ipaddress.com/</a>输入以上各个域名即可查询到最新的 IP 地址。 如果有必要可以刷新一下 DNS 解析缓存，打开 cmd 窗口输入<code>ipconfig /flushdns</code>即可。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果无法保存 hosts 文件，可以在开始栏找到 Windows 附件，找到记事本，以管理员身份运行，然后找到 hosts 文件位置，选择所有文件，即可保存更改。</p></div>`,192),e=[o];function c(t,F,r,i,y,d){return n(),a("div",null,e)}const u=s(p,[["render",c]]);export{g as __pageData,u as default};
