import{_ as a,c as e,o as t,Q as r}from"./chunks/framework.f14b72c3.js";const b=JSON.parse('{"title":"数据结构","description":"","frontmatter":{},"headers":[],"relativePath":"base/data-structure/index.md","lastUpdated":1685193505000}'),o={name:"base/data-structure/index.md"},n=r('<h1 id="数据结构" tabindex="-1">数据结构 <a class="header-anchor" href="#数据结构" aria-label="Permalink to &quot;数据结构&quot;">​</a></h1><h2 id="栈" tabindex="-1">栈 <a class="header-anchor" href="#栈" aria-label="Permalink to &quot;栈&quot;">​</a></h2><p>栈是内存中一块用于存储局部变量和函数参数的线性结构，遵循着<strong>先进后出</strong>的原则</p><p>栈中的变量在函数调用结束后就会被销毁</p><h2 id="堆" tabindex="-1">堆 <a class="header-anchor" href="#堆" aria-label="Permalink to &quot;堆&quot;">​</a></h2><h2 id="队列" tabindex="-1">队列 <a class="header-anchor" href="#队列" aria-label="Permalink to &quot;队列&quot;">​</a></h2><p>遵循<strong>先进先出</strong>原则</p><h2 id="链表" tabindex="-1">链表 <a class="header-anchor" href="#链表" aria-label="Permalink to &quot;链表&quot;">​</a></h2><h2 id="图" tabindex="-1">图 <a class="header-anchor" href="#图" aria-label="Permalink to &quot;图&quot;">​</a></h2><h2 id="树" tabindex="-1">树 <a class="header-anchor" href="#树" aria-label="Permalink to &quot;树&quot;">​</a></h2>',10),s=[n];function i(d,h,l,c,_,u){return t(),e("div",null,s)}const m=a(o,[["render",i]]);export{b as __pageData,m as default};
