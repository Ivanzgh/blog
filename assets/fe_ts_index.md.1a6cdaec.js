import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.f14b72c3.js";const u=JSON.parse('{"title":"TypeScript","description":"","frontmatter":{},"headers":[],"relativePath":"fe/ts/index.md","lastUpdated":1681829744000}'),p={name:"fe/ts/index.md"},o=l(`<h1 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;TypeScript&quot;">​</a></h1><p>官网：<a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">https://www.typescriptlang.org/</a></p><p>中文手册： <a href="https://typescript.bootcss.com/" target="_blank" rel="noreferrer">https://typescript.bootcss.com/</a></p><p><a href="https://jkchao.github.io/typescript-book-chinese/" target="_blank" rel="noreferrer">《深入理解 TypeScript》</a></p><div class="tip custom-block"><p class="custom-block-title">关于《深入理解 TypeScript》</p><p>注意 typescript 版本问题，代码还是手动敲一下为好，当前内容基于<code>Version 4.0.3</code>，一切以官方为主</p></div><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>安装</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-g</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">typescript</span></span>
<span class="line"></span></code></pre></div><p>验证</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">tsc </span><span style="color:#BD93F9;">-v</span></span>
<span class="line"></span></code></pre></div><p>编译，然后可以得到一个同名的 js 文件</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">tsc </span><span style="color:#F1FA8C;">helloworld.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">#如果不在根目录下，要加反斜杠</span></span>
<span class="line"><span style="color:#F8F8F2;">tsc </span><span style="color:#F1FA8C;">.</span><span style="color:#FF79C6;">\\s</span><span style="color:#F1FA8C;">rc</span><span style="color:#FF79C6;">\\h</span><span style="color:#F1FA8C;">elloworld.ts</span></span>
<span class="line"></span></code></pre></div><p>也可以用<code>ts-node</code>插件直接在终端查看结果，但不会生成 js 文件</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-g</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">ts-node</span></span>
<span class="line"></span></code></pre></div><p>运行</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">ts-node </span><span style="color:#F1FA8C;">helloworld.ts</span></span>
<span class="line"></span></code></pre></div><h2 id="类型" tabindex="-1">类型 <a class="header-anchor" href="#类型" aria-label="Permalink to &quot;类型&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> isDone</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">boolean</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;">// 布尔</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> num</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">6</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;">// 数字</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;">// 字符串</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> obj</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">object</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {} </span><span style="color:#6272A4;">// 对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> u</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">undefined</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">undefined</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> n</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">null</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span></span>
<span class="line"></span></code></pre></div><h3 id="数组类型" tabindex="-1">数组类型 <a class="header-anchor" href="#数组类型" aria-label="Permalink to &quot;数组类型&quot;">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> list1</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">] </span><span style="color:#6272A4;">// 由数字组成的数组</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> list2</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">Array</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">6</span><span style="color:#F8F8F2;">] </span><span style="color:#6272A4;">// 数组泛型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> list3</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">1</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">] </span><span style="color:#6272A4;">// 元组Tuple，表示一个已知元素数量和类型的数组</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> list4</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">)[] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">b</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">] </span><span style="color:#6272A4;">// 不知道元素数量，类型已知</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> list5</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;">] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ha</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">666</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> [ha, info] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> list5 </span><span style="color:#6272A4;">// 解构赋值</span></span>
<span class="line"></span></code></pre></div><p>对象数组的类型注解</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> arr</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">; age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;"> }[] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">  { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">tom</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">18</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">jack</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">19</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span></code></pre></div><p>如果有同样类型的数组，可以用 <strong>类型别名</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">user</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">; age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> arr</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">user</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">  { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">tom</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">18</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">jack</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">19</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span></code></pre></div><p>也可以使用 <strong>类</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">user</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span></span>
<span class="line"><span style="color:#F8F8F2;">  age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> arr</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">user</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">  { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">tom</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">18</span><span style="color:#F8F8F2;"> },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">jack</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">19</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span></code></pre></div><h3 id="symbol类型" tabindex="-1"><code>Symbol</code>类型 <a class="header-anchor" href="#symbol类型" aria-label="Permalink to &quot;\`Symbol\`类型&quot;">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> sym </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Symbol</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> obj </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  [sym]</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(obj[sym]) </span><span style="color:#6272A4;">// zgh</span></span>
<span class="line"></span></code></pre></div><h3 id="枚举类型" tabindex="-1">枚举类型 <a class="header-anchor" href="#枚举类型" aria-label="Permalink to &quot;枚举类型&quot;">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">enum</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">Direction</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  NORTH,</span></span>
<span class="line"><span style="color:#F8F8F2;">  SOUTH,</span></span>
<span class="line"><span style="color:#F8F8F2;">  EAST,</span></span>
<span class="line"><span style="color:#F8F8F2;">  WEST</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> dir</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">Direction</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Direction.</span><span style="color:#BD93F9;">NORTH</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(dir) </span><span style="color:#6272A4;">// 0</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> dirName</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Direction[</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(dirName) </span><span style="color:#6272A4;">// EAST</span></span>
<span class="line"></span></code></pre></div><h3 id="any类型" tabindex="-1"><code>Any</code>类型 <a class="header-anchor" href="#any类型" aria-label="Permalink to &quot;\`Any\`类型&quot;">​</a></h3><p>即任意类型，ts 允许对 any 类型的值进行任何操作</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> notSure</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">any</span></span>
<span class="line"><span style="color:#F8F8F2;">notSure.user.name </span><span style="color:#6272A4;">// ok</span></span>
<span class="line"><span style="color:#F8F8F2;">notSure[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#6272A4;">// ok</span></span>
<span class="line"><span style="color:#50FA7B;">notSure</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// ok</span></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">notSure</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// ok</span></span>
<span class="line"></span></code></pre></div><h3 id="unknown类型" tabindex="-1"><code>unknown</code>类型 <a class="header-anchor" href="#unknown类型" aria-label="Permalink to &quot;\`unknown\`类型&quot;">​</a></h3><p>就是不知道啥类型，只能被赋值给<code>any</code>类型和<code>unknown</code>类型本身</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> unk</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">unknown</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">unk.user.name </span><span style="color:#6272A4;">// Error</span></span>
<span class="line"><span style="color:#50FA7B;">unk</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// Error</span></span>
<span class="line"><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">unk</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// Error</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> value</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">unknown</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> value1</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">unknown</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> value </span><span style="color:#6272A4;">// OK</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> value2</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">any</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> value </span><span style="color:#6272A4;">// OK</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> value3</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">boolean</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> value </span><span style="color:#6272A4;">// Error</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> value4</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> value </span><span style="color:#6272A4;">// Error</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> value5</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> value </span><span style="color:#6272A4;">// Error</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> value6</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">object</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> value </span><span style="color:#6272A4;">// Error</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> value7</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">any</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> value </span><span style="color:#6272A4;">// Error</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">value8</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">Function</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> value </span><span style="color:#6272A4;">// Error</span></span>
<span class="line"></span></code></pre></div><h3 id="void类型" tabindex="-1"><code>void</code>类型 <a class="header-anchor" href="#void类型" aria-label="Permalink to &quot;\`void\`类型&quot;">​</a></h3><p>表示没有任何类型，比如当一个函数没有返回值时</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">getInfo</span><span style="color:#F8F8F2;">()</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">This is message</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="never类型" tabindex="-1"><code>never</code>类型 <a class="header-anchor" href="#never类型" aria-label="Permalink to &quot;\`never\`类型&quot;">​</a></h3><p>表示永不存在的值的类型。 例如，<code>never</code>类型是那些总是会抛出异常、没有返回值的函数表达式、箭头函数表达式的返回值类型</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">error</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">message</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">never</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Error</span><span style="color:#F8F8F2;">(message)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">infiniteLoop</span><span style="color:#F8F8F2;">()</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">never</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">while</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">) {}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="联合类型" tabindex="-1">联合类型 <a class="header-anchor" href="#联合类型" aria-label="Permalink to &quot;联合类型&quot;">​</a></h3><p>以<code>|</code>为标记，若希望属性为多个类型中的一个，可以使用联合类型。下面的例子表示函数参数接受一个数字类型的数组或者一个字符串</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">union</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">item</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;">[] </span><span style="color:#FF79C6;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">typeof</span><span style="color:#F8F8F2;"> item </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> item</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#50FA7B;">union</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">sss</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="类型别名" tabindex="-1">类型别名 <a class="header-anchor" href="#类型别名" aria-label="Permalink to &quot;类型别名&quot;">​</a></h3><p>使用<code>type</code>定义一个类型别名</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// 此处直接注解name是一个string类型</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 此处定义一个别名age</span></span>
<span class="line"><span style="color:#FF79C6;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">age</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> user</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">age</span></span>
<span class="line"><span style="color:#F8F8F2;">user </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">123</span></span>
<span class="line"><span style="color:#F8F8F2;">user </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">he</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>类型别名和接口的区别</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">name</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">user1</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">; age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">interface</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">user2</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span></span>
<span class="line"><span style="color:#F8F8F2;">  age</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>类型别名可以直接注解字符串、数字等类型，而接口只能注解对象</p>`,51),F=[o];function e(t,c,r,y,i,C){return a(),n("div",null,F)}const g=s(p,[["render",e]]);export{u as __pageData,g as default};
