import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.f14b72c3.js";const g=JSON.parse('{"title":"Three","description":"","frontmatter":{},"headers":[],"relativePath":"vis/three/index.md","lastUpdated":1684684556000}'),o={name:"vis/three/index.md"},p=l(`<h1 id="three" tabindex="-1">Three <a class="header-anchor" href="#three" aria-label="Permalink to &quot;Three&quot;">​</a></h1><h2 id="材质" tabindex="-1">材质 <a class="header-anchor" href="#材质" aria-label="Permalink to &quot;材质&quot;">​</a></h2><h2 id="相机" tabindex="-1">相机 <a class="header-anchor" href="#相机" aria-label="Permalink to &quot;相机&quot;">​</a></h2><h3 id="正交相机" tabindex="-1">正交相机 <a class="header-anchor" href="#正交相机" aria-label="Permalink to &quot;正交相机&quot;">​</a></h3><p>在这种投影模式下，无论物体距离相机距离远或者近，在最终渲染的图片中物体的大小都保持不变。</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">OrthographicCamera( </span><span style="color:#F1FA8C;">left,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">right,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">top,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">bottom,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">near,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">far</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre></div><ul><li>left — 视锥体左侧面</li><li>right — 右侧面</li><li>top — 上侧面</li><li>bottom — 下侧面</li><li>near — 近截面，默认值 0.1</li><li>far — 远截面，默认值 2000</li></ul><p><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418625.png" alt="image"></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> k </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> window.innerWidth </span><span style="color:#FF79C6;">/</span><span style="color:#F8F8F2;"> window.innerHeight</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> s </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">200</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> camera </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">OrthographicCamera</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">s </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> k, s </span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;"> k, s, </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;">s, </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">1000</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 左截面、右截面、上截面、下截面、近截面、远截面</span></span>
<span class="line"><span style="color:#F8F8F2;">camera.position.</span><span style="color:#50FA7B;">set</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">300</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">400</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">300</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">camera.</span><span style="color:#50FA7B;">lookAt</span><span style="color:#F8F8F2;">(scene.position)</span></span>
<span class="line"></span></code></pre></div><h3 id="透视相机" tabindex="-1">透视相机 <a class="header-anchor" href="#透视相机" aria-label="Permalink to &quot;透视相机&quot;">​</a></h3><p>这一投影模式被用来模拟人眼所看到的景象</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">PerspectiveCamera( </span><span style="color:#F1FA8C;">fov,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">aspect,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">near,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">far</span><span style="color:#F8F8F2;"> )</span></span>
<span class="line"></span></code></pre></div><ul><li>fov — 视野角度，默认值 50</li><li>aspect — 视锥体长宽比，默认值 1(正方形画布)</li><li>near — 近截面，默认值 0.1</li><li>far — 远截面，默认值 2000</li></ul><p>只有离相机的距离大于 near 值，小于 far 值，且在相机的可视角度之内，才能被相机投影到。</p><p><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418565.png" alt="image"><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418596.png" alt="image"><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418611.png" alt="image"></p><p>示例：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> camera </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">PerspectiveCamera</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">45</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">1000</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 视角(单位是度)、视锥体长宽比(width/height)、近截面、远截面</span></span>
<span class="line"><span style="color:#F8F8F2;">camera.position.</span><span style="color:#50FA7B;">set</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">300</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">400</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">300</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">camera.</span><span style="color:#50FA7B;">lookAt</span><span style="color:#F8F8F2;">(scene.position)</span></span>
<span class="line"></span></code></pre></div><p>如果将视野角度 fov 变小，则物体在页面上会变大。原因是视野角度变小后，视景窗口就变小了，而物体大小实际是不会变的，但相对视景窗口来说就变大了。</p><h2 id="灯光" tabindex="-1">灯光 <a class="header-anchor" href="#灯光" aria-label="Permalink to &quot;灯光&quot;">​</a></h2><h3 id="平行光" tabindex="-1">平行光 <a class="header-anchor" href="#平行光" aria-label="Permalink to &quot;平行光&quot;">​</a></h3><p>默认<code>position</code>位置在<code>(0, 1, 0)</code>，指向原点<code>(0, 0, 0)</code>。可设置<code>target</code>属性为场景中的其他任意有<code>position</code>属性的对象</p><p>一种方式是创建<code>Object3D</code>对象</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> targetObject </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Object3D</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> v1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { x</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">84768.72257683857</span><span style="color:#F8F8F2;">, y</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">31758.999152786924</span><span style="color:#F8F8F2;">, z</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">targetObject.position.</span><span style="color:#50FA7B;">copy</span><span style="color:#F8F8F2;">(v1)</span></span>
<span class="line"><span style="color:#F8F8F2;">scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(targetObject)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> light </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">DirectionalLight</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0xffffff</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">0.4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">light.target </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> targetObject</span></span>
<span class="line"><span style="color:#F8F8F2;">scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(light)</span></span>
<span class="line"></span></code></pre></div><p>另一种方式是在场景中创建网格模型<code>mesh</code>。聚光灯设置<code>target</code>属性和平行光的方式一样</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> spotLight </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">SpotLight</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0x00ff00</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> cubeGeometry </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">BoxGeometry</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0.001</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">0.001</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">0.001</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> cubeMaterial </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">MeshLambertMaterial</span><span style="color:#F8F8F2;">({ color</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">yellow</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> mesh </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">Mesh</span><span style="color:#F8F8F2;">(cubeGeometry, cubeMaterial)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> v1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { x</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">84768.72257683857</span><span style="color:#F8F8F2;">, y</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">31758.999152786924</span><span style="color:#F8F8F2;">, z</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#F8F8F2;">mesh.position.</span><span style="color:#50FA7B;">copy</span><span style="color:#F8F8F2;">(v1)</span></span>
<span class="line"><span style="color:#F8F8F2;">spotLight.target </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> mesh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(spotLight)</span></span>
<span class="line"><span style="color:#F8F8F2;">scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(mesh)</span></span>
<span class="line"></span></code></pre></div><h3 id="聚光灯" tabindex="-1">聚光灯 <a class="header-anchor" href="#聚光灯" aria-label="Permalink to &quot;聚光灯&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> spotLight </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">SpotLight</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0xffffff</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">spotLight.position.</span><span style="color:#50FA7B;">set</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">1000</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(spotLight)</span></span>
<span class="line"></span></code></pre></div><p>辅助工具</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> spotLightHelper </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">THREE</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">SpotLightHelper</span><span style="color:#F8F8F2;">(spotLight)</span></span>
<span class="line"><span style="color:#F8F8F2;">scene.</span><span style="color:#50FA7B;">add</span><span style="color:#F8F8F2;">(spotLightHelper)</span></span>
<span class="line"></span></code></pre></div><h2 id="阴影" tabindex="-1">阴影 <a class="header-anchor" href="#阴影" aria-label="Permalink to &quot;阴影&quot;">​</a></h2><h2 id="几何体" tabindex="-1">几何体 <a class="header-anchor" href="#几何体" aria-label="Permalink to &quot;几何体&quot;">​</a></h2><h2 id="平移、旋转、缩放" tabindex="-1">平移、旋转、缩放 <a class="header-anchor" href="#平移、旋转、缩放" aria-label="Permalink to &quot;平移、旋转、缩放&quot;">​</a></h2><h2 id="着色器" tabindex="-1">着色器 <a class="header-anchor" href="#着色器" aria-label="Permalink to &quot;着色器&quot;">​</a></h2><h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h2><h3 id="stats-js" tabindex="-1">stats.js <a class="header-anchor" href="#stats-js" aria-label="Permalink to &quot;stats.js&quot;">​</a></h3><p>性能监控</p><p><a href="https://github.com/mrdoob/stats.js" target="_blank" rel="noreferrer">https://github.com/mrdoob/stats.js</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// &lt;script src=&quot;https://cdn.jsdelivr.net/npm/three@0.97.0/examples/js/libs/stats.min.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> stats </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Stats</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">stats.domElement.style.zIndex </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">100</span></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">map</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">appendChild</span><span style="color:#F8F8F2;">(stats.domElement)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">animation</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  stats.</span><span style="color:#50FA7B;">update</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">requestAnimationFrame</span><span style="color:#F8F8F2;">(animation)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#50FA7B;">animation</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre></div><h3 id="dat-gui" tabindex="-1">dat.gui <a class="header-anchor" href="#dat-gui" aria-label="Permalink to &quot;dat.gui&quot;">​</a></h3><p>控制器</p><p><a href="https://github.com/dataarts/dat.gui" target="_blank" rel="noreferrer">https://github.com/dataarts/dat.gui</a></p><h3 id="tween-js" tabindex="-1">tween.js <a class="header-anchor" href="#tween-js" aria-label="Permalink to &quot;tween.js&quot;">​</a></h3><p>动画引擎</p><p><a href="https://github.com/tweenjs/tween.js" target="_blank" rel="noreferrer">https://github.com/tweenjs/tween.js</a></p>`,44),e=[p];function t(F,c,r,y,i,d){return n(),a("div",null,e)}const u=s(o,[["render",t]]);export{g as __pageData,u as default};
