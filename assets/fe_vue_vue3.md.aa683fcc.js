import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.f14b72c3.js";const u=JSON.parse('{"title":"vue3","description":"","frontmatter":{},"headers":[],"relativePath":"fe/vue/vue3.md","lastUpdated":1685193505000}'),p={name:"fe/vue/vue3.md"},o=l(`<h1 id="vue3" tabindex="-1">vue3 <a class="header-anchor" href="#vue3" aria-label="Permalink to &quot;vue3&quot;">​</a></h1><h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h2><h3 id="vite" tabindex="-1">vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;vite&quot;">​</a></h3><p>先安装<code>vite</code>，然后按照提示操作即可</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">init</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">vite@latest</span></span>
<span class="line"></span></code></pre></div><h3 id="vue-cli" tabindex="-1">@vue/cli <a class="header-anchor" href="#vue-cli" aria-label="Permalink to &quot;@vue/cli&quot;">​</a></h3><p>首先安装或更新<code>@vue/cli 4.5.7</code>版本及以上</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-g</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">@vue/cli</span></span>
<span class="line"></span></code></pre></div><p>创建一个项目，名称叫 <code>myvue3</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">vue </span><span style="color:#F1FA8C;">create</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">myvue3</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果在<code>Windows</code>上使用 <code>Git Bash</code>，交互提示符并不工作。必须通过 <code>winpty vue.cmd create myvue3</code> 启动这个命令</p></div><p>选择模板，如果搭配 <code>typescript</code>，需要选择最后一项自定义</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Please pick a preset: (Use </span><span style="color:#F1FA8C;">arrow</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">keys</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> Default ([Vue </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">] babel, eslint)</span></span>
<span class="line"><span style="color:#F8F8F2;">  Default (Vue </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">Preview</span><span style="color:#F8F8F2;">) ([Vue </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">] babel, eslint)</span></span>
<span class="line"><span style="color:#F8F8F2;">  Manually </span><span style="color:#F1FA8C;">select</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">features</span></span>
<span class="line"></span></code></pre></div><p>选择自定义选项，箭头上下移动，按空格即可选择，最后回车</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Check the features needed </span><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> your project: (Press </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F1FA8C;">spac</span><span style="color:#F8F8F2;">e</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">to</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">select,</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;">a</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">to</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">toggle</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">all,</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;">i</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">to</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">invert</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">selection</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#E9F284;">&gt;(</span><span style="color:#FF79C6;">*</span><span style="color:#E9F284;">)</span><span style="color:#F8F8F2;"> Choose Vue version</span></span>
<span class="line"><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;">) Babel</span></span>
<span class="line"><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;">) TypeScript</span></span>
<span class="line"><span style="color:#F8F8F2;"> ( ) Progressive </span><span style="color:#F1FA8C;">Web</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">App</span><span style="color:#F8F8F2;"> (PWA) </span><span style="color:#F1FA8C;">Support</span></span>
<span class="line"><span style="color:#F8F8F2;"> ( ) Router</span></span>
<span class="line"><span style="color:#F8F8F2;"> ( ) Vuex</span></span>
<span class="line"><span style="color:#F8F8F2;"> ( ) CSS </span><span style="color:#F1FA8C;">Pre-processors</span></span>
<span class="line"><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">*</span><span style="color:#F8F8F2;">) Linter </span><span style="color:#F1FA8C;">/</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">Formatter</span></span>
<span class="line"><span style="color:#F8F8F2;"> ( ) Unit </span><span style="color:#F1FA8C;">Testing</span></span>
<span class="line"><span style="color:#F8F8F2;"> ( ) E2E </span><span style="color:#F1FA8C;">Testing</span></span>
<span class="line"></span></code></pre></div><p>选择版本，选择<code>3.x</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Choose a version of Vue.js that you want to start the project with (Use </span><span style="color:#F1FA8C;">arrow</span></span>
<span class="line"><span style="color:#F8F8F2;">keys)</span></span>
<span class="line"><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> 2.x</span></span>
<span class="line"><span style="color:#F8F8F2;">  3.x (Preview)</span></span>
<span class="line"></span></code></pre></div><p>是否使用<code>class-style</code>这个类样式语法，选择 no</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Use class-style component syntax</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> (y/N)</span></span>
<span class="line"></span></code></pre></div><p>是否使用<code>TypeScript</code>和<code>Babel</code>的形式编译 JSX，选择 no</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Use Babel alongside TypeScript (required </span><span style="color:#F1FA8C;">for</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">modern</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">mode,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">auto-detected</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">polyfi</span></span>
<span class="line"><span style="color:#F8F8F2;">lls, </span><span style="color:#F1FA8C;">transpiling</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">JSX</span><span style="color:#F8F8F2;">)</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> (Y/n)</span></span>
<span class="line"></span></code></pre></div><p>如果上面选择了<code>Router</code>，会出现下面的选项，是否使用<code>history</code>路由模式，选择 yes</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Use history mode </span><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> router</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> (Requires </span><span style="color:#F1FA8C;">proper</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">server</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">setup</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">for</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">index</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">fallback</span></span>
<span class="line"><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> production) (Y/n)</span></span>
<span class="line"></span></code></pre></div><p>选择代码规范，一般选择<code>ESLint + Prettier</code>来统一前端代码风格</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Pick a linter / formatter config:</span></span>
<span class="line"><span style="color:#F8F8F2;">  ESLint </span><span style="color:#F1FA8C;">with</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">error</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">prevention</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">only</span></span>
<span class="line"><span style="color:#F8F8F2;">  ESLint </span><span style="color:#F1FA8C;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">Airbnb</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">config</span></span>
<span class="line"><span style="color:#F8F8F2;">  ESLint </span><span style="color:#F1FA8C;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">Standard</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">config</span></span>
<span class="line"><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> ESLint + Prettier</span></span>
<span class="line"><span style="color:#F8F8F2;">  TSLint (deprecated)</span></span>
<span class="line"></span></code></pre></div><p>添加 <code>lint</code> 特性，直接回车即可</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Pick additional lint features: (Press </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F1FA8C;">spac</span><span style="color:#F8F8F2;">e</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">to</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">select,</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F8F8F2;">a</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">to</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">toggle</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">all,</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">&lt;</span><span style="color:#F1FA8C;">i</span></span>
<span class="line"><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> to invert selection)</span></span>
<span class="line"><span style="color:#E9F284;">&gt;(</span><span style="color:#FF79C6;">*</span><span style="color:#E9F284;">)</span><span style="color:#F8F8F2;"> Lint on save</span></span>
<span class="line"><span style="color:#F8F8F2;"> ( ) Lint </span><span style="color:#F1FA8C;">and</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">fix</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">on</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">commit</span></span>
<span class="line"></span></code></pre></div><p>选择将配置写入单独的文件还是<code>package.json</code>中，我选择<code>package.json</code>，你随意</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Where </span><span style="color:#FF79C6;">do</span><span style="color:#F8F8F2;"> you prefer placing config </span><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> Babel, ESLint, etc.</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> (Use </span><span style="color:#F1FA8C;">arrow</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">keys</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> In dedicated config files</span></span>
<span class="line"><span style="color:#F8F8F2;">  In </span><span style="color:#F1FA8C;">package.json</span></span>
<span class="line"></span></code></pre></div><p>选择是否保存配置，方便下次使用，选择 no</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> Save this as a preset </span><span style="color:#FF79C6;">for</span><span style="color:#F8F8F2;"> future projects</span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> (y/N)</span></span>
<span class="line"></span></code></pre></div><p>然后等待依赖下载，如果同时安装了<code>npm</code>和<code>yarn</code>，还会让你选择下载工具</p><h2 id="组合-api" tabindex="-1">组合 API <a class="header-anchor" href="#组合-api" aria-label="Permalink to &quot;组合 API&quot;">​</a></h2><p>以下所有内容都是搭配<code>typescript</code>的</p><p>vue3 新增<code>setup()</code>语法，包括两个参数<code>props</code>和<code>context</code>。定义的变量和方法等都在<code>setup()</code>里面，</p><h3 id="ref、reactive" tabindex="-1">ref、reactive <a class="header-anchor" href="#ref、reactive" aria-label="Permalink to &quot;ref、reactive&quot;">​</a></h3><p>二者都能定义变量</p><h4 id="ref" tabindex="-1">ref <a class="header-anchor" href="#ref" aria-label="Permalink to &quot;ref&quot;">​</a></h4><p>先导入<code>ref</code>，将变量的值放入<code>ref()</code>中，如<code>const name = ref(&quot;&quot;);</code>，使用的时候变量名还要带上<code>.value</code>，最后将变量返回。 以前在<code>data()</code>中的变量都得返回，现在页面中没有使用的变量可以不用返回了</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">v-for</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">(item, index) in user</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">:key</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">index</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">@click</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">clickName(index)</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;{{ index }} : {{ item }}&lt;/</span><span style="color:#FF79C6;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;{{ name }}&lt;/</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">lang</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ts</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> { defineComponent, ref } </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">vue</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">defineComponent</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">App</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">setup</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> user </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">ref</span><span style="color:#F8F8F2;">([</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">tom</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">jack</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ivan</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">ref</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">clickName</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">index</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      name.value </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> user.value[index]</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      user,</span></span>
<span class="line"><span style="color:#F8F8F2;">      name,</span></span>
<span class="line"><span style="color:#F8F8F2;">      clickName</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><h4 id="reactive" tabindex="-1">reactive <a class="header-anchor" href="#reactive" aria-label="Permalink to &quot;reactive&quot;">​</a></h4><p>使用<code>reactive()</code>声明的变量使用时可以不带上<code>.value</code>，接收一个对象，最后只需返回一个变量即可。但是在模板中使用时还得以对象的形式使用 比如返回一个 data 变量，使用时<code>data.name</code>，这时可以用<code>toRefs()</code>将其转换成<code>ref</code>，然后在模板中就能直接使用变量<code>name</code>了</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">v-for</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">(item, index) in list</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">:key</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">index</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">@click</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">btnFun(index)</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;{{ index }} : {{ item }}&lt;/</span><span style="color:#FF79C6;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;{{ listName }}&lt;/</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">lang</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ts</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> { defineComponent, reactive, toRefs } </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">vue</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">interface</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">DataProps</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  list</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">[]</span></span>
<span class="line"><span style="color:#F8F8F2;">  listName</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">btnFun</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">index</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">void</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">defineComponent</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">App</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">setup</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> data</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">DataProps</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">reactive</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      list</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">first</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">second</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">third</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">      listName</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">btnFun</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">index</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">number</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        data.listName </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> data.list[index]</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> { </span><span style="color:#FF79C6;">...</span><span style="color:#50FA7B;">toRefs</span><span style="color:#F8F8F2;">(data) }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h2><p><code>setup()</code>开始创建组件之前，在<code>beforeCreate()</code>和<code>created()</code>之前执行</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;vue&lt;/</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">lang</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ts</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  defineComponent,</span></span>
<span class="line"><span style="color:#F8F8F2;">  onBeforeMount,</span></span>
<span class="line"><span style="color:#F8F8F2;">  onMounted,</span></span>
<span class="line"><span style="color:#F8F8F2;">  onBeforeUpdate,</span></span>
<span class="line"><span style="color:#F8F8F2;">  onUpdated,</span></span>
<span class="line"><span style="color:#F8F8F2;">  onRenderTriggered,</span></span>
<span class="line"><span style="color:#F8F8F2;">  onRenderTracked,</span></span>
<span class="line"><span style="color:#F8F8F2;">  onBeforeUnmount,</span></span>
<span class="line"><span style="color:#F8F8F2;">  onUnmounted</span></span>
<span class="line"><span style="color:#F8F8F2;">} </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">vue</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">defineComponent</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">App</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">setup</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">开始创建组件</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">onBeforeMount</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">挂载前</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">onMounted</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">完成挂载</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">onBeforeUpdate</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">更新前</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">onUpdated</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">完成更新</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">onRenderTriggered</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">状态触发</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">onRenderTracked</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">event</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">状态跟踪</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">onBeforeUnmount</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">卸载之前</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">onUnmounted</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">卸载完成</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>有趣的是在<code>setup()</code>函数之后可以继续编写 Vue2 的生命周期函数，即 Vue2 的生命周期函数还是可用的，但是别混用</p><p>vue2 和 vue3 生命周期对比：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">beforeCreate  -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">setup</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">created       -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">setup</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">beforeMount   -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">onBeforeMount</span></span>
<span class="line"><span style="color:#F8F8F2;">mounted       -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">onMounted</span></span>
<span class="line"><span style="color:#F8F8F2;">beforeUpdate  -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">onBeforeUpdate</span></span>
<span class="line"><span style="color:#F8F8F2;">updated       -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">onUpdated</span></span>
<span class="line"><span style="color:#F8F8F2;">beforeDestroy -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">onBeforeUnmount</span></span>
<span class="line"><span style="color:#F8F8F2;">destroyed     -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">onUnmounted</span></span>
<span class="line"><span style="color:#F8F8F2;">activated     -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">onActivated</span></span>
<span class="line"><span style="color:#F8F8F2;">deactivated   -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">onDeactivated</span></span>
<span class="line"><span style="color:#F8F8F2;">errorCaptured -</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">onErrorCaptured</span></span>
<span class="line"></span></code></pre></div><h2 id="watch-监听" tabindex="-1">watch 监听 <a class="header-anchor" href="#watch-监听" aria-label="Permalink to &quot;watch 监听&quot;">​</a></h2><p>先导入<code>watch</code>，第一个参数是要监听的变量，第二个是回调函数。如果要监听多个变量，那么第一个参数传入数组</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;{{ name }}&lt;/</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">lang</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ts</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> { defineComponent, ref, watch } </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">vue</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">defineComponent</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">App</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">setup</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> name </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">ref</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">hello</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">watch</span><span style="color:#F8F8F2;">(overText, (</span><span style="color:#FFB86C;font-style:italic;">newVal</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">oldVal</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(newVal)</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> { name }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="计算属性" tabindex="-1">计算属性 <a class="header-anchor" href="#计算属性" aria-label="Permalink to &quot;计算属性&quot;">​</a></h2><p><code>computed()</code></p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">div</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">class</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">hello</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#FF79C6;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">v-for</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">(item, index) in list</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">:key</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">index</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;{{ index }} : {{ item }}&lt;/</span><span style="color:#FF79C6;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#FF79C6;">p</span><span style="color:#F8F8F2;">&gt;{{ count }}&lt;/</span><span style="color:#FF79C6;">p</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;/</span><span style="color:#FF79C6;">div</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">lang</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ts</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> { defineComponent, reactive, toRefs, computed } </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">vue</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">interface</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">DataProps</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  list</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">string</span><span style="color:#F8F8F2;">[]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">defineComponent</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">HelloWorld</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">setup</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> data</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">DataProps</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">reactive</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      list</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">first</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">second</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">third</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> count </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">computed</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> data.list.length)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> { </span><span style="color:#FF79C6;">...</span><span style="color:#50FA7B;">toRefs</span><span style="color:#F8F8F2;">(data), count }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="hooks" tabindex="-1">hooks <a class="header-anchor" href="#hooks" aria-label="Permalink to &quot;hooks&quot;">​</a></h2><p>在 <code>src</code> 目录下新建 <code>hooks</code> 文件夹，建立一个<code>useMousePosition.ts</code>文件，功能是获取鼠标位置，hooks 命名建议以<code>use</code>开头</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> { ref, onMounted, onUnmounted } </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">vue</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">mousePosition</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> x </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">ref</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> y </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">ref</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">update</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;font-style:italic;">any</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    x.value </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> e.pageX</span></span>
<span class="line"><span style="color:#F8F8F2;">    y.value </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> e.pageY</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">onMounted</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">mousemove</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, update)</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">onUnmounted</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.</span><span style="color:#50FA7B;">removeEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">mousemove</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, update)</span></span>
<span class="line"><span style="color:#F8F8F2;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> { x, y }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>然后在使用它的组件中导入，最后<code>return</code>返回，即可在模板中使用</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;鼠标位置：{{ x }} - {{ y }}&lt;/</span><span style="color:#FF79C6;">h1</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">lang</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">ts</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> { defineComponent } </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">vue</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> mousePosition </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">@/hooks/useMousePosition</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">defineComponent</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">App</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">setup</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> { x, y } </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">mousePosition</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> { x, y }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="填坑记录" tabindex="-1">填坑记录 <a class="header-anchor" href="#填坑记录" aria-label="Permalink to &quot;填坑记录&quot;">​</a></h2><h3 id="vue-router" tabindex="-1">vue-router <a class="header-anchor" href="#vue-router" aria-label="Permalink to &quot;vue-router&quot;">​</a></h3><h4 id="_404-错误" tabindex="-1">404 错误 <a class="header-anchor" href="#_404-错误" aria-label="Permalink to &quot;404 错误&quot;">​</a></h4><p>2020/2/3</p><p>匹配 404 路由时，以前是<code>path: &quot;*&quot;</code>，现在是<code>path: &quot;/:catchAll(.*)&quot;</code>，否则报下面的错误</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">Catch </span><span style="color:#F1FA8C;">all</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">routes</span><span style="color:#F8F8F2;"> (</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">*</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">) </span><span style="color:#F1FA8C;">must</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">now</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">be</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">defined</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">using</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">a</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">param</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">with</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">a</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">custom</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">regexp.</span></span>
<span class="line"></span></code></pre></div><p>更正：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">    path: </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/404</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    name: </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">404</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">component:</span><span style="color:#F8F8F2;"> () =</span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> import(/* </span><span style="color:#F1FA8C;">webpackChunkName:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">404</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;font-style:italic;">*</span><span style="color:#F1FA8C;">/</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">@/views/404.vue</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  { path: </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/:catchAll(.*)</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">,</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">redirect:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/404</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">}</span></span>
<span class="line"></span></code></pre></div>`,68),F=[o];function e(t,c,r,y,i,C){return a(),n("div",null,F)}const A=s(p,[["render",e]]);export{u as __pageData,A as default};
