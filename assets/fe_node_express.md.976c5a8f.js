import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.f14b72c3.js";const h=JSON.parse('{"title":"Express","description":"","frontmatter":{},"headers":[],"relativePath":"fe/node/express.md","lastUpdated":1683514170000}'),p={name:"fe/node/express.md"},o=l(`<h1 id="express" tabindex="-1">Express <a class="header-anchor" href="#express" aria-label="Permalink to &quot;Express&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p><a href="https://expressjs.com/" target="_blank" rel="noreferrer">官网</a></p><h3 id="_1、概念" tabindex="-1">1、概念 <a class="header-anchor" href="#_1、概念" aria-label="Permalink to &quot;1、概念&quot;">​</a></h3><p>Express 基于 Node.js 平台，快速、开放、极简的 web 开发框架。</p><h3 id="_2、安装" tabindex="-1">2、安装 <a class="header-anchor" href="#_2、安装" aria-label="Permalink to &quot;2、安装&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">express</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--save</span></span>
<span class="line"></span></code></pre></div><h3 id="_3、创建-express-应用" tabindex="-1">3、创建 Express 应用 <a class="header-anchor" href="#_3、创建-express-应用" aria-label="Permalink to &quot;3、创建 Express 应用&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> express </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">express</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">express</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">hello wrold</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">listen</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3000</span><span style="color:#F8F8F2;">, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">listen port 3000</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span></code></pre></div><h3 id="_4、使用-express-处理表单" tabindex="-1">4、使用 Express 处理表单 <a class="header-anchor" href="#_4、使用-express-处理表单" aria-label="Permalink to &quot;4、使用 Express 处理表单&quot;">​</a></h3><ul><li>post 请求</li><li>get 请求</li><li>图片上传</li></ul><h2 id="应用生成器" tabindex="-1">应用生成器 <a class="header-anchor" href="#应用生成器" aria-label="Permalink to &quot;应用生成器&quot;">​</a></h2><h3 id="_1、安装" tabindex="-1">1、安装 <a class="header-anchor" href="#_1、安装" aria-label="Permalink to &quot;1、安装&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-g</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">express-generator</span></span>
<span class="line"></span></code></pre></div><p>查看全局安装的位置：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">root</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-g</span></span>
<span class="line"></span></code></pre></div><h3 id="_2、创建应用" tabindex="-1">2、创建应用 <a class="header-anchor" href="#_2、创建应用" aria-label="Permalink to &quot;2、创建应用&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;"># 创建项目</span></span>
<span class="line"><span style="color:#F8F8F2;">express </span><span style="color:#F1FA8C;">myApp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 进入项目目录</span></span>
<span class="line"><span style="color:#8BE9FD;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">myApp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 安装依赖</span></span>
<span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;"># 启动项目</span></span>
<span class="line"><span style="color:#F8F8F2;">SET </span><span style="color:#F1FA8C;">DEBUG=myApp:</span><span style="color:#BD93F9;font-style:italic;">*</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">或者</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">start</span></span>
<span class="line"></span></code></pre></div><h2 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h2><h3 id="_1、express-实现路由的方式" tabindex="-1">1、express 实现路由的方式 <a class="header-anchor" href="#_1、express-实现路由的方式" aria-label="Permalink to &quot;1、express 实现路由的方式&quot;">​</a></h3><ul><li>针对应用级别</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> express </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">express</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">express</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">这是首页面</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/login</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">这是登录页</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/list</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">这是列表页</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">post</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/list</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">POST request</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">put</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/list</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">PUT request</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">delete</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/list</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">DELETE request</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">listen</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span></code></pre></div><ul><li>针对 Router 实例对象</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> express </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">express</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> router </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> express.</span><span style="color:#50FA7B;">Router</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">render</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">index</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, { title</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Express</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8BE9FD;font-style:italic;">module</span><span style="color:#F8F8F2;">.</span><span style="color:#8BE9FD;font-style:italic;">exports</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> router;</span></span>
<span class="line"></span></code></pre></div><h3 id="_2、路由方法" tabindex="-1">2、路由方法 <a class="header-anchor" href="#_2、路由方法" aria-label="Permalink to &quot;2、路由方法&quot;">​</a></h3><p>Express 定义了如下和 HTTP 请求对应的路由方法： <code>get, post, put, head, delete, options, trace, copy, lock, mkcol, move, purge, propfind, proppatch, unlock, report, mkactivity, checkout, merge, m-search, notify, subscribe, unsubscribe, patch, search, 和 connect</code>。</p><h3 id="_3、resfulapi-风格" tabindex="-1">3、resfulAPI 风格 <a class="header-anchor" href="#_3、resfulapi-风格" aria-label="Permalink to &quot;3、resfulAPI 风格&quot;">​</a></h3><ul><li>获取数据的地址，比如我要获取用户列表（get 请求）</li></ul><p>/user 见名知意。直接利用路径名标识 /user/01 直接跟上用户 id 获取单例用户</p><ul><li>提交一个数据要添加到数据库（post 请求）</li></ul><p>/user 直接带在请求体 formData 当中提交</p><ul><li>修改数据分为两种：</li></ul><p>① 部分修改数据(put 请求)</p><p>/user/01<br> 资源路径名接上用户 id</p><p>② 完全替换(patch 请求)</p><p>/user/01 全部替换掉用户 01 的内容</p><ul><li>删除数据 （delete 请求）</li></ul><p>/user/01 删除用户 01</p><h3 id="_4、路由句柄" tabindex="-1">4、路由句柄 <a class="header-anchor" href="#_4、路由句柄" aria-label="Permalink to &quot;4、路由句柄&quot;">​</a></h3><p>路由句柄就是一个回调函数。可以设置多个，它必须要有两个参数，req, res.</p><ul><li>req 是指<code>incommingmessage</code>，它表示一些请求信息，这个信息，我们只能获取，不能修改。</li><li>res 是指<code>serverResponse</code>，它表示响应对象，可以做服务器上的任何事情。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> express </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">express</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">express</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">one</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">next</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">two</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">listen</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="_5、req-res-相关方法" tabindex="-1">5、req,res 相关方法 <a class="header-anchor" href="#_5、req-res-相关方法" aria-label="Permalink to &quot;5、req,res 相关方法&quot;">​</a></h3><p>req.query 将查询字符串变成对象</p><p>req.path  得到路径名</p><p>res.send 直接发送响应的内容，普通字符串和 html 标签均可</p><p>res.sendFile  用来发送文件</p><p>res.json 用来发送一个 json 格式的字符串</p><p>res.render 渲染，需要结合模板引擎去使用</p><p>res.download 提供下载的方法</p><p>res.redirect   重定向方法</p><h3 id="_6、ejs-模板引擎" tabindex="-1">6、ejs 模板引擎 <a class="header-anchor" href="#_6、ejs-模板引擎" aria-label="Permalink to &quot;6、ejs 模板引擎&quot;">​</a></h3><p>下载 ejs 模板</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">ejs</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">--save</span></span>
<span class="line"></span></code></pre></div><p>使用 ejs 作为 express 的模板引擎</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// 设置模板存放的位置</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">set</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">views</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, path.</span><span style="color:#50FA7B;">resolve</span><span style="color:#F8F8F2;">(__dirname, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./views</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 设置模板引擎为ejs</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">set</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">view engine</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ejs</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="中间件" tabindex="-1">中间件 <a class="header-anchor" href="#中间件" aria-label="Permalink to &quot;中间件&quot;">​</a></h2><h3 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h3><p>Express 是一个自身功能极简，完全是由路由和中间件构成一个的 web 开发框架；从本质上来说，一个 Express 应用就是在调用各种中间件。</p><blockquote><p>官方：中间件（Middleware） 是一个函数，它可以访问请求对象（request object (req)）</p></blockquote><p>响应对象（response object (res)）, 和 web 应用中处于请求-响应循环流程中的中间件，一般被命名为 next 的变量。</p><p>中间件可以做什么？</p><ul><li>执行任何代码。</li><li>修改请求和响应对象。</li><li>终结请求-响应循环。</li><li>调用堆栈中的下一个中间件。</li></ul><p>在 express 中都有哪些中间件？</p><ul><li>应用级中间件</li><li>路由级中间件</li><li>错误处理中间件</li><li>内置中间件</li><li>第三方中间件</li></ul><h3 id="应用级中间件" tabindex="-1">应用级中间件 <a class="header-anchor" href="#应用级中间件" aria-label="Permalink to &quot;应用级中间件&quot;">​</a></h3><p>所谓的应用级别的，就是指通过 app 对象来调用。</p><p>如何使用应用级别中间件？</p><ul><li>app.use([path]);</li><li>app.METHOD(); METHOD 是指 get, post 等</li></ul><p>对于 app.use()方式的中间件，如果说没有写 path，就说明所有的请求都会使用这个中间件。</p><p>对于 app.METHOD,实际上就是路由，从这个方面来说，路由也是中间件的一种。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> express </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">express</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">express</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">应用级别中间件</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">next</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">&lt;h1&gt;中间件&lt;/h1&gt;</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">listen</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="路由级中间件" tabindex="-1">路由级中间件 <a class="header-anchor" href="#路由级中间件" aria-label="Permalink to &quot;路由级中间件&quot;">​</a></h3><p>路由级别的中间件，是指由 express.Router 对象来调用的。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> express </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">express</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">express</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> router </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> express.</span><span style="color:#50FA7B;">Router</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#6272A4;">//在app中添加router中间件</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(router);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">router.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">路由级中间件</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">listen</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="错误处理中间件" tabindex="-1">错误处理中间件 <a class="header-anchor" href="#错误处理中间件" aria-label="Permalink to &quot;错误处理中间件&quot;">​</a></h3><h3 id="内置中间件" tabindex="-1">内置中间件 <a class="header-anchor" href="#内置中间件" aria-label="Permalink to &quot;内置中间件&quot;">​</a></h3><h3 id="第三方中间件" tabindex="-1">第三方中间件 <a class="header-anchor" href="#第三方中间件" aria-label="Permalink to &quot;第三方中间件&quot;">​</a></h3><p>如 body-parser，cookie-parse，express-session。</p><h4 id="body-parser" tabindex="-1">body-parser <a class="header-anchor" href="#body-parser" aria-label="Permalink to &quot;body-parser&quot;">​</a></h4><p>解析 post 请求传递的 body，若 req.body 获取不到数据，则可以使用该中间件</p><p>安装</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">body-parser</span></span>
<span class="line"></span></code></pre></div><p>使用</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> express </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">express</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">express</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> bodyParser </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">body-parser</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(bodyParser.</span><span style="color:#50FA7B;">json</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#6272A4;">// 创建 application/x-www-form-urlencoded 编码解析</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(bodyParser.</span><span style="color:#50FA7B;">urlencoded</span><span style="color:#F8F8F2;">({ extended</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;"> }));</span></span>
<span class="line"></span></code></pre></div><p>如果传输的内容不是 string 类型时，需配置<code>extended: ture</code></p><p>默认限制 100kb 大小，如果需要可自定义大小</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(bodyParser.</span><span style="color:#50FA7B;">json</span><span style="color:#F8F8F2;">({ limit</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">100mb</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> }));</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(bodyParser.</span><span style="color:#50FA7B;">urlencoded</span><span style="color:#F8F8F2;">({ limit</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">100mb</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, extended</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;"> }));</span></span>
<span class="line"></span></code></pre></div><h2 id="托管静态文件" tabindex="-1">托管静态文件 <a class="header-anchor" href="#托管静态文件" aria-label="Permalink to &quot;托管静态文件&quot;">​</a></h2><p>可以将 js、css、图片等静态文件利用 express 的中间件<code>express.static()</code>托管，对外开放</p><p>假如 public 文件夹下有 common.js、haha.png 等文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(express.</span><span style="color:#50FA7B;">static</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">public</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span></code></pre></div><p>重启服务后就可以通过以下地址访问了</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">http:</span><span style="color:#6272A4;">//localhost:3000/common.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">http:</span><span style="color:#6272A4;">//localhost:3000/haha.png</span></span>
<span class="line"></span></code></pre></div><p>如果想托管多个文件夹，可以多次调用中间件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(express.</span><span style="color:#50FA7B;">static</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">public</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(express.</span><span style="color:#50FA7B;">static</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">files</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span></code></pre></div><p>若想带前缀访问，加个路径即可</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/static</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, express.</span><span style="color:#50FA7B;">static</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">public</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 访问</span></span>
<span class="line"><span style="color:#F8F8F2;">http:</span><span style="color:#6272A4;">//localhost:3000/static/common.js</span></span>
<span class="line"></span></code></pre></div><p>关于文件路径，<code>__dirname</code>表示当前模块的目录名</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/static</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, express.</span><span style="color:#50FA7B;">static</span><span style="color:#F8F8F2;">(path.</span><span style="color:#50FA7B;">join</span><span style="color:#F8F8F2;">(__dirname, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">public</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)));</span></span>
<span class="line"></span></code></pre></div><h2 id="处理-404-响应" tabindex="-1">处理 404 响应 <a class="header-anchor" href="#处理-404-响应" aria-label="Permalink to &quot;处理 404 响应&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">status</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">404</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Sorry can&#39;t find that!</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="设置错误处理器" tabindex="-1">设置错误处理器 <a class="header-anchor" href="#设置错误处理器" aria-label="Permalink to &quot;设置错误处理器&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">throw</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Error</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">BROKEN</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">); </span><span style="color:#6272A4;">// Express will catch this on its own.</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre></div><p>或者</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">use</span><span style="color:#F8F8F2;">((</span><span style="color:#FFB86C;font-style:italic;">err</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">error</span><span style="color:#F8F8F2;">(err.stack);</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">status</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">500</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Something broke!</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="发送文件" tabindex="-1">发送文件 <a class="header-anchor" href="#发送文件" aria-label="Permalink to &quot;发送文件&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#50FA7B;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/plugin/three</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">req</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  res.</span><span style="color:#50FA7B;">sendFile</span><span style="color:#F8F8F2;">(__dirname </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">/assets/three.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="_1、报错typeerror-res-json-is-not-a-function" tabindex="-1">1、报错<code>TypeError: res.json is not a function</code> <a class="header-anchor" href="#_1、报错typeerror-res-json-is-not-a-function" aria-label="Permalink to &quot;1、报错\`TypeError: res.json is not a function\`&quot;">​</a></h3><p>可能有自定义变量和 res 重名</p>`,111),e=[o];function F(t,c,r,y,i,d){return n(),a("div",null,e)}const C=s(p,[["render",F]]);export{h as __pageData,C as default};
