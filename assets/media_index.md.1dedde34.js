import{_ as s,c as a,o as l,Q as o}from"./chunks/framework.f14b72c3.js";const u=JSON.parse('{"title":"流媒体","description":"","frontmatter":{},"headers":[],"relativePath":"media/index.md","lastUpdated":1695604450000}'),e={name:"media/index.md"},n=o(`<h1 id="流媒体" tabindex="-1">流媒体 <a class="header-anchor" href="#流媒体" aria-label="Permalink to &quot;流媒体&quot;">​</a></h1><h2 id="video-标签" tabindex="-1">video 标签 <a class="header-anchor" href="#video-标签" aria-label="Permalink to &quot;video 标签&quot;">​</a></h2><p>用于播放视频或直播流，可以通过 JS HTMLVideoElement 对象访问</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">video</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">controls</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">width</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">250</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">src</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/media/test.mp4</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#FF79C6;">video</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">video</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">controls</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">width</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">250</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">source</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">src</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/media/test.webm</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">video/webm</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">source</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">src</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/media/test.mp4</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">video/mp4</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  当前浏览器不支持video标签</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">video</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>常用属性：</p><ul><li><code>width</code> 视频显示区域的宽度，单位是<code>px</code>，不支持百分比</li><li><code>height</code> 视频显示区域的高度</li><li><code>controls</code> 控制面板，允许用户控制视频的音量、跨帧、暂停/恢复播放</li><li><code>loop</code> 是否循环播放</li><li><code>muted</code> 是否设置初始静音</li><li><code>src</code> 视频链接，可选，可使用<code>video</code>块内的<code>&lt;source&gt;</code>元素代替</li><li><code>poster</code> 视频封面</li></ul><p><code>&lt;source&gt;</code> 标签放在 <code>&lt;audio&gt;</code> 或者 <code>&lt;video&gt;</code> 内部，以指定播放的媒体源，可以添加多个不同格式、大小、分辨率的媒体源， 通过 JS HTMLSourceElement 对象访问</p><h2 id="audio-标签" tabindex="-1">audio 标签 <a class="header-anchor" href="#audio-标签" aria-label="Permalink to &quot;audio 标签&quot;">​</a></h2><p>播放音频，可以通过 JS HTMLAudioElement 对象访问</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">audio</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">controls</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">source</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">src</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/assets/viper.mp3</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">audio/mp3</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">source</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">src</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/assets/viper.ogg</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">audio/ogg</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">p</span><span style="color:#F8F8F2;">&gt;你的浏览器不支持audio标签&lt;/</span><span style="color:#FF79C6;">p</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">audio</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="字幕" tabindex="-1">字幕 <a class="header-anchor" href="#字幕" aria-label="Permalink to &quot;字幕&quot;">​</a></h2><p>使用<code>&lt;track&gt;</code>可以给<code>&lt;video&gt;</code>和<code>&lt;audio&gt;</code>添加字幕</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">video</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">controls</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">source</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">src</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/assets/movie.mp4</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">video/mp4</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">track</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">default</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">label</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">嗷嗷</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">kind</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">subtitles</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">srclang</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">en</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">src</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">/assets/subtitles_en.vtt</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  当前浏览器不支持video标签</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">video</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><ul><li><code>default</code>，启用字幕，有多个<code>&lt;track&gt;</code>时只能有一个可以设置该属性</li><li><code>src</code>，路径</li><li><code>kind</code><ul><li><code>subtitles</code> 翻译，附加背景信息，默认值</li><li><code>captions</code> 隐藏式字幕提供了音频的转录甚至是翻译</li><li><code>descriptions</code> 视频简介</li><li><code>chapters</code> 章节标题用于用户浏览媒体资源的时候</li><li><code>metadata</code> 脚本使用的 track，对用户不可见</li></ul></li><li><code>label</code>，标题，如中文字幕、英文字幕</li><li><code>srclang</code>，字幕的语言，如 zh、en</li></ul><h3 id="字幕格式" tabindex="-1">字幕格式 <a class="header-anchor" href="#字幕格式" aria-label="Permalink to &quot;字幕格式&quot;">​</a></h3><p>使用<code>WebVTT</code>，文件后缀是<code>.vtt</code>，详见：<a href="https://w3c.github.io/webvtt/" target="_blank" rel="noreferrer">官网</a>、 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebVTT_API" target="_blank" rel="noreferrer">mdn</a></p><h3 id="字幕样式" tabindex="-1">字幕样式 <a class="header-anchor" href="#字幕样式" aria-label="Permalink to &quot;字幕样式&quot;">​</a></h3><p>伪元素<code>::cue</code>可以设置字幕样式，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::cue" target="_blank" rel="noreferrer">mdn</a></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">video::cue</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">background-image</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#8BE9FD;">linear-gradient</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">to</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">bottom</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">dimgray</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">lightgray</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">color</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">papayawhip</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">video::cue(b</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">color</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">peachpuff</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>支持一些 html 标签进行样式控制，如<code>声音&lt;v&gt;、颜色&lt;c&gt;、加粗&lt;b&gt;、倾斜&lt;i&gt;、划线&lt;u&gt;、&lt;ruby&gt;、&lt;lang&gt;</code>等</p><p>设置<code>&lt;v&gt;</code>可以区别谁说的话</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">WEBVTT</span></span>
<span class="line"><span style="color:#F8F8F2;"></span></span>
<span class="line"><span style="color:#F8F8F2;">00:00:01.010 --&gt; 00:00:05.500</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;v zhangsan&gt;啊啊啊啊啊啊啊</span></span>
<span class="line"><span style="color:#F8F8F2;"></span></span>
<span class="line"><span style="color:#F8F8F2;">00:00:05.739 --&gt; 00:00:07.074</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;v lisi&gt;咋滴啦</span></span>
<span class="line"><span style="color:#F8F8F2;"></span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">::cue(v</span><span style="color:#F8F8F2;">[</span><span style="color:#50FA7B;font-style:italic;">voice</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zhansan</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">]) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">color</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">red</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FF79C6;">::cue(v</span><span style="color:#F8F8F2;">[</span><span style="color:#50FA7B;font-style:italic;">voice</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">lisi</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">]) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">color</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">green</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>还可以直接选中标签控制样式</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">::cue(b</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">color</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">red</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>类名控制</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">00:00:01.010 --&gt; 00:00:05.500</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;c.red&gt;啊啊啊啊啊啊啊</span></span>
<span class="line"><span style="color:#F8F8F2;"></span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">video::cue(</span><span style="color:#50FA7B;font-style:italic;">.red</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FD;">color</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">red</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p><code>paypal</code>的开源项目：<a href="https://github.com/paypal/accessible-html5-video-player" target="_blank" rel="noreferrer">accessible-html5-video-player</a>，可以对原生的<code>video</code>进行 UI 定制，会把<code>WebVTT</code>文件中<code>html</code>片段直接完整输出到页面中，这样所有的 CSS 属性都可以使用了</p><h2 id="媒体-api" tabindex="-1">媒体 API <a class="header-anchor" href="#媒体-api" aria-label="Permalink to &quot;媒体 API&quot;">​</a></h2><ul><li>媒体源扩展 API MSE (Media Source Extension) 扩展了浏览器的媒体播放功能，允许用 JS 动态构造媒体流 MediaSource 对象，然后喂给<code>&lt;video&gt;</code>和<code>&lt;audio&gt;</code>标签进行更精细化的播放控制。也可以用 JS 把一些不支持的视频流格式转封装为支持的格式，flv.js 就是基于此实现，使用 MSE 技术将 FLV 源用 JS 实时转封装成 HTML5 支持的视频格式</li><li>网络音频 API Web Audio API 用于处理和合成 Web 应用程序中的音频，可以声音合成、添加音频特效、音频可视化等，使用 Web Audio API 可以完成专业的 Web 音频处理软件（如节拍器、调音器等）</li><li>媒体捕获和流媒体 API Media Stream API 可以使用本地摄像头和麦克风来采集录制音视频，或者捕获电脑屏幕，或者读取本地视频做合成，常用于 Web 摄像头、拍照、录屏、视频通话等，MediaStream 是连接 WebRTC API 和底层物理流的中间层，WebRTC 将音视频经过语音或视频引擎进行处理后，再通过 MediaStream API 暴露给上层使用</li><li>WebRTC WebRTC 是一套支持浏览器进行实时音视频对话的 API，它包括了音视频的采集、编解码、网络传输、显示等功能，使互联网上任意两位用户在<strong>无需服务器</strong>的情况下实现实时的音频、视频和任意数据的通信</li></ul><h2 id="编码标准" tabindex="-1">编码标准 <a class="header-anchor" href="#编码标准" aria-label="Permalink to &quot;编码标准&quot;">​</a></h2><p>为了便于传输和存储，需要对原视频文件通过编码来压缩文件大小，再通过容器封装将压缩后的音视频、字幕组合到一个容器内，这就是<strong>编码</strong>和<strong>容器封装</strong>的过程。 在播放时就要<strong>解封装</strong>和<strong>解码</strong>，<code>&lt;video&gt;</code>标签只支持特定格式的媒体内容对其解封装和解码</p><h3 id="h-264-avc" tabindex="-1">H.264/AVC <a class="header-anchor" href="#h-264-avc" aria-label="Permalink to &quot;H.264/AVC&quot;">​</a></h3><h3 id="h-265-hevc" tabindex="-1">H.265/HEVC <a class="header-anchor" href="#h-265-hevc" aria-label="Permalink to &quot;H.265/HEVC&quot;">​</a></h3><p>更好的编码标准，但目前硬件支持度很低，相对于<code>H.264</code>优点包括：提高压缩效率、提高鲁棒性和错误恢复能力、减少实时的时延、减少信道获取时间和随机接入时延、降低复杂度等</p><h2 id="播放器架构" tabindex="-1">播放器架构 <a class="header-anchor" href="#播放器架构" aria-label="Permalink to &quot;播放器架构&quot;">​</a></h2><p>播放器由播放器内核和 UI 界面组成，用于读取、解析渲染流文件</p><p><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418685.jpg" alt="image"></p><p><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418711.jpg" alt="image"></p><ul><li>分离器<code>demux</code></li></ul><p>媒体文件和网络流是将音视频压缩编码后和其他数据一起打包传输的，即编码器<code>mux</code>。解封装与上述过程正好相反，是把视频轨和音频轨分离出来。 支持的常见格式如<code>mp4</code>、<code>flv</code>、<code>m3u8</code>、<code>avi</code>等</p><ul><li>解码器<code>decoder</code></li></ul><p>负责对压缩的音视频数据进行解码，拿到原始的<code>YUV</code>和<code>PCM</code>数据，常见的视频压缩格式如：<code>H.264</code>、<code>MPEG4</code>、<code>VP8/VP9</code>， 音频压缩格式如 <code>G.711</code>、<code>AAC</code>、<code>Speex</code>等</p><h2 id="解码方式" tabindex="-1">解码方式 <a class="header-anchor" href="#解码方式" aria-label="Permalink to &quot;解码方式&quot;">​</a></h2><ul><li>硬解码</li></ul><p>借助显卡硬件进行解码工作，优点是功耗低，解码速度快。 但目前 H.265 编码在浏览器中的硬件解码支持情况并不普及，而且硬件解码需要用户的显卡支持</p><ul><li>软解码，通过CPU运行解码软件来进行解码 <ul><li>一种是基于<code>Flash</code>的<code>H.265</code>解码方案</li><li>主流方案是使用 <a href="https://webassembly.org/" target="_blank" rel="noreferrer">WebAssembly</a> 技术将金山云自研的高性能解码器编译为<code>wasm</code>库，<code>wasm</code>文件是以二进制形式存在的，其中包含平台无关的虚拟指令（类似汇编指令）</li><li>在 WEB 端是绘制到 canvas 上</li></ul></li></ul><h2 id="点播-直播编转码" tabindex="-1">点播/直播编转码 <a class="header-anchor" href="#点播-直播编转码" aria-label="Permalink to &quot;点播/直播编转码&quot;">​</a></h2><ul><li>点播（video on demand），简称<code>VOD</code>，提前录制好的视频，常见格式有<code>mp4</code>、<code>flv</code>、<code>m3u8</code>等</li><li>直播（live broadcast），时效性高，正在发生的</li></ul><p><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418734.png" alt="image"></p><p>发起直播的客户端，向上连着流媒体服务器，直播产生的视频流会被实时的推送到服务端，这个过程就是<strong>推流</strong>。 其他客户端从流媒体服务器实时拉取直播客户端的视频流，这个过程就是<strong>拉流</strong></p><p><strong>流数据</strong>是二进制数据，是一帧一帧的，每帧数据很小，很适合实时传输，如直播时的音视频数据</p><h2 id="封装格式" tabindex="-1">封装格式 <a class="header-anchor" href="#封装格式" aria-label="Permalink to &quot;封装格式&quot;">​</a></h2><h3 id="mp4" tabindex="-1">MP4 <a class="header-anchor" href="#mp4" aria-label="Permalink to &quot;MP4&quot;">​</a></h3><h3 id="flv" tabindex="-1">FLV <a class="header-anchor" href="#flv" aria-label="Permalink to &quot;FLV&quot;">​</a></h3><p>很适合浏览器直播，但是 video 标签不能直接播放 flv 格式</p><h3 id="m3u8" tabindex="-1">M3U8 <a class="header-anchor" href="#m3u8" aria-label="Permalink to &quot;M3U8&quot;">​</a></h3><h2 id="传输协议" tabindex="-1">传输协议 <a class="header-anchor" href="#传输协议" aria-label="Permalink to &quot;传输协议&quot;">​</a></h2><h3 id="hls" tabindex="-1">HLS <a class="header-anchor" href="#hls" aria-label="Permalink to &quot;HLS&quot;">​</a></h3><p>http live streaming，苹果提出的基于 HTTP 的流媒体协议，H5 可以直接播放，对应的视频格式就是 m3u8</p><h3 id="http-flv" tabindex="-1">HTTP-FLV <a class="header-anchor" href="#http-flv" aria-label="Permalink to &quot;HTTP-FLV&quot;">​</a></h3><p>目前的主流方案，基于 HTTP 流式 IO 传输 FLV，还有 <strong>WebSocket-FLV</strong>协议</p><h3 id="rtp" tabindex="-1">RTP <a class="header-anchor" href="#rtp" aria-label="Permalink to &quot;RTP&quot;">​</a></h3><h3 id="rtcp" tabindex="-1">RTCP <a class="header-anchor" href="#rtcp" aria-label="Permalink to &quot;RTCP&quot;">​</a></h3><h3 id="rtsp" tabindex="-1">RTSP <a class="header-anchor" href="#rtsp" aria-label="Permalink to &quot;RTSP&quot;">​</a></h3><p>是一种双向实时数据传输协议，允许客户端向服务器端发送请求，如回放、快进、倒退等操作</p><h3 id="rtmp" tabindex="-1">RTMP <a class="header-anchor" href="#rtmp" aria-label="Permalink to &quot;RTMP&quot;">​</a></h3><p>底层基于 TCP，在浏览器端依赖 Flash</p><h2 id="开源架构" tabindex="-1">开源架构 <a class="header-anchor" href="#开源架构" aria-label="Permalink to &quot;开源架构&quot;">​</a></h2><h3 id="ffmpeg" tabindex="-1">FFMPEG <a class="header-anchor" href="#ffmpeg" aria-label="Permalink to &quot;FFMPEG&quot;">​</a></h3><h3 id="webrtc" tabindex="-1">WebRTC <a class="header-anchor" href="#webrtc" aria-label="Permalink to &quot;WebRTC&quot;">​</a></h3><h2 id="播放器" tabindex="-1">播放器 <a class="header-anchor" href="#播放器" aria-label="Permalink to &quot;播放器&quot;">​</a></h2><h3 id="chrome-音视频工具" tabindex="-1">chrome 音视频工具 <a class="header-anchor" href="#chrome-音视频工具" aria-label="Permalink to &quot;chrome 音视频工具&quot;">​</a></h3><p>地址栏输入<code>chrome://media-internals/</code>，这里可以了解当前音视频的编码，<code>buffer</code>状态等信息。进入之后可以看到 5 个模块</p><ul><li><code>Players</code> 视频日志</li><li><code>Audio</code> 音频日志</li><li><code>Video Capture</code> 当前摄像头的状况</li><li><code>Audio Focus</code> 当前音频播放的<code>Session</code></li><li><code>CDMS</code> 注册内容解密模块</li></ul><p>假设当前正在播放一个视频<a href="https://www.bilibili.com/video/BV1hN4y1G7th" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1hN4y1G7th</a>，选中当前视频，会出现<code>Player Properties</code>和<code>Log</code>两项表格，</p><ul><li><code>kAudioTracks</code>和 <code>kVideoTracks</code> 分别是音视频编码信息</li><li><code>video_buffering_state</code>和<code>audio_buffering_state</code>来确定当前视频的<code>Buffer</code>状态</li></ul><p>Log 包含了常规的多媒体日志信息和网络日志信息</p><h3 id="flv-js" tabindex="-1">flv.js <a class="header-anchor" href="#flv-js" aria-label="Permalink to &quot;flv.js&quot;">​</a></h3><p>基于 HTTP-FLV 流媒体协议，通过纯 JS 实现 FLV 转封装，使 flv 格式文件能在 Web 上进行播放。 但视频仅支持 H.264 编码，音频支持 AAC 和 MP3 编码</p><h3 id="hls-js" tabindex="-1">hls.js <a class="header-anchor" href="#hls-js" aria-label="Permalink to &quot;hls.js&quot;">​</a></h3><p>基于 Http Live Stream 协议开发，利用 MSE，用于实现 HLS 在 web 上播放</p><h3 id="ffmpeg-js" tabindex="-1">ffmpeg.js <a class="header-anchor" href="#ffmpeg-js" aria-label="Permalink to &quot;ffmpeg.js&quot;">​</a></h3><p>文件解码转码库</p><h3 id="aliplayer" tabindex="-1">Aliplayer <a class="header-anchor" href="#aliplayer" aria-label="Permalink to &quot;Aliplayer&quot;">​</a></h3><p>阿里支持 HTML5 和 Flash 两种播放模式</p>`,88),p=[n];function t(c,r,F,i,d,y){return l(),a("div",null,p)}const b=s(e,[["render",t]]);export{u as __pageData,b as default};
