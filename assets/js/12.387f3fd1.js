(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{375:function(t,a,e){"use strict";e.r(a);var s=e(19),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"观察者模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式"}},[t._v("#")]),t._v(" 观察者模式")]),t._v(" "),e("p",[t._v("观察者模式: 在软件设计中是一个对象，维护一个依赖列表，当任何状态发生改变时自动通知它们")]),t._v(" "),e("h2",{attrs:{id:"观察者模式和发布-订阅模式的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式和发布-订阅模式的区别"}},[t._v("#")]),t._v(" 观察者模式和发布-订阅模式的区别")]),t._v(" "),e("p",[t._v("观察者模式中主体和观察者是互相感知的，发布-订阅模式是借助第三方来实现调度的，发布者和订阅者之间互不感知")]),t._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"image",width:"650",height:"500","data-src":"/blog/img/design-pattern/observer.png",loading:"lazy"}})]),t._v(" "),e("ul",[e("li",[t._v("在观察者模式中，观察者是知道 Subject 的，Subject 一直保持对观察者进行记录。然而，在发布订阅模式中，\n发布者和订阅者不知道对方的存在。它们只有通过消息代理进行通信。")]),t._v(" "),e("li",[t._v("在发布订阅模式中，组件是松散耦合的，正好和观察者模式相反。")]),t._v(" "),e("li",[t._v("观察者模式大多数时候是同步的，比如当事件触发，Subject 就会去调用观察者的方法。而发布-订阅模式大多数时候是异步的（使用消息队列）。")]),t._v(" "),e("li",[t._v("观察者 模式需要在单个应用程序地址空间中实现，而发布-订阅更像交叉应用模式。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);