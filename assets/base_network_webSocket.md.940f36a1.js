import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.f14b72c3.js";const B=JSON.parse('{"title":"webSocket","description":"","frontmatter":{},"headers":[],"relativePath":"base/network/webSocket.md","lastUpdated":1698246525000}'),p={name:"base/network/webSocket.md"},o=l(`<h1 id="websocket" tabindex="-1">webSocket <a class="header-anchor" href="#websocket" aria-label="Permalink to &quot;webSocket&quot;">​</a></h1><h2 id="局部使用" tabindex="-1">局部使用 <a class="header-anchor" href="#局部使用" aria-label="Permalink to &quot;局部使用&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> WSURL </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws://192.168.8.210:8083</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> ws, tt;</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> lockReconnect </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">; </span><span style="color:#6272A4;">//避免重复连接</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> websocket </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">Init</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">url</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">messageHandle</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">notReConn</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">onerror</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">WebSocket</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">in</span><span style="color:#F8F8F2;"> window) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      ws </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">WebSocket</span><span style="color:#F8F8F2;">(BaseWs </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> url);</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">您的浏览器不支持 WebSocket!</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    ws.</span><span style="color:#50FA7B;">onopen</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">// heartCheck.start();</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">// ws.send(&#39;from client: hello&#39;)</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">    ws.</span><span style="color:#50FA7B;">onmessage</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">//heartCheck.start()</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (e.data </span><span style="color:#FF79C6;">==</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ok</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#6272A4;">//心跳消息不做处理</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">// console.log(&#39;from server: &#39; + e.data);</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">messageHandle</span><span style="color:#F8F8F2;">(e.data);</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    ws.</span><span style="color:#50FA7B;">onclose</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">// if (onerror) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">//   onerror()</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">// }</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">// if (!notReConn) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">//   reconnect(url, messageHandle)</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#6272A4;">// }</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    ws.</span><span style="color:#50FA7B;">onerror</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (onerror) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#50FA7B;">onerror</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">notReConn) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#50FA7B;">reconnect</span><span style="color:#F8F8F2;">(url, messageHandle);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> ws;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">toBreakOff</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    lockReconnect </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">Send</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">data</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> msg </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(data);</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">发送消息：</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> msg);</span></span>
<span class="line"><span style="color:#F8F8F2;">    ws.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(msg);</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">closeWs</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (ws) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      ws.</span><span style="color:#50FA7B;">close</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">getWebSocket</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> ws;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">getStatus</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (ws.readyState </span><span style="color:#FF79C6;">==</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">未连接</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (ws.readyState </span><span style="color:#FF79C6;">==</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">已连接</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (ws.readyState </span><span style="color:#FF79C6;">==</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">连接正在关闭</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (ws.readyState </span><span style="color:#FF79C6;">==</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">连接已关闭</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> websocket;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">//根据消息标识做不同的处理</span></span>
<span class="line"><span style="color:#6272A4;">// function messageHandle(message) {</span></span>
<span class="line"><span style="color:#6272A4;">//   let msg = JSON.parse(message)</span></span>
<span class="line"><span style="color:#6272A4;">//   switch (msg.flag) {</span></span>
<span class="line"><span style="color:#6272A4;">//     case &#39;command&#39;:</span></span>
<span class="line"><span style="color:#6272A4;">//       console.log(&quot;指令消息类型&quot;)</span></span>
<span class="line"><span style="color:#6272A4;">//       break;</span></span>
<span class="line"><span style="color:#6272A4;">//     case &#39;inform&#39;:</span></span>
<span class="line"><span style="color:#6272A4;">//       console.log(&quot;通知&quot;)</span></span>
<span class="line"><span style="color:#6272A4;">//       break;</span></span>
<span class="line"><span style="color:#6272A4;">//     default:</span></span>
<span class="line"><span style="color:#6272A4;">//       console.log(&quot;未知消息类型&quot;)</span></span>
<span class="line"><span style="color:#6272A4;">//   }</span></span>
<span class="line"><span style="color:#6272A4;">// }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">reconnect</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">url</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">messageHandle</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (lockReconnect) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  lockReconnect </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">//没连接上会一直重连，设置延迟避免请求过多</span></span>
<span class="line"><span style="color:#F8F8F2;">  tt </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">clearTimeout</span><span style="color:#F8F8F2;">(tt);</span></span>
<span class="line"><span style="color:#F8F8F2;">  tt </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">setTimeout</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">执行断线重连...</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    websocket.</span><span style="color:#50FA7B;">Init</span><span style="color:#F8F8F2;">(url, messageHandle);</span></span>
<span class="line"><span style="color:#F8F8F2;">    lockReconnect </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }, </span><span style="color:#BD93F9;">4000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">//心跳检测</span></span>
<span class="line"><span style="color:#6272A4;">// let heartCheck = {</span></span>
<span class="line"><span style="color:#6272A4;">//   timeout: 1000 * 60 * 3,</span></span>
<span class="line"><span style="color:#6272A4;">//   timeoutObj: null,</span></span>
<span class="line"><span style="color:#6272A4;">//   serverTimeoutObj: null,</span></span>
<span class="line"><span style="color:#6272A4;">//   start: function(){</span></span>
<span class="line"><span style="color:#6272A4;">//     console.log(&#39;开始心跳检测&#39;);</span></span>
<span class="line"><span style="color:#6272A4;">//     let self = this;</span></span>
<span class="line"><span style="color:#6272A4;">//     this.timeoutObj &amp;&amp; clearTimeout(this.timeoutObj);</span></span>
<span class="line"><span style="color:#6272A4;">//     this.serverTimeoutObj &amp;&amp; clearTimeout(this.serverTimeoutObj);</span></span>
<span class="line"><span style="color:#6272A4;">//     this.timeoutObj = setTimeout(function(){</span></span>
<span class="line"><span style="color:#6272A4;">//       //这里发送一个心跳，后端收到后，返回一个心跳消息，</span></span>
<span class="line"><span style="color:#6272A4;">//       //onmessage拿到返回的心跳就说明连接正常</span></span>
<span class="line"><span style="color:#6272A4;">//       console.log(&#39;心跳检测...&#39;);</span></span>
<span class="line"><span style="color:#6272A4;">//       ws.send(&quot;HeartBeat:&quot;+ clientId );</span></span>
<span class="line"><span style="color:#6272A4;">//       self.serverTimeoutObj = setTimeout(function() {</span></span>
<span class="line"><span style="color:#6272A4;">//         if(ws.readyState!=1){</span></span>
<span class="line"><span style="color:#6272A4;">//            ws.close();</span></span>
<span class="line"><span style="color:#6272A4;">//         }</span></span>
<span class="line"><span style="color:#6272A4;">//         // createWebSocket();</span></span>
<span class="line"><span style="color:#6272A4;">//       }, self.timeout);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">//     }, this.timeout)</span></span>
<span class="line"><span style="color:#6272A4;">//   }</span></span>
<span class="line"><span style="color:#6272A4;">// }</span></span>
<span class="line"></span></code></pre></div><p>在 vue 中使用如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">data</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      msg</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      ws</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      isDestroyed</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">false</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  methods</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">init</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.ws </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> webSocket.</span><span style="color:#50FA7B;">Init</span><span style="color:#F8F8F2;">(</span><span style="color:#F1FA8C;">\`/ship/detail/</span><span style="color:#FF79C6;">\${</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.mmsi</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.messageHandle, </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.onerror);</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">messageHandle</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">message</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.msg </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">parse</span><span style="color:#F8F8F2;">(message);</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">onerror</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.isDestroyed) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$notification.</span><span style="color:#50FA7B;">open</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">          message</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">提示</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">          description</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">webSocket连接出错，请重新加载页面</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#50FA7B;">btn</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">h</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">h</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">              </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a-button</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">              { props</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { type</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">primary</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, size</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">small</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> }, on</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> { </span><span style="color:#50FA7B;">click</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$router.</span><span style="color:#50FA7B;">go</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">) } },</span></span>
<span class="line"><span style="color:#F8F8F2;">              </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">重新载入</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">            );</span></span>
<span class="line"><span style="color:#F8F8F2;">          },</span></span>
<span class="line"><span style="color:#F8F8F2;">          onClose</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> close</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">mounted</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">init</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">destroyed</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.isDestroyed </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (Object.</span><span style="color:#50FA7B;">keys</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.ws).length </span><span style="color:#FF79C6;">!=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.ws.</span><span style="color:#50FA7B;">close</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="全局使用" tabindex="-1">全局使用 <a class="header-anchor" href="#全局使用" aria-label="Permalink to &quot;全局使用&quot;">​</a></h2><p>登录后就需要使用 WS 连接，可在全局接收和发送消息。在 vue 和 vuex 中使用如下：</p><p>1、配置 ws，路径：<code>src/store/modules/ws.js</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  namespaced</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  state</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    webSocket</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    noticeData</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {},</span></span>
<span class="line"><span style="color:#F8F8F2;">    biData</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {},</span></span>
<span class="line"><span style="color:#F8F8F2;">    refresh</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 通知消息列表页面去重新请求ajax数据</span></span>
<span class="line"><span style="color:#F8F8F2;">    heartTime</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">30000</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 客户端发起检测的时间间隔</span></span>
<span class="line"><span style="color:#F8F8F2;">    lockReconnect</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 是否真正建立连接</span></span>
<span class="line"><span style="color:#F8F8F2;">    clientTimer</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 心跳倒计时</span></span>
<span class="line"><span style="color:#F8F8F2;">    serverTimer</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 服务端心跳倒计时</span></span>
<span class="line"><span style="color:#F8F8F2;">    timeoutNum</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;">// 断开重连倒计时</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  mutations</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">init</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.webSocket </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">WebSocket</span><span style="color:#F8F8F2;">(p<wbr>rocess.env.</span><span style="color:#BD93F9;">VUE_APP_WS_URL</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.webSocket.</span><span style="color:#50FA7B;">onopen</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">连接成功</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#6272A4;">// 连接成功之后，发送token验证身份</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> tokenData </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          type</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">cmd</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 消息类型</span></span>
<span class="line"><span style="color:#F8F8F2;">          title</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">token</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 消息标题</span></span>
<span class="line"><span style="color:#F8F8F2;">          content</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.state.user.token, </span><span style="color:#6272A4;">// 消息内容</span></span>
<span class="line"><span style="color:#F8F8F2;">          from</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// TODO 发送者Id</span></span>
<span class="line"><span style="color:#F8F8F2;">          to</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">], </span><span style="color:#6272A4;">// 接收者Id数组</span></span>
<span class="line"><span style="color:#F8F8F2;">          ts</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Date</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">valueOf</span><span style="color:#F8F8F2;">(), </span><span style="color:#6272A4;">// 发送时间</span></span>
<span class="line"><span style="color:#F8F8F2;">          status</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;">// 消息状态</span></span>
<span class="line"><span style="color:#F8F8F2;">        };</span></span>
<span class="line"><span style="color:#F8F8F2;">        state.webSocket.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(tokenData));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#6272A4;">// 发送请求获取notice数据</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> noticeData </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> { type</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">json</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, title</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">messageNotice</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> };</span></span>
<span class="line"><span style="color:#F8F8F2;">        state.webSocket.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(noticeData));</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws/start</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.webSocket.</span><span style="color:#50FA7B;">onmessage</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> data </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">parse</span><span style="color:#F8F8F2;">(e.data);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#6272A4;">// 如果收到服务器信息，心跳重置</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (data.title </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">heartbeat</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">收到服务器心跳</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, data);</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws/reset</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (data.title </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">messageNotice</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> arr </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">parse</span><span style="color:#F8F8F2;">(data.content);</span></span>
<span class="line"><span style="color:#F8F8F2;">          console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(arr);</span></span>
<span class="line"><span style="color:#F8F8F2;">          state.noticeData </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> arr;</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (data.title </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">bi</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          state.biData </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> data;</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (data.title </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">refresh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          state.refresh </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Date</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">getTime</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.webSocket.</span><span style="color:#50FA7B;">onclose</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws关闭</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws/reconnect</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.webSocket.</span><span style="color:#50FA7B;">onerror</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws错误</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws/reconnect</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      };</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">send</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">data</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.webSocket.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(data));</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">close</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.webSocket.</span><span style="color:#50FA7B;">close</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// 心跳检测</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">start</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.clientTimer </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">clearTimeout</span><span style="color:#F8F8F2;">(state.clientTimer);</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.serverTimer </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">clearTimeout</span><span style="color:#F8F8F2;">(state.serverTimer);</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.clientTimer </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#6272A4;">// 如果连接正常</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (state.webSocket.readyState </span><span style="color:#FF79C6;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">          console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">连接正常</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> data </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">            type</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">cmd</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 消息类型</span></span>
<span class="line"><span style="color:#F8F8F2;">            title</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">heartbeat</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 消息标题</span></span>
<span class="line"><span style="color:#F8F8F2;">            content</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">666</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// 消息内容</span></span>
<span class="line"><span style="color:#F8F8F2;">            from</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">// TODO 发送者Id</span></span>
<span class="line"><span style="color:#F8F8F2;">            to</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">], </span><span style="color:#6272A4;">// 接收者Id数组</span></span>
<span class="line"><span style="color:#F8F8F2;">            ts</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Date</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">valueOf</span><span style="color:#F8F8F2;">(), </span><span style="color:#6272A4;">// 发送时间</span></span>
<span class="line"><span style="color:#F8F8F2;">            status</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;">// 消息状态</span></span>
<span class="line"><span style="color:#F8F8F2;">          };</span></span>
<span class="line"><span style="color:#F8F8F2;">          state.webSocket.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(data));</span></span>
<span class="line"><span style="color:#F8F8F2;">        } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">连接不正常要重连</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws/reconnect</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#6272A4;">// 超时关闭</span></span>
<span class="line"><span style="color:#F8F8F2;">        state.serverTimer </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          state.webSocket.</span><span style="color:#50FA7B;">close</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }, </span><span style="color:#BD93F9;">15000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }, state.heartTime);</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// 重新连接</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">reconnect</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (state.lockReconnect) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.lockReconnect </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">true</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.timeoutNum </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">clearTimeout</span><span style="color:#F8F8F2;">(state.timeoutNum);</span></span>
<span class="line"><span style="color:#F8F8F2;">      state.timeoutNum </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws/init</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        state.lockReconnect </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }, </span><span style="color:#BD93F9;">5000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// 重置心跳</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">reset</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">重置心跳</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">clearTimeout</span><span style="color:#F8F8F2;">(state.clientTimer);</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">clearTimeout</span><span style="color:#F8F8F2;">(state.serverTimer);</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws/start</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  actions</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">initWebSocket</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> ({ </span><span style="color:#FFB86C;font-style:italic;">commit</span><span style="color:#F8F8F2;"> }) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">init</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">({ </span><span style="color:#FFB86C;font-style:italic;">commit</span><span style="color:#F8F8F2;"> }, </span><span style="color:#FFB86C;font-style:italic;">data</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">commit</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">send</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, data);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre></div><p>客户端发起心跳检测的时间间隔设置的是 30 秒。在有些情况下，如果设置成 60 秒会造成 ws 销毁并重新创建新的连接。有可能是 nginx 配置的问题，也有可能是后端设置 ws 连接默认时间就是 1 分钟就断开连接</p><p>nginx 相关配置如下，时间数值自行调试，配置项可以参考<a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" target="_blank" rel="noreferrer">这里</a></p><p><a href="http://nginx.org/en/docs/http/websocket.html" target="_blank" rel="noreferrer">nginx 配置 WebSocket 代理</a></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">http </span><span style="color:#F1FA8C;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  server </span><span style="color:#F1FA8C;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    location </span><span style="color:#F1FA8C;">/</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#6272A4;"># ... 省略其他配置</span></span>
<span class="line"><span style="color:#F8F8F2;">        proxy_connect_timeout </span><span style="color:#F1FA8C;">4s</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        proxy_read_timeout </span><span style="color:#F1FA8C;">60s</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        proxy_send_timeout </span><span style="color:#F1FA8C;">12s</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        proxy_set_header </span><span style="color:#F1FA8C;">Upgrade</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">$http_upgrade</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        proxy_set_header </span><span style="color:#F1FA8C;">Connection</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">Upgrade</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>2、在全局组件（比如 <code>src/layout/AppMain.vue</code>）里初始化 ws，当有消息通知时要有声音提醒</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">section</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">class</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">app-main</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#FF5555;font-style:italic;text-decoration:underline;">transition</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">name</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">fade-transform</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">mode</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">out-in</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;</span><span style="color:#FF79C6;">router-view</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;/</span><span style="color:#FF5555;font-style:italic;text-decoration:underline;">transition</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;/</span><span style="color:#FF79C6;">section</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> { mapGetters } </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">vuex</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> mp3 </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">@/assets/media/warn.mp3</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">AppMain</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">data</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      audio</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      warningAlarmTimer</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">null</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  computed</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">...</span><span style="color:#50FA7B;">mapGetters</span><span style="color:#F8F8F2;">([</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">noticeData</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  watch</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">noticeData</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">newV</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (newV) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">playAlarmAudio</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">mounted</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// 初始化 ws</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$store.</span><span style="color:#50FA7B;">dispatch</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws/initWebSocket</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> that </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.audio </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Audio</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.audio.src </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> mp3;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">$nextTick</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      that.audio.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ended</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        that.audio.</span><span style="color:#50FA7B;">play</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      });</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">destroyed</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.$store.</span><span style="color:#50FA7B;">dispatch</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws/close</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  methods</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">playAlarmAudio</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.audio.currentTime </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.audio.</span><span style="color:#50FA7B;">play</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.warningAlarmTimer) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#50FA7B;">clearInterval</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.warningAlarmTimer);</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.warningAlarmTimer </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.audio.</span><span style="color:#50FA7B;">pause</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      }, </span><span style="color:#BD93F9;">6000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="sockjs-和-stomp" tabindex="-1">SockJS 和 Stomp <a class="header-anchor" href="#sockjs-和-stomp" aria-label="Permalink to &quot;SockJS 和 Stomp&quot;">​</a></h2><p><a href="http://jmesnil.net/stomp-websocket/doc/" target="_blank" rel="noreferrer">stomp-websocket</a></p><p>SockJS 是设计在浏览器中使用的，支持三种方式传输数据：WebSocket，HTTP Streaming，HTTP 长轮询</p><p>当 SockJS 发送 GET /info 请求的时候，服务端需要决定使用哪种传输格式，首先会检查 WebSocket，如果不行则使用 HTTP Streaming， 如果还是不行就使用 HTTP 的长轮询</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> SockJS </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">sockjs-client</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> Stomp </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">stompjs</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> stompClient;</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> WSURL </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ws://192.168.8.210:8083</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> token </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">jifodsjaoifjsf12345</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> serialNo </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">s12345</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> uuid </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ffsdfjsdlkaf</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">connectMonitorWs</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> socket </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">SockJS</span><span style="color:#F8F8F2;">(WSURL </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">?token=</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> token, </span><span style="color:#E9F284;">&#39;&#39;</span><span style="color:#F8F8F2;">, { timeout</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">10000</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">  stompClient </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> Stomp.</span><span style="color:#50FA7B;">over</span><span style="color:#F8F8F2;">(socket);</span></span>
<span class="line"><span style="color:#F8F8F2;">  stompClient.</span><span style="color:#50FA7B;">connect</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">    { serialNo</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> serialNo },</span></span>
<span class="line"><span style="color:#F8F8F2;">    () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">successCallback</span><span style="color:#F8F8F2;">(serialNo, uuid);</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    () </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#50FA7B;">setTimeout</span><span style="color:#F8F8F2;">(() </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#50FA7B;">connectMonitorWs</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      }, </span><span style="color:#BD93F9;">5000</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  );</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">successCallback</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">serialNo</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">uuid</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// 获取客户端连接编号</span></span>
<span class="line"><span style="color:#F8F8F2;">  stompClient.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#F1FA8C;">\`/app/monitor/client/code/</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">serialNo</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">, { </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">content-type</span><span style="color:#E9F284;">&#39;</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">text/plain</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> }, uuid);</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// 客户端连接编号下发</span></span>
<span class="line"><span style="color:#F8F8F2;">  stompClient.</span><span style="color:#50FA7B;">subscribe</span><span style="color:#F8F8F2;">(</span><span style="color:#F1FA8C;">\`/topic/monitor/client/code/</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">serialNo</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">/</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">uuid</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">msg</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> data </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">parse</span><span style="color:#F8F8F2;">(msg.body);</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// 申请主控制</span></span>
<span class="line"><span style="color:#F8F8F2;">  stompClient.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#F1FA8C;">\`/app/monitor/main/control/</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">serialNo</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// 主控制信号下发</span></span>
<span class="line"><span style="color:#F8F8F2;">  stompClient.</span><span style="color:#50FA7B;">subscribe</span><span style="color:#F8F8F2;">(</span><span style="color:#F1FA8C;">\`/topic/monitor/control/</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">serialNo</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">msg</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> data </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> msg.body;</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(data);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#6272A4;">// 如果自己的客户端的连接编号和主控制端的连接编号一致，那么自己就是主控制端</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#6272A4;">// 实时快照下发</span></span>
<span class="line"><span style="color:#F8F8F2;">  stompClient.</span><span style="color:#50FA7B;">subscribe</span><span style="color:#F8F8F2;">(</span><span style="color:#F1FA8C;">\`/topic/monitor/live/snapshot/</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">serialNo</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">, (</span><span style="color:#FFB86C;font-style:italic;">msg</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> data </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">parse</span><span style="color:#F8F8F2;">(msg.body);</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(data);</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 更新图片状态</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">updateImage</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">serialNo</span><span style="color:#F8F8F2;">, </span><span style="color:#FFB86C;font-style:italic;">params</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  stompClient.</span><span style="color:#50FA7B;">send</span><span style="color:#F8F8F2;">(</span><span style="color:#F1FA8C;">\`/app/monitor/image/status/</span><span style="color:#FF79C6;">\${</span><span style="color:#F8F8F2;">serialNo</span><span style="color:#FF79C6;">}</span><span style="color:#F1FA8C;">\`</span><span style="color:#F8F8F2;">, {}, </span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(params));</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 取消订阅</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">pauseSubscribe</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (stompClient) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    stompClient.</span><span style="color:#50FA7B;">unsubscribe</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 销毁ws连接</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">disconnect</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (stompClient) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    stompClient.</span><span style="color:#50FA7B;">disconnect</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div>`,20),F=[o];function e(t,c,r,y,i,C){return a(),n("div",null,F)}const m=s(p,[["render",e]]);export{B as __pageData,m as default};
