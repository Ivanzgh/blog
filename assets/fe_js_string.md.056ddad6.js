import{_ as a,c as n,o as l,x as s,a as p,Q as o}from"./chunks/framework.f14b72c3.js";const g=JSON.parse('{"title":"字符串","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"fe/js/string.md","lastUpdated":1683514170000}'),e={name:"fe/js/string.md"},F=s("h1",{id:"字符串",tabindex:"-1"},[p("字符串 "),s("a",{class:"header-anchor",href:"#字符串","aria-label":'Permalink to "字符串"'},"​")],-1),t=s("iframe",{id:"embed_dom",name:"embed_dom",frameborder:"0",style:{display:"block",width:"100%",height:"500px"},src:"https://www.processon.com/embed/642bcbd74b2eec0a2e99309a"},null,-1),c=o(`<h2 id="获取字符串长度" tabindex="-1">获取字符串长度 <a class="header-anchor" href="#获取字符串长度" aria-label="Permalink to &quot;获取字符串长度&quot;">​</a></h2><p><code>length</code>属性可以获取字符串长度，空格也会计算在内</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> s1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">string</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(s1.length) </span><span style="color:#6272A4;">// 6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> s2 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">How are you doing today?</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(s2.length) </span><span style="color:#6272A4;">// 24</span></span>
<span class="line"></span></code></pre></div><p>单个值可直接获取</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">1,3</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(str[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]) </span><span style="color:#6272A4;">// 1</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(str[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">]) </span><span style="color:#6272A4;">// ,</span></span>
<span class="line"></span></code></pre></div><h2 id="获取字符串指定位置的值" tabindex="-1">获取字符串指定位置的值 <a class="header-anchor" href="#获取字符串指定位置的值" aria-label="Permalink to &quot;获取字符串指定位置的值&quot;">​</a></h2><h3 id="charat" tabindex="-1">charAt() <a class="header-anchor" href="#charat" aria-label="Permalink to &quot;charAt()&quot;">​</a></h3><p>获取指定位置的字符</p><p>与通过索引值获取的区别是：</p><ul><li>当索引值不在字符串长度范围内时，str[index]会返回 undefined，而 charAt(index)会返回空字符串</li><li>str[index]不兼容 ie6-ie8，charAt(index)可以兼容</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">charAt</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// g</span></span>
<span class="line"><span style="color:#F8F8F2;">str[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">] </span><span style="color:#6272A4;">// g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">charAt</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// &#39;&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str[</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">] </span><span style="color:#6272A4;">// undefined</span></span>
<span class="line"></span></code></pre></div><p>示例：计算当前是星期几</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> day </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">今天是星期</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">日一二三四五六</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">charAt</span><span style="color:#F8F8F2;">(</span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Date</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">getDay</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"></span></code></pre></div><p>延伸：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> arr </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">日</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">一</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">二</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">三</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">四</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">五</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">六</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> week </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Date</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">getDay</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> day </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">今天是星期</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> arr[week]</span></span>
<span class="line"></span></code></pre></div><h3 id="chatcodeat" tabindex="-1">chatCodeAt() <a class="header-anchor" href="#chatcodeat" aria-label="Permalink to &quot;chatCodeAt()&quot;">​</a></h3><p>获取指定位置字符的 Unicode 值，返回值是 0 - 65535 之间的整数，表示给定索引处的 UTF-16 代码单元，如果指定位置没有字符，将返回 NaN</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abcdefg</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">charCodeAt</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 98</span></span>
<span class="line"></span></code></pre></div><h2 id="检索是否包含指定的字符" tabindex="-1">检索是否包含指定的字符 <a class="header-anchor" href="#检索是否包含指定的字符" aria-label="Permalink to &quot;检索是否包含指定的字符&quot;">​</a></h2><h3 id="indexof" tabindex="-1">indexOf() <a class="header-anchor" href="#indexof" aria-label="Permalink to &quot;indexOf()&quot;">​</a></h3><p>查找某个字符，有则返回第一次匹配到的索引位置，否则返回-1。接收两个参数：</p><ul><li>searchvalue：必需，规定需检索的字符串值</li><li>fromindex：可选的整数参数，规定开始检索的位置。取值范围是 0 到 <code>string.length - 1</code>。如省略则从首字符开始检索</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abcdefgabc</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(str.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#6272A4;">// 0</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(str.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">z</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#6272A4;">// -1</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(str.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">c</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">)) </span><span style="color:#6272A4;">// 9</span></span>
<span class="line"></span></code></pre></div><h3 id="lastindexof" tabindex="-1">lastIndexOf() <a class="header-anchor" href="#lastindexof" aria-label="Permalink to &quot;lastIndexOf()&quot;">​</a></h3><p>查找某个字符，返回最后一次匹配到的索引位置，否则返回-1</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zghzgh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">lastIndexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">z</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 3</span></span>
<span class="line"></span></code></pre></div><h3 id="includes" tabindex="-1">includes() <a class="header-anchor" href="#includes" aria-label="Permalink to &quot;includes()&quot;">​</a></h3><p>判断字符串是否包含指定的字符串。返回 true 或 false。接收两个参数：</p><ul><li>searchvalue：必需，要查找的字符串</li><li>start：可选，设置从那个位置开始查找，默认为 0</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">includes</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">g</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// true</span></span>
<span class="line"></span></code></pre></div><h3 id="startswith" tabindex="-1">startsWith() <a class="header-anchor" href="#startswith" aria-label="Permalink to &quot;startsWith()&quot;">​</a></h3><p>检测字符串是否以指定的字符串开始。返回 true 或 false。接收两个参数：字符串、查找位置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Hello world!</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">startsWith</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Hello</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">startsWith</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">wo</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">6</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// true</span></span>
<span class="line"></span></code></pre></div><h3 id="endswith" tabindex="-1">endsWith() <a class="header-anchor" href="#endswith" aria-label="Permalink to &quot;endsWith()&quot;">​</a></h3><p>检测字符串是否以指定的字符串结尾。返回 true 或 false。接收两个参数：</p><ul><li>要搜索的字符串</li><li>字符串的长度 n，从字符串的前 n 个字符中进行检索，默认值为原始字符串长度 string.length</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">Hello world!</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">endsWith</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">!</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// true</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">endsWith</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">lo</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// true</span></span>
<span class="line"></span></code></pre></div><h2 id="截取字符串" tabindex="-1">截取字符串 <a class="header-anchor" href="#截取字符串" aria-label="Permalink to &quot;截取字符串&quot;">​</a></h2><h3 id="substring" tabindex="-1">substring() <a class="header-anchor" href="#substring" aria-label="Permalink to &quot;substring()&quot;">​</a></h3><p>截取字符串中介于两个指定下标之间的字符</p><p>语法：<code>str.substring(start,end)</code></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>start</td><td>必需，非负整数</td></tr><tr><td>end</td><td>可选，非负整数，截取结果不包括该项</td></tr></tbody></table><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> a </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abcdef</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> b </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> a.</span><span style="color:#50FA7B;">substring</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(b) </span><span style="color:#6272A4;">// bc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 截取小数点后两位数字</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">22.123456</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> res </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> str.</span><span style="color:#50FA7B;">substring</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, str.</span><span style="color:#50FA7B;">indexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">.</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(res) </span><span style="color:#6272A4;">// 22.12</span></span>
<span class="line"></span></code></pre></div><h3 id="slice" tabindex="-1">slice() <a class="header-anchor" href="#slice" aria-label="Permalink to &quot;slice()&quot;">​</a></h3><p>语法：<code>str.slice(start, end)</code></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>start</td><td>必需，起始下标。如果是负数，那么它规定从字符串尾部开始算起的位置。即-1 指最后一个字符，-2 指倒数第二个字符，以此类推</td></tr><tr><td>end</td><td>可选，结束下标，不包含该处。如果没有指定该参数，那么结果包含从 start 到结束的所有字符。若为负数，同上</td></tr></tbody></table><p>示例：截取身份证</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">330102197807280020</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> res </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> str.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> res1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> str.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(res, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">**************</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(res1) </span><span style="color:#6272A4;">// 3301**************</span></span>
<span class="line"></span></code></pre></div><h3 id="substr" tabindex="-1">substr() <a class="header-anchor" href="#substr" aria-label="Permalink to &quot;substr()&quot;">​</a></h3><p>截取从 start 下标开始的指定数目的字符。<strong>作为遗留函数尽量避免使用</strong>，使用<code>substring()</code>代替</p><p>语法：<code>str.substr(start[, length])</code></p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">start</td><td style="text-align:left;">起始下标。如果是负数，如-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。</td></tr><tr><td style="text-align:center;">length</td><td style="text-align:left;">截取长度</td></tr></tbody></table><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> a </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abcdef</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#50FA7B;">substr</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// bcd</span></span>
<span class="line"><span style="color:#F8F8F2;">a.</span><span style="color:#50FA7B;">substr</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// abcdef，这里无参数</span></span>
<span class="line"></span></code></pre></div><h2 id="将字符串分割为数组" tabindex="-1">将字符串分割为数组 <a class="header-anchor" href="#将字符串分割为数组" aria-label="Permalink to &quot;将字符串分割为数组&quot;">​</a></h2><h3 id="split" tabindex="-1">split() <a class="header-anchor" href="#split" aria-label="Permalink to &quot;split()&quot;">​</a></h3><p>把一个字符串分割成字符串数组，不改变原始字符串</p><p>语法 <code>str.split(separator, howmany)</code></p><ul><li>separator：字符串或正则表达式，从该参数指定的地方分割</li><li>howmany：指定返回的数组的最大长度</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">hello world</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// [&#39;hello&#39;, &#39;world&#39;]</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// [&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39; &#39;, &#39;w&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;]</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// [&#39;hello&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">2:3:4:5</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">:</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// [&#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;]</span></span>
<span class="line"><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">|a|b|c</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">|</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// [&#39;&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span></span>
<span class="line"></span></code></pre></div><h2 id="连接多个字符串" tabindex="-1">连接多个字符串 <a class="header-anchor" href="#连接多个字符串" aria-label="Permalink to &quot;连接多个字符串&quot;">​</a></h2><h3 id="concat" tabindex="-1">concat() <a class="header-anchor" href="#concat" aria-label="Permalink to &quot;concat()&quot;">​</a></h3><p>连接多个字符串，不会改变原始数据，返回新的字符串</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">hello</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str2 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">world</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str3 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">!</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> res </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> str1.</span><span style="color:#50FA7B;">concat</span><span style="color:#F8F8F2;">(str2, str3) </span><span style="color:#6272A4;">// helloworld!</span></span>
<span class="line"></span></code></pre></div><p>在实际开发中，更多的是使用加操作符+、模版字符串\`\`</p><h2 id="匹配、替换" tabindex="-1">匹配、替换 <a class="header-anchor" href="#匹配、替换" aria-label="Permalink to &quot;匹配、替换&quot;">​</a></h2><h3 id="replace" tabindex="-1">replace() <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;replace()&quot;">​</a></h3><p>替换字符串，接收两个参数：</p><ul><li>被替换的字符串或者正则表达式</li><li>要替换的值，可以是字符串或者返回字符串的函数</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">z</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zhang</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// zhanggh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">hello world</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(</span><span style="color:#FF5555;">/</span><span style="color:#F1FA8C;">world</span><span style="color:#FF5555;">/</span><span style="color:#FF79C6;">gi</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// &#39;hello zgh&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="match" tabindex="-1">match() <a class="header-anchor" href="#match" aria-label="Permalink to &quot;match()&quot;">​</a></h3><p>在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。返回指定的值，不是位置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abcdef</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">match</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">c</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// [&quot;c&quot;, index: 2, input: &quot;abcdef&quot;, groups: undefined]</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">match</span><span style="color:#F8F8F2;">(</span><span style="color:#FF5555;">/</span><span style="color:#F1FA8C;">c</span><span style="color:#FF5555;">/</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// [&quot;c&quot;, index: 2, input: &quot;abcdef&quot;, groups: undefined]</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">match</span><span style="color:#F8F8F2;">(</span><span style="color:#FF5555;">/</span><span style="color:#F1FA8C;">c</span><span style="color:#FF5555;">/</span><span style="color:#FF79C6;">g</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// [&quot;c&quot;]</span></span>
<span class="line"></span></code></pre></div><h3 id="search" tabindex="-1">search() <a class="header-anchor" href="#search" aria-label="Permalink to &quot;search()&quot;">​</a></h3><p>检索字符串中指定的字符串，或检索与正则表达式相匹配的子字符串。返回字符串中第一个与正则表达式相匹配的子串的起始位置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">abcdef</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">search</span><span style="color:#F8F8F2;">(</span><span style="color:#FF5555;">/</span><span style="color:#F1FA8C;">bcd</span><span style="color:#FF5555;">/</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 1</span></span>
<span class="line"></span></code></pre></div><h2 id="大小写转换" tabindex="-1">大小写转换 <a class="header-anchor" href="#大小写转换" aria-label="Permalink to &quot;大小写转换&quot;">​</a></h2><h3 id="tolowercase" tabindex="-1">toLowerCase() <a class="header-anchor" href="#tolowercase" aria-label="Permalink to &quot;toLowerCase()&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">ZGH</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">toLowerCase</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// zgh</span></span>
<span class="line"></span></code></pre></div><h3 id="touppercase" tabindex="-1">toUpperCase() <a class="header-anchor" href="#touppercase" aria-label="Permalink to &quot;toUpperCase()&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">toUpperCase</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// ZGH</span></span>
<span class="line"></span></code></pre></div><h2 id="移除首尾空白符" tabindex="-1">移除首尾空白符 <a class="header-anchor" href="#移除首尾空白符" aria-label="Permalink to &quot;移除首尾空白符&quot;">​</a></h2><h3 id="trim" tabindex="-1">trim() <a class="header-anchor" href="#trim" aria-label="Permalink to &quot;trim()&quot;">​</a></h3><p>移除字符串首尾空白符，不会改变原始数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">  abcdef  </span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">trim</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// &quot;abcdef&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="trimstart" tabindex="-1">trimStart() <a class="header-anchor" href="#trimstart" aria-label="Permalink to &quot;trimStart()&quot;">​</a></h3><p>返回一个去除了开头空白的字符串，不会改变原始数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> s </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">  abc  </span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">s.</span><span style="color:#50FA7B;">trimStart</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// &quot;abc  &quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="trimend" tabindex="-1">trimEnd() <a class="header-anchor" href="#trimend" aria-label="Permalink to &quot;trimEnd()&quot;">​</a></h3><p>返回一个去除了结尾空白的字符串，不会改变原始数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> s </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">  abc  </span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">s.</span><span style="color:#50FA7B;">trimEnd</span><span style="color:#F8F8F2;">() </span><span style="color:#6272A4;">// &quot;  abc&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="重复字符串" tabindex="-1">重复字符串 <a class="header-anchor" href="#重复字符串" aria-label="Permalink to &quot;重复字符串&quot;">​</a></h2><h3 id="repeat" tabindex="-1">repeat() <a class="header-anchor" href="#repeat" aria-label="Permalink to &quot;repeat()&quot;">​</a></h3><p>重复字符串 n 次，不会改变原始数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">zgh</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">repeat</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">2</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// &#39;zghzgh&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="补齐字符串长度" tabindex="-1">补齐字符串长度 <a class="header-anchor" href="#补齐字符串长度" aria-label="Permalink to &quot;补齐字符串长度&quot;">​</a></h2><h3 id="padstart" tabindex="-1">padStart() <a class="header-anchor" href="#padstart" aria-label="Permalink to &quot;padStart()&quot;">​</a></h3><p>用于头部补全。接收两个参数：</p><ul><li>第一个参数是一个数字，表示字符串补齐之后的长度</li><li>第二个参数是用来补全的字符串 ​</li></ul><p>1、如果原字符串的长度，等于或大于指定的最小长度，则返回原字符串：<code>&#39;z&#39;.padStart(1, &#39;gh&#39;) // &#39;z&#39;</code></p><p>2、如果用来补全的字符串与原字符串，两者的长度之和超过了指定的最小长度，则会截去超出位数的补全字符串：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">z</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">padStart</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">gh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// &#39;ghghz&#39;</span></span>
<span class="line"></span></code></pre></div><p>3、如果省略第二个参数，默认使用空格补全长度：<code>&#39;z&#39;.padStart(4) // &#39; z&#39;</code></p><p>4、常见用途是为数值补全指定位数，例如将返回的数字补齐为三位：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">1</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">padStart</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">0</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 输出结果： &#39;001&#39;</span></span>
<span class="line"><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">15</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">padStart</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">0</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 输出结果： &#39;015&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="padend" tabindex="-1">padEnd() <a class="header-anchor" href="#padend" aria-label="Permalink to &quot;padEnd()&quot;">​</a></h3><p>用于尾部补全。接收两个参数，第一个参数是字符串补全生效的最大长度，第二个参数是用来补全的字符串</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">z</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">padEnd</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">gh</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// &#39;zghgh&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="字符串转为数字" tabindex="-1">字符串转为数字 <a class="header-anchor" href="#字符串转为数字" aria-label="Permalink to &quot;字符串转为数字&quot;">​</a></h2><h3 id="parseint" tabindex="-1">parseInt() <a class="header-anchor" href="#parseint" aria-label="Permalink to &quot;parseInt()&quot;">​</a></h3><p>可解析一个字符串，并返回一个整数。该方法有两个参数：</p><ul><li>string：必需。要被解析的字符串。</li><li>radix：可选。表示要解析的数字的基数。该值介于 2 ~ 36 之间。</li></ul><p>当参数 radix 的值为 0，或没有设置该参数时，parseInt() 会根据 string 来判断数字的基数。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#50FA7B;">parseInt</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">10</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 10</span></span>
<span class="line"><span style="color:#50FA7B;">parseInt</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">17</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">8</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 15</span></span>
<span class="line"><span style="color:#50FA7B;">parseInt</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">010</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 10</span></span>
<span class="line"></span></code></pre></div><p>当参数 radix 的值以 “0x” 或 “0X” 开头，将以 16 为基数：<code>parseInt(&quot;0x10&quot;) // 16</code></p><p>如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN：<code>parseInt(&quot;50&quot;, 1)</code></p><p>只有字符串中的第一个数字会被返回，当遇到第一个不是数字的字符为止:<code>parseInt(&quot;40 4years&quot;) // 40</code></p><p>如果字符串的第一个字符不能被转换为数字，就会返回 NaN：<code>parseInt(&quot;new100&quot;) // NaN</code></p><p>字符串开头和结尾的空格是允许的：<code>parseInt(&quot; 60 &quot;) // 60</code></p><h3 id="parsefloat" tabindex="-1">parseFloat() <a class="header-anchor" href="#parsefloat" aria-label="Permalink to &quot;parseFloat()&quot;">​</a></h3><p>可解析一个字符串，并返回一个浮点数。如果参数的第一个字符不能被解析成为数字，则返回 NaN</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#50FA7B;">parseFloat</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">10.00</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 10.00</span></span>
<span class="line"><span style="color:#50FA7B;">parseFloat</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">10.01</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 10.01</span></span>
<span class="line"><span style="color:#50FA7B;">parseFloat</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">-10.01</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// -10.01</span></span>
<span class="line"><span style="color:#50FA7B;">parseFloat</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">10.5 years</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 10.5</span></span>
<span class="line"><span style="color:#50FA7B;">parseFloat</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">new40.5</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// NaN</span></span>
<span class="line"></span></code></pre></div><h2 id="单双引号转换" tabindex="-1">单双引号转换 <a class="header-anchor" href="#单双引号转换" aria-label="Permalink to &quot;单双引号转换&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// 双引号替换成单引号</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> _adrobj </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">JSON</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">stringify</span><span style="color:#F8F8F2;">(address).</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(</span><span style="color:#FF5555;">/</span><span style="color:#F1FA8C;">\\&quot;</span><span style="color:#FF5555;">/</span><span style="color:#FF79C6;">g</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">&#39;</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 单引号替换成双引号</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> _nstr </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> _adrdata.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(</span><span style="color:#FF5555;">/</span><span style="color:#F1FA8C;">&#39;</span><span style="color:#FF5555;">/</span><span style="color:#FF79C6;">g</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">&quot;</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="手机号校验" tabindex="-1">手机号校验 <a class="header-anchor" href="#手机号校验" aria-label="Permalink to &quot;手机号校验&quot;">​</a></h2><p>校验手机号，号段主要有(不包括上网卡)：130~139、150~153，155~159，180~189、170~171、176~178。14 号段为上网卡专属号段</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">17813102539</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> phone </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> str.</span><span style="color:#50FA7B;">replace</span><span style="color:#F8F8F2;">(</span><span style="color:#FF5555;">/</span><span style="color:#BD93F9;">\\s</span><span style="color:#FF5555;">/</span><span style="color:#FF79C6;">g</span><span style="color:#F8F8F2;">, </span><span style="color:#E9F284;">&#39;&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">//去除空格</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> regs </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF5555;">/</span><span style="color:#FF79C6;">^</span><span style="color:#FFB86C;">((</span><span style="color:#F1FA8C;">13</span><span style="color:#8BE9FD;">[</span><span style="color:#BD93F9;">0-9</span><span style="color:#8BE9FD;">]</span><span style="color:#FFB86C;">)</span><span style="color:#FF79C6;">|</span><span style="color:#FFB86C;">(</span><span style="color:#F1FA8C;">17</span><span style="color:#8BE9FD;">[</span><span style="color:#BD93F9;">0-1</span><span style="color:#F1FA8C;">,</span><span style="color:#BD93F9;">6-8</span><span style="color:#8BE9FD;">]</span><span style="color:#FFB86C;">)</span><span style="color:#FF79C6;">|</span><span style="color:#FFB86C;">(</span><span style="color:#F1FA8C;">15</span><span style="color:#8BE9FD;">[</span><span style="color:#FF5555;">^</span><span style="color:#F1FA8C;">4,\\\\D</span><span style="color:#8BE9FD;">]</span><span style="color:#FFB86C;">)</span><span style="color:#FF79C6;">|</span><span style="color:#FFB86C;">(</span><span style="color:#F1FA8C;">18</span><span style="color:#8BE9FD;">[</span><span style="color:#BD93F9;">0-9</span><span style="color:#8BE9FD;">]</span><span style="color:#FFB86C;">))</span><span style="color:#BD93F9;">\\d</span><span style="color:#FF79C6;">{8}$</span><span style="color:#FF5555;">/</span></span>
<span class="line"><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (str.length </span><span style="color:#FF79C6;">==</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">alert</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">请输入手机号</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">} </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">regs.</span><span style="color:#50FA7B;">test</span><span style="color:#F8F8F2;">(phone)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">alert</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">请输入正确的手机号</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  } </span><span style="color:#FF79C6;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">success</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="utc-时间格式转化为本地时间" tabindex="-1">UTC 时间格式转化为本地时间 <a class="header-anchor" href="#utc-时间格式转化为本地时间" aria-label="Permalink to &quot;UTC 时间格式转化为本地时间&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">convertUTCTimeToLocalTime</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">UTCDateString</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#FF79C6;">!</span><span style="color:#F8F8F2;">UTCDateString) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">-</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">formatFunc</span><span style="color:#F8F8F2;">(</span><span style="color:#FFB86C;font-style:italic;">str</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">9</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">?</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">0</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> str</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> date2 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;font-weight:bold;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">Date</span><span style="color:#F8F8F2;">(UTCDateString)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> year </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> date2.</span><span style="color:#50FA7B;">getFullYear</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> mon </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">formatFunc</span><span style="color:#F8F8F2;">(date2.</span><span style="color:#50FA7B;">getMonth</span><span style="color:#F8F8F2;">() </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> day </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">formatFunc</span><span style="color:#F8F8F2;">(date2.</span><span style="color:#50FA7B;">getDate</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> hour </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> date2.</span><span style="color:#50FA7B;">getHours</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">  hour </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">formatFunc</span><span style="color:#F8F8F2;">(hour)</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> min </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">formatFunc</span><span style="color:#F8F8F2;">(date2.</span><span style="color:#50FA7B;">getMinutes</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> dateStr </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> year </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">-</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> mon </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">-</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> day </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> hour </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">:</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> min</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">return</span><span style="color:#F8F8F2;"> dateStr</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="截取时间日期" tabindex="-1">截取时间日期 <a class="header-anchor" href="#截取时间日期" aria-label="Permalink to &quot;截取时间日期&quot;">​</a></h2><p>将<code>yy-mm-dd HH:mm:ss</code>日期时间格式分割，得到日期和时间</p><ol><li><p>split</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> fullTime </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">2009-12-30 13:28:29</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> res </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> fullTime.</span><span style="color:#50FA7B;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> date </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> res[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> time </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> res[</span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span></code></pre></div></li><li><p>slice</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">2019-08-18  00:00:00</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">str.</span><span style="color:#50FA7B;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#BD93F9;">10</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">// 2019-08-18</span></span>
<span class="line"></span></code></pre></div></li></ol><h2 id="截取文件后缀" tabindex="-1">截取文件后缀 <a class="header-anchor" href="#截取文件后缀" aria-label="Permalink to &quot;截取文件后缀&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> fileName </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">file.pdf</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 方法1</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> fileExtension </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> fileName.</span><span style="color:#50FA7B;">substring</span><span style="color:#F8F8F2;">(fileName.</span><span style="color:#50FA7B;">lastIndexOf</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">.</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#FF79C6;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 方法2</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> fileExtension </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> fileName.</span><span style="color:#50FA7B;">substring</span><span style="color:#F8F8F2;">(fileName.length </span><span style="color:#FF79C6;">-</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">3</span><span style="color:#F8F8F2;">, fileName.length).</span><span style="color:#50FA7B;">toLowerCase</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// 方法3</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> fileExtension </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> fileName.</span><span style="color:#50FA7B;">split</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">.</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">pop</span><span style="color:#F8F8F2;">().</span><span style="color:#50FA7B;">toLowerCase</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre></div>`,133),r=[F,t,c];function y(i,d,h,C,u,A){return l(),n("div",null,r)}const E=a(e,[["render",y]]);export{g as __pageData,E as default};
