import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.f14b72c3.js";const h=JSON.parse('{"title":"DOM","description":"","frontmatter":{},"headers":[],"relativePath":"fe/js/dom.md","lastUpdated":1698246525000}'),p={name:"fe/js/dom.md"},o=l(`<h1 id="dom" tabindex="-1">DOM <a class="header-anchor" href="#dom" aria-label="Permalink to &quot;DOM&quot;">​</a></h1><p>DOM（Document Object Model） 文档对象模型</p><ul><li>Document：html 文档</li><li>Object：html 元素</li><li>Model：树模型</li></ul><p>是一组用来描述 js 代码怎样与 html 文档进行交互和访问的 web 标准，它定义了一系列对象、方法和属性，用于访问、操作和创建文档中的内容、结构、样式和行为。</p><blockquote><p>JavaScript 包括 DOM，JavaScript 由 ECMAScript、DOM、BOM 组成</p></blockquote><h2 id="节点" tabindex="-1">节点 <a class="header-anchor" href="#节点" aria-label="Permalink to &quot;节点&quot;">​</a></h2><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">a</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">href</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">http://www.baidu.com</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;百度&lt;/</span><span style="color:#FF79C6;">a</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>整个元素表示元素节点</li><li><code>href=&quot;http://www.baidu.com&quot;</code> 表示属性节点</li><li>百度 表示文本节点</li></ul><h2 id="操作元素节点" tabindex="-1">操作元素节点 <a class="header-anchor" href="#操作元素节点" aria-label="Permalink to &quot;操作元素节点&quot;">​</a></h2><ul><li>创建 createElement</li><li>插入 appendChild、insertBefore</li><li>复制 cloneNode</li><li>删除 removeChild</li><li>替换 replaceChild</li></ul><h3 id="createelement" tabindex="-1">createElement <a class="header-anchor" href="#createelement" aria-label="Permalink to &quot;createElement&quot;">​</a></h3><p>创建节点，创建好的元素并未添加进页面</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> h1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">h1</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(h1); </span><span style="color:#6272A4;">// &lt;h1&gt;&lt;/h1&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="appendchild、insertbefore" tabindex="-1">appendChild、insertBefore <a class="header-anchor" href="#appendchild、insertbefore" aria-label="Permalink to &quot;appendChild、insertBefore&quot;">​</a></h3><p>插入节点</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> h1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">h1</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> h2 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">h2</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> box </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">box</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">box.</span><span style="color:#50FA7B;">appendChild</span><span style="color:#F8F8F2;">(h1);</span></span>
<span class="line"><span style="color:#F8F8F2;">box.</span><span style="color:#50FA7B;">insertBefore</span><span style="color:#F8F8F2;">(h2, h1); </span><span style="color:#6272A4;">// 将h2添加到h1的前面</span></span>
<span class="line"></span></code></pre></div><h3 id="clonenode" tabindex="-1">cloneNode <a class="header-anchor" href="#clonenode" aria-label="Permalink to &quot;cloneNode&quot;">​</a></h3><p>复制节点</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// &lt;div id=&quot;box&quot;&gt;hello&lt;/div&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> box </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">box</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> rs </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> box.</span><span style="color:#50FA7B;">cloneNode</span><span style="color:#F8F8F2;">(); </span><span style="color:#6272A4;">// 浅复制</span></span>
<span class="line"><span style="color:#6272A4;">// let rs = box.cloneNode(true) // 深复制</span></span>
<span class="line"></span></code></pre></div><h3 id="removechild" tabindex="-1">removeChild <a class="header-anchor" href="#removechild" aria-label="Permalink to &quot;removeChild&quot;">​</a></h3><p>移除节点</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">/**</span></span>
<span class="line"><span style="color:#6272A4;">&lt;div id=&quot;box&quot;&gt;</span></span>
<span class="line"><span style="color:#6272A4;">    &lt;h1&gt;hello&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#6272A4;">    &lt;p&gt;world&lt;/p&gt;</span></span>
<span class="line"><span style="color:#6272A4;">&lt;/div&gt;</span></span>
<span class="line"><span style="color:#6272A4;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> box </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">box</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> rm </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementsByTagName</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">p</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">box.</span><span style="color:#50FA7B;">removeChild</span><span style="color:#F8F8F2;">(rm); </span><span style="color:#6272A4;">// 删除p元素</span></span>
<span class="line"></span></code></pre></div><h3 id="replacechild" tabindex="-1">replaceChild <a class="header-anchor" href="#replacechild" aria-label="Permalink to &quot;replaceChild&quot;">​</a></h3><p>替换节点</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">/**</span></span>
<span class="line"><span style="color:#6272A4;">&lt;div id=&quot;box&quot;&gt;</span></span>
<span class="line"><span style="color:#6272A4;">    &lt;h1&gt;hello&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#6272A4;">&lt;/div&gt;</span></span>
<span class="line"><span style="color:#6272A4;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> box </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">box</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> h1 </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> box.</span><span style="color:#50FA7B;">getElementsByTagName</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">h1</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> p </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">p</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">box.</span><span style="color:#50FA7B;">replaceChild</span><span style="color:#F8F8F2;">(p, h1);</span></span>
<span class="line"></span></code></pre></div><h2 id="操作属性节点" tabindex="-1">操作属性节点 <a class="header-anchor" href="#操作属性节点" aria-label="Permalink to &quot;操作属性节点&quot;">​</a></h2><p>两种操作方式：</p><ul><li><em>对象.属性</em></li><li><code>setAttribute()</code>、<code>getAttribute()</code></li></ul><p><em>对象.属性</em> 方式只对 html 中定义的属性起作用，可获取或修改属性</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// &lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">let</span><span style="color:#F8F8F2;"> a </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">getElementsByTagName</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">a</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#BD93F9;">0</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(a.href);</span></span>
<span class="line"><span style="color:#6272A4;">// a.href = &#39;xxx&#39;</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>属性节点并没有作为节点出现</p></div><h2 id="操作文本节点" tabindex="-1">操作文本节点 <a class="header-anchor" href="#操作文本节点" aria-label="Permalink to &quot;操作文本节点&quot;">​</a></h2><h2 id="事件绑定的方式" tabindex="-1">事件绑定的方式 <a class="header-anchor" href="#事件绑定的方式" aria-label="Permalink to &quot;事件绑定的方式&quot;">​</a></h2><ul><li>行内绑定</li><li>动态绑定</li><li>事件监听</li></ul><h3 id="行内绑定" tabindex="-1">行内绑定 <a class="header-anchor" href="#行内绑定" aria-label="Permalink to &quot;行内绑定&quot;">​</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">input</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">type</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">button</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">onclick</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#50FA7B;">display</span><span style="color:#F8F8F2;">()</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="动态绑定" tabindex="-1">动态绑定 <a class="header-anchor" href="#动态绑定" aria-label="Permalink to &quot;动态绑定&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// &lt;input id=&quot;demo&quot; type=&quot;button&quot; value=&quot;点击我，显示 type 属性&quot; /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#50FA7B;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">demo</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#50FA7B;">onclick</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> () {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#50FA7B;">alert</span><span style="color:#F8F8F2;">(</span><span style="color:#BD93F9;font-style:italic;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#50FA7B;">getAttribute</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">type</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre></div><h3 id="事件监听" tabindex="-1">事件监听 <a class="header-anchor" href="#事件监听" aria-label="Permalink to &quot;事件监听&quot;">​</a></h3><p>用 <code>addEventListener()</code> 或 <code>attachEvent()</code> 来绑定事件监听函数</p><p>IE8.0 及其以下版本不支持<code>addEventListener()</code> ，它使用<code>attachEvent()</code>来绑定事件监听函数</p><h2 id="target-和-currenttarget-的区别" tabindex="-1">target 和 currentTarget 的区别 <a class="header-anchor" href="#target-和-currenttarget-的区别" aria-label="Permalink to &quot;target 和 currentTarget 的区别&quot;">​</a></h2><p><code>e.target</code> 指向触发事件监听的对象</p><p><code>e.currentTarget</code> 指向添加监听事件的对象</p><h2 id="事件冒泡、事件捕获、事件委托" tabindex="-1">事件冒泡、事件捕获、事件委托 <a class="header-anchor" href="#事件冒泡、事件捕获、事件委托" aria-label="Permalink to &quot;事件冒泡、事件捕获、事件委托&quot;">​</a></h2><p>1、事件冒泡</p><p>当一个元素触发了某个事件后，该事件会向上冒泡到该元素的所有祖先元素，直到 HTML 文档的根元素为止。比如，当点击一个子元素时，点击事件会先在子元素上触发，然后冒泡到父元素，再冒泡到更高级别的祖先元素</p><p>2、事件捕获</p><p>和事件冒泡相反的概念，即事件从最外层的元素开始捕获，然后逐级向下，直到达到触发事件的元素。这种方式一般不常用</p><p>3、事件委托</p><p>利用事件冒泡原理，将事件处理器绑定到某个父元素上，然后通过冒泡传递到子元素上触发。这样做可以减少事件处理器的数量，提高性能</p><p>4、如何阻止事件冒泡</p><p>使用事件对象的 <code>stopPropagation()</code> 方法</p><p>5、如何阻止默认事件</p><p>使用事件对象的 <code>preventDefault()</code> 方法。浏览器默认行为有链接跳转、表单提交等</p><p>代码示例：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#FF79C6;">div</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">id</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">parent</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#FF79C6;">div</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;font-style:italic;">id</span><span style="color:#FF79C6;">=</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">child</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">&gt;Click me!&lt;/</span><span style="color:#FF79C6;">div</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#FF79C6;">div</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>事件冒泡示例</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> parent </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">#parent</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> child </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">#child</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">parent.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">click</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">父元素被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">child.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">click</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">子元素被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">click</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">document被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre></div><p>事件捕获示例：在事件监听器中添加了一个参数 <code>useCapture</code>，设置为 true 即是事件捕获</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">parent.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">click</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">父元素被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#BD93F9;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">child.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">click</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">子元素被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#BD93F9;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">document.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">click</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">document被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#BD93F9;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span></code></pre></div><p>事件委托示例，将事件监听器绑定到父元素上，然后利用 <code>e.target</code> 属性判断是否点击的是子元素，从而触发相应的事件处理器</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// &lt;div id=&quot;parent&quot;&gt;</span></span>
<span class="line"><span style="color:#6272A4;">//   &lt;div id=&quot;child1&quot;&gt;Click me!&lt;/div&gt;</span></span>
<span class="line"><span style="color:#6272A4;">//   &lt;div class=&quot;child2&quot;&gt;Click me!&lt;/div&gt;</span></span>
<span class="line"><span style="color:#6272A4;">// &lt;/div&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">const</span><span style="color:#F8F8F2;"> parent </span><span style="color:#FF79C6;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#50FA7B;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">#parent</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">parent.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">click</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (e.target </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> e.target.</span><span style="color:#50FA7B;">matches</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">#child1</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">子元素1被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#FF79C6;">if</span><span style="color:#F8F8F2;"> (e.target </span><span style="color:#FF79C6;">&amp;&amp;</span><span style="color:#F8F8F2;"> e.target.</span><span style="color:#50FA7B;">matches</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">.child2</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">子元素2被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre></div><p>阻止事件冒泡示例，在子元素的事件监听器中调用 <code>e.stopPropagation()</code> 方法，以阻止事件冒泡到父元素</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">parent.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">click</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">父元素被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">child.</span><span style="color:#50FA7B;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">click</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">子元素被点击</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  e.</span><span style="color:#50FA7B;">stopPropagation</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="getboundingclientrect" tabindex="-1">getBoundingClientRect <a class="header-anchor" href="#getboundingclientrect" aria-label="Permalink to &quot;getBoundingClientRect&quot;">​</a></h2><p>获取元素的大小及其相对于视口的位置</p><p><img src="https://zghimg.oss-cn-beijing.aliyuncs.com/blog/1666418111.png" alt="image"></p><h2 id="scrollheight、clientheight、innerheight" tabindex="-1">scrollHeight、clientHeight、innerHeight <a class="header-anchor" href="#scrollheight、clientheight、innerheight" aria-label="Permalink to &quot;scrollHeight、clientHeight、innerHeight&quot;">​</a></h2>`,69),e=[o];function t(F,c,r,y,i,d){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{h as __pageData,C as default};
