import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.f14b72c3.js";const C=JSON.parse('{"title":"Rollup","description":"","frontmatter":{},"headers":[],"relativePath":"build/rollup/index.md","lastUpdated":1681036152000}'),p={name:"build/rollup/index.md"},o=l(`<h1 id="rollup" tabindex="-1">Rollup <a class="header-anchor" href="#rollup" aria-label="Permalink to &quot;Rollup&quot;">​</a></h1><p>官网：<a href="https://rollupjs.org/guide/en/" target="_blank" rel="noreferrer">https://rollupjs.org/guide/en/</a></p><p>仓库地址：<a href="https://github.com/rollup/rollup" target="_blank" rel="noreferrer">https://github.com/rollup/rollup</a></p><p>中文文档：<a href="https://www.rollupjs.com/" target="_blank" rel="noreferrer">https://www.rollupjs.com/</a></p><p><code>Rollup</code> 是一个<code>JavaScript</code>模块打包器，可以将小块代码编译成大块复杂的代码，例如 library 或应用程序。</p><h2 id="快速上手" tabindex="-1">快速上手 <a class="header-anchor" href="#快速上手" aria-label="Permalink to &quot;快速上手&quot;">​</a></h2><p>安装</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">i</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">rollup</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-g</span><span style="color:#F8F8F2;">        </span><span style="color:#6272A4;"># 全局安装</span></span>
<span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">i</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">rollup</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-D</span><span style="color:#F8F8F2;">        </span><span style="color:#6272A4;"># 项目本地安装</span></span>
<span class="line"></span></code></pre></div><p>首先初始化一个项目<code>npm init -y</code>，在<code>src</code>文件夹下新建<code>main.js</code>和<code>foo.js</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#6272A4;">// foo.js</span></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#50FA7B;">hello</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#50FA7B;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">hello world</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6272A4;">// main.js</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> { hello } </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./foo.js</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#50FA7B;">hello</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span></code></pre></div><p>在<code>package.json</code>中添加打包命令，然后执行<code>npm run build</code>即可得到打包后的<code>bundle.js</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">build</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E9F284;"> &quot;</span><span style="color:#F1FA8C;">rollup -i src/main.js -o dist/bundle.js -f es</span><span style="color:#E9F284;">&quot;</span></span>
<span class="line"></span></code></pre></div><ul><li><code>-i</code>（--input）后面的<code>src/main.js</code>表示入口文件</li><li><code>-o</code>（--output.file）后面的<code>dist/bundle.js</code>表示打包后的文件目录</li><li><code>-f</code>（--format）指定打包格式，<code>es</code>表示 ESM，即<code>ES6</code>模块规范</li></ul><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><p>在项目根目录下新建一个<code>rollup.config.js</code>文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  input</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./src/main.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  output</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    file</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./dist/bundle.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    format</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">es</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>然后修改打包命令为<code>&quot;build&quot;: &quot;rollup -c&quot;</code>即可</p><p>也可以按多种规范打包，如下配置会得到 3 个不同的文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  input</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./src/main.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  output</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">      file</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./dist/bundle-umd.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      format</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">umd</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">bundle</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">      file</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./dist/bundle-es.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      format</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">es</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">      file</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./dist/bundle-cjs.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      format</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">cjs</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  ]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>rollup 支持的打包文件的格式有<code>amd</code>、<code>cjs</code>、<code>es/esm</code>、<code>iife</code>、<code>umd</code></p><p>其中<code>amd</code>为<code>AMD</code>规范，<code>cjs</code>为<code>CommonJS</code>规范，<code>esm/es</code>为<code>ES</code>模块规范，<code>iife</code>为立即调用函数， <code>umd</code>同时支持 <code>amd</code>、<code>cjs</code> 和 <code>iife</code></p><h2 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h2><h3 id="支持-es6-语法" tabindex="-1">支持 ES6 语法 <a class="header-anchor" href="#支持-es6-语法" aria-label="Permalink to &quot;支持 ES6 语法&quot;">​</a></h3><p><code>rollup-plugin-babel</code>用于转换 ES6 语法</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">i</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">rollup-plugin-babel</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">@babel/core</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">@babel/preset-env</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-D</span></span>
<span class="line"></span></code></pre></div><p>首先配置<code>rollup.config.js</code>文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> babel </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">rollup-plugin-babel</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  input</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./src/main.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  output</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    file</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./dist/bundle.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    format</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">es</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">babel</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      exclude</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">node_modules/**</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">  ]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>然后在项目根目录下新建<code>.babelrc</code>文件</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#8BE9FE;">&quot;</span><span style="color:#8BE9FD;">presets</span><span style="color:#8BE9FE;">&quot;</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [[</span><span style="color:#E9F284;">&quot;</span><span style="color:#F1FA8C;">@babel/preset-env</span><span style="color:#E9F284;">&quot;</span><span style="color:#F8F8F2;">]]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="支持-commonjs-规范" tabindex="-1">支持 CommonJS 规范 <a class="header-anchor" href="#支持-commonjs-规范" aria-label="Permalink to &quot;支持 CommonJS 规范&quot;">​</a></h3><p>rollup 默认不支持<code>CommonJS</code>规范，但是第三方库可能使用的是<code>cjs</code>，配置<code>rollup-plugin-commonjs</code>插件即可</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">i</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">rollup-plugin-commonjs</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-D</span></span>
<span class="line"></span></code></pre></div><p>配置<code>rollup.config.js</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> commonjs </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">rollup-plugin-commonjs</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  input</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./src/main.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  output</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    file</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./dist/bundle.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    format</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">es</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#50FA7B;">commonjs</span><span style="color:#F8F8F2;">()]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="css-处理" tabindex="-1">CSS 处理 <a class="header-anchor" href="#css-处理" aria-label="Permalink to &quot;CSS 处理&quot;">​</a></h3><p><code>rollup-plugin-postcss</code>插件支持 css 文件的加载、css 加前缀、css 压缩、对 scss/less 的支持等</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">i</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">rollup-plugin-postcss</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">postcss</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-D</span></span>
<span class="line"></span></code></pre></div><p><code>rollup.config.js</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> postcss </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">rollup-plugin-postcss</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  input</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./src/main.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  output</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    file</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./dist/bundle.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    format</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">es</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#50FA7B;">postcss</span><span style="color:#F8F8F2;">()]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p><code>autoprefixer</code>插件可以自动给 css 加前缀</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">i</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">autoprefixer@9.8.6</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-D</span></span>
<span class="line"></span></code></pre></div><p>css 压缩</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki dracula"><code><span class="line"><span style="color:#F8F8F2;">npm </span><span style="color:#F1FA8C;">i</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">cssnano</span><span style="color:#F8F8F2;"> </span><span style="color:#F1FA8C;">cssnano-preset-default</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">-D</span></span>
<span class="line"></span></code></pre></div><p>抽离 css 文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#50FA7B;">postcss</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#50FA7B;">autoprefixer</span><span style="color:#F8F8F2;">(), </span><span style="color:#50FA7B;">cssnano</span><span style="color:#F8F8F2;">()],</span></span>
<span class="line"><span style="color:#F8F8F2;">  extract</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">css/index.css</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre></div><p>默认支持 scss、less、stylus</p><h3 id="代码压缩" tabindex="-1">代码压缩 <a class="header-anchor" href="#代码压缩" aria-label="Permalink to &quot;代码压缩&quot;">​</a></h3><p><code>rollup-plugin-terser</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> { terser } </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">rollup-plugin-terser</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span><span style="color:#50FA7B;">terser</span><span style="color:#F8F8F2;">()]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="热更新" tabindex="-1">热更新 <a class="header-anchor" href="#热更新" aria-label="Permalink to &quot;热更新&quot;">​</a></h3><p><code>rollup-plugin-serve</code>用于启动一个服务器，<code>rollup-plugin-livereload</code>用于文件变化时，实时刷新页面</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula"><code><span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> serve </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">rollup-plugin-serve</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#FF79C6;">import</span><span style="color:#F8F8F2;"> livereload </span><span style="color:#FF79C6;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">rollup-plugin-livereload</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF79C6;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#FF79C6;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  input</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./src/main.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  output</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    file</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">./dist/bundle-umd.js</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    name</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">umd</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    format</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">umd</span><span style="color:#E9F284;">&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">serve</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      contentBase</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E9F284;">&#39;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#6272A4;">//服务器启动的文件夹，默认是项目根目录，需要在该文件下创建index.html</span></span>
<span class="line"><span style="color:#F8F8F2;">      port</span><span style="color:#FF79C6;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#BD93F9;">8081</span><span style="color:#F8F8F2;"> </span><span style="color:#6272A4;">//端口号，默认10001</span></span>
<span class="line"><span style="color:#F8F8F2;">    }),</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#50FA7B;">livereload</span><span style="color:#F8F8F2;">(</span><span style="color:#E9F284;">&#39;</span><span style="color:#F1FA8C;">dist</span><span style="color:#E9F284;">&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#6272A4;">//监听dist目录，当目录中的文件发生变化时，刷新页面</span></span>
<span class="line"><span style="color:#F8F8F2;">  ]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre></div><p>在<code>index.html</code>中引入打包文件<code>&lt;script src=&quot;./dist/bundle-umd.js&quot;&gt;&lt;/script&gt;</code></p><p>此时修改src下的源代码并不会刷新页面，需更改打包命令为<code>&quot;build&quot;: &quot;rollup -wc&quot;</code>即可，添加<code>-w</code>或<code>--watch</code></p>`,54),e=[o];function F(c,t,r,y,i,d){return n(),a("div",null,e)}const m=s(p,[["render",F]]);export{C as __pageData,m as default};
